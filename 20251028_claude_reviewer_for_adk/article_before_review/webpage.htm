<!DOCTYPE html>
<!-- saved from url=(0111)https://google.github.io/adk-docs/streaming/custom-streaming-ws/#agent_to_client_messagingwebsocket-live_events -->
<html lang="en" class="js-focus-visible js" data-js-focus-visible=""><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
      
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="Build powerful multi-agent systems with Agent Development Kit">
      
      
      
        
      
      
        
      
      
        
      
      
      <link rel="icon" href="./webpage_files/agent-development-kit.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.14">
    
    
      
        
      
    
    
      <link rel="stylesheet" href="./webpage_files/main.342714a4.min.css">
      
        
        <link rel="stylesheet" href="./webpage_files/palette.06af60db.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="">
        <link rel="stylesheet" href="./webpage_files/css">
        <style>:root{--md-text-font:"Google Sans";--md-code-font:"Roboto Mono"}</style>
      
    
    
      <link rel="stylesheet" href="./webpage_files/custom.css">
    
    
    
      
  


  
  

<script id="__analytics">function __md_analytics(){function e(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],e("js",new Date),e("config","G-DKHZS27PHP"),document.addEventListener("DOMContentLoaded",(function(){document.forms.search&&document.forms.search.query.addEventListener("blur",(function(){this.value&&e("event","search",{search_term:this.value})}));document$.subscribe((function(){var t=document.forms.feedback;if(void 0!==t)for(var a of t.querySelectorAll("[type=submit]"))a.addEventListener("click",(function(a){a.preventDefault();var n=document.location.pathname,d=this.getAttribute("data-md-value");e("event","feedback",{page:n,data:d}),t.firstElementChild.disabled=!0;var r=t.querySelector(".md-feedback__note [data-md-value='"+d+"']");r&&(r.hidden=!1)})),t.hidden=!1})),location$.subscribe((function(t){e("config","G-DKHZS27PHP",{page_path:t.pathname})}))}));var t=document.createElement("script");t.async=!0,t.src="https://www.googletagmanager.com/gtag/js?id=G-DKHZS27PHP",document.getElementById("__analytics").insertAdjacentElement("afterEnd",t)}</script>
  
    <script>if("undefined"!=typeof __md_analytics){var consent=__md_get("__consent");consent&&consent.analytics&&__md_analytics()}</script>
  

    
    
    
  <!-- HTML Meta Tags -->
  <title>Agent Development Kit</title>
  <meta name="description" content="Build powerful multi-agent systems with Agent Development Kit">

  <!-- Facebook Meta Tags -->
  <meta property="og:url" content="https://google.github.io/adk-docs">
  <meta property="og:type" content="website">
  <meta property="og:title" content="Agent Development Kit">
  <meta property="og:description" content="Build powerful multi-agent systems with Agent Development Kit">
  <meta property="og:image" content="https://google.github.io/adk-docs/assets/adk-social-card.png">

  <!-- Twitter Meta Tags -->
  <meta name="twitter:card" content="summary_large_image">
  <meta property="twitter:domain" content="google.github.io">
  <meta property="twitter:url" content="https://google.github.io/adk-docs">
  <meta name="twitter:title" content="Agent Development Kit">
  <meta name="twitter:description" content="Build powerful multi-agent systems with Agent Development Kit">
  <meta name="twitter:image" content="https://google.github.io/adk-docs/assets/adk-social-card.png">

  <meta name="theme-color" content="#ffffff"><meta name="color-scheme" content="light"><link rel="canonical" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/"><link rel="prev" href="https://google.github.io/adk-docs/streaming/custom-streaming/"><link rel="next" href="https://google.github.io/adk-docs/streaming/dev-guide/part1/"><title>Custom Audio Bidi-streaming app sample (WebSockets) - Agent Development Kit</title><script>__md_scope=new URL("../..",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script></head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="white" data-md-color-accent="white" data-md-color-media="">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
        
        <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#custom-streaming-websocket" class="md-skip">
          Skip to content
        </a>
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      <!--
 Copyright 2025 Google LLC

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- Determine classes -->


  


<!-- Header -->
<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">

    <!-- Link to home -->
    <a href="https://google.github.io/adk-docs/" title="Agent Development Kit" class="md-header__button md-logo" aria-label="Agent Development Kit" data-md-component="logo">
      
  <img src="./webpage_files/agent-development-kit.png" alt="logo">

    </a>

    <!-- Button to open drawer -->
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"></path></svg>
    </label>

    <!-- Header title -->
    <div class="md-header__title md-header__title--active" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            <a href="https://google.github.io/adk-docs/" title="Agent Development Kit" aria-label="Agent Development Kit" data-md-component="logo">
            Agent Development Kit
            </a>
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              Custom Audio Bidi-streaming app sample (WebSockets)
            
            
          </span>
        </div>
      </div>
    </div>

    <!-- Color palette toggle -->
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="white" data-md-color-accent="white" aria-label="Switch to dark mode" type="radio" name="__palette" id="__palette_0">
    
      <label class="md-header__button md-icon" for="__palette_1" title="Switch to dark mode">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a4 4 0 0 0-4 4 4 4 0 0 0 4 4 4 4 0 0 0 4-4 4 4 0 0 0-4-4m0 10a6 6 0 0 1-6-6 6 6 0 0 1 6-6 6 6 0 0 1 6 6 6 6 0 0 1-6 6m8-9.31V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12z"></path></svg>
      </label>
    
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="slate" data-md-color-primary="white" data-md-color-accent="white" aria-label="Switch to light mode" type="radio" name="__palette" id="__palette_1">
    
      <label class="md-header__button md-icon" title="Switch to light mode" for="__palette_0" hidden="">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6a6 6 0 0 1 6 6 6 6 0 0 1-6 6m8-9.31V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12z"></path></svg>
      </label>
    
  
</form>
      
    

    <!-- User preference: color palette -->
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    

    <!-- Site language selector -->
    

    <!-- Button to open search modal -->
    
      

      <!-- Check if search is actually enabled - see https://t.ly/DT_0V -->
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"></path></svg>
        </label>

        <!-- Search interface -->
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search" data-gtm-form-interact-id="0">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required="" data-gtm-form-interact-field-id="0">
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"></path></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"></path></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0">
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">14 matching documents</div>
          <ol class="md-search-result__list" role="presentation"><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/context/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Context</h1></article></a><a href="https://google.github.io/adk-docs/context/#advanced-direct-invocationcontext-usage" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1654.41"><h2>Advanced: Direct <code><mark>InvocationContext</mark></code> Usage</h2><pre><code># Pseudocode: Inside agent's _run_async_impl
from google.adk.agents import BaseAgent
from google.adk.agents.invocation_context import <mark>InvocationContext</mark>
from google.adk.events import Event
from typing import AsyncGenerator

class MyControllingAgent(BaseAgent):
    async def _run_async_impl(self, ctx: <mark>InvocationContext)</mark> -&gt; AsyncGenerator[Event, None]:
        # Example: Check if a specific service is available
        if not ctx.memory_service:
            print("Memory service is not available for this invocation.")
            # Potentially change agent behavior

        # Example: Early termination based on some condition
        if ctx.session.state.get("critical_error_flag"):
            print("Critical error detected, ending invocation.")
            ctx.end_invocation = True # Signal framework to stop processing
            yield Event(author=self.name, invocation_id=ctx.invocation_id, content="Stopping due to critical error.")
            return # Stop this agent's execution

        # ... Normal agent processing ...
        yield # ... event ...
</code></pre><p>Setting <code>ctx.end_invocation = True</code> is a way to gracefully stop the entire request-response cycle from within the agent or its callbacks/tools (via their respective context objects which also have access to modify the underlying <code><mark>InvocationContext</mark></code>'s flag).</p></article></a><details class="md-search-result__more"><summary tabindex="-1"><div>4 more on this page</div></summary><a href="https://google.github.io/adk-docs/context/#the-different-types-of-context" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="15.09"><h2>The Different types of Context</h2><p>While <code><mark>InvocationContext</mark></code> acts as the comprehensive internal container, ADK provides specialized context objects tailored to specific situations. This ensures you have the right tools and permissions for the task at hand without needing to handle the full complexity of the internal context everywhere. Here are the different "flavors" you'll encounter:</p><ol> <li> <p><code><mark>InvocationContext</mark></code></p> <ul> <li>Where Used: Received as the <code>ctx</code> argument directly within an agent's core implementation methods (<code>_run_async_impl</code>, <code>_run_live_impl</code>).</li> <li>Purpose: Provides access to the entire state of the current invocation. This is the most comprehensive context object.</li> <li>Key Contents: Direct access to <code>session</code> (including <code>state</code> and <code>events</code>), the current <code>agent</code> instance, <code>invocation_id</code>, initial <code>user_content</code>, references to configured services (<code>artifact_service</code>, <code>memory_service</code>, <code>session_service</code>), and fields related to live/streaming modes.</li> <li>Use Case: Primarily used when the agent's core logic needs direct access to the overall session or services, though often state and artifact interactions are delegated to callbacks/tools which use their own contexts. Also used to control the invocation itself (e.g., setting <code>ctx.end_invocation = True</code>).</li> </ul> PythonJava <pre><code># Pseudocode: Agent implementation receiving <mark>InvocationContext</mark>
from google.adk.agents import BaseAgent
from google.adk.agents.invocation_context import <mark>InvocationContext</mark>
from google.adk.events import Event
from typing import AsyncGenerator

class MyAgent(BaseAgent):
    async def _run_async_impl(self, ctx: <mark>InvocationContext)</mark> -&gt; AsyncGenerator[Event, None]:
        # Direct access example
        agent_name = ctx.agent.name
        session_id = ctx.session.id
        print(f"Agent {agent_name} running in session {session_id} for invocation {ctx.invocation_id}")
        # ... agent logic using ctx ...
        yield # ... event ...
</code></pre> <pre><code>// Pseudocode: Agent implementation receiving <mark>InvocationContext</mark>
import com.google.adk.agents.BaseAgent;
import com.google.adk.agents.InvocationContext;

    LlmAgent root_agent =
        LlmAgent.builder()
            .model("gemini-***")
            .name("sample_agent")
            .description("Answers user questions.")
            .instruction(
                """
                provide instruction for the agent here.
                """
            )
            .tools(sampleTool)
            .outputKey("YOUR_KEY")
            .build();

    ConcurrentMap&lt;String, Object&gt; initialState = new ConcurrentHashMap&lt;&gt;();
    initialState.put("YOUR_KEY", "");

    InMemoryRunner runner = new InMemoryRunner(agent);
    Session session =
          runner
              .sessionService()
              .createSession(runner.appName(), USER_ID, initialState, SESSION_ID )
              .blockingGet();

   try (Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8)) {
        while (true) {
          System.out.print("\nYou &gt; ");
          String userInput = scanner.nextLine();

          if ("quit".equalsIgnoreCase(userInput)) {
            break;
          }

          Content userMsg = Content.fromParts(Part.fromText(userInput));
          Flowable&lt;Event&gt; events = 
                  runner.runAsync(session.userId(), session.id(), userMsg);

          System.out.print("\nAgent &gt; ");
          events.blockingForEach(event -&gt; 
                  System.out.print(event.stringifyContent()));
      }

    protected Flowable&lt;Event&gt; runAsyncImpl(InvocationContext <mark>invocationContext)</mark> {
        // Direct access example
        String agentName = <mark>invocationContext.agent.name</mark>
        String sessionId = <mark>invocationContext.session.id</mark>
        String invocationId = <mark>invocationContext.invocationId</mark>
        System.out.println("Agent " + agent_name + " running in session " + session_id + " for invocation " + invocationId)
        // ... agent logic using ctx ...
    }
</code></pre> </li> <li> <p><code>ReadonlyContext</code></p> <ul> <li>Where Used: Provided in scenarios where only read access to basic information is needed and mutation is disallowed (e.g., <code>InstructionProvider</code> functions). It's also the base class for other contexts.</li> <li>Purpose: Offers a safe, read-only view of fundamental contextual details.</li> <li>Key Contents: <code>invocation_id</code>, <code>agent_name</code>, and a read-only view of the current <code>state</code>.</li> </ul> PythonJava <pre><code># Pseudocode: Instruction provider receiving ReadonlyContext
from google.adk.agents.readonly_context import ReadonlyContext

def my_instruction_provider(context: ReadonlyContext) -&gt; str:
    # Read-only access example
    user_tier = context.state().get("user_tier", "standard") # Can read state
    # context.state['new_key'] = 'value' # This would typically cause an error or be ineffective
    return f"Process the request for a {user_tier} user."
</code></pre> <pre><code>// Pseudocode: Instruction provider receiving ReadonlyContext
import com.google.adk.agents.ReadonlyContext;

public String myInstructionProvider(ReadonlyContext context){
    // Read-only access example
    String userTier = context.state().get("user_tier", "standard");
    context.state().put('new_key', 'value'); //This would typically cause an error
    return "Process the request for a " + userTier + " user."
}
</code></pre> </li> <li> <p><code>CallbackContext</code></p> <ul> <li>Where Used: Passed as <code>callback_context</code> to agent lifecycle callbacks (<code>before_agent_callback</code>, <code>after_agent_callback</code>) and model interaction callbacks (<code>before_model_callback</code>, <code>after_model_callback</code>).</li> <li>Purpose: Facilitates inspecting and modifying state, interacting with artifacts, and accessing invocation details specifically within callbacks.</li> <li>Key Capabilities (Adds to <code>ReadonlyContext</code>):<ul> <li>Mutable <code>state</code> Property: Allows reading and writing to session state. Changes made here (<code>callback_context.state['key'] = value</code>) are tracked and associated with the event generated by the framework after the callback.</li> <li>Artifact Methods: <code>load_artifact(filename)</code> and <code>save_artifact(filename, part)</code> methods for interacting with the configured <code>artifact_service</code>.</li> <li>Direct <code>user_content</code> access.</li> </ul> </li> </ul> PythonJava <pre><code># Pseudocode: Callback receiving CallbackContext
from google.adk.agents.callback_context import CallbackContext
from google.adk.models import LlmRequest
from google.genai import types
from typing import Optional

def my_before_model_cb(callback_context: CallbackContext, request: LlmRequest) -&gt; Optional[types.Content]:
    # Read/Write state example
    call_count = callback_context.state.get("model_calls", 0)
    callback_context.state["model_calls"] = call_count + 1 # Modify state

    # Optionally load an artifact
    # config_part = callback_context.load_artifact("model_config.json")
    print(f"Preparing model call #{call_count + 1} for invocation {callback_context.invocation_id}")
    return None # Allow model call to proceed
</code></pre> <pre><code>// Pseudocode: Callback receiving CallbackContext
import com.google.adk.agents.CallbackContext;
import com.google.adk.models.LlmRequest;
import com.google.genai.types.Content;
import java.util.Optional;

public Maybe&lt;LlmResponse&gt; myBeforeModelCb(CallbackContext callbackContext, LlmRequest request){
    // Read/Write state example
    callCount = callbackContext.state().get("model_calls", 0)
    callbackContext.state().put("model_calls") = callCount + 1 # Modify state

    // Optionally load an artifact
    // Maybe&lt;Part&gt; configPart = callbackContext.loadArtifact("model_config.json");
    System.out.println("Preparing model call " + callCount + 1);
    return Maybe.empty(); // Allow model call to proceed
}
</code></pre> </li> <li> <p><code>ToolContext</code></p> <ul> <li>Where Used: Passed as <code>tool_context</code> to the functions backing <code>FunctionTool</code>s and to tool execution callbacks (<code>before_tool_callback</code>, <code>after_tool_callback</code>).</li> <li>Purpose: Provides everything <code>CallbackContext</code> does, plus specialized methods essential for tool execution, like handling authentication, searching memory, and listing artifacts.</li> <li>Key Capabilities (Adds to <code>CallbackContext</code>):<ul> <li>Authentication Methods: <code>request_credential(auth_config)</code> to trigger an auth flow, and <code>get_auth_response(auth_config)</code> to retrieve credentials provided by the user/system.</li> <li>Artifact Listing: <code>list_artifacts()</code> to discover available artifacts in the session.</li> <li>Memory Search: <code>search_memory(query)</code> to query the configured <code>memory_service</code>.</li> <li><code>function_call_id</code> Property: Identifies the specific function call from the LLM that triggered this tool execution, crucial for linking authentication requests or responses back correctly.</li> <li><code>actions</code> Property: Direct access to the <code>EventActions</code> object for this step, allowing the tool to signal state changes, auth requests, etc.</li> </ul> </li> </ul> PythonJava <pre><code># Pseudocode: Tool function receiving ToolContext
from google.adk.tools import ToolContext
from typing import Dict, Any

# Assume this function is wrapped by a FunctionTool
def search_external_api(query: str, tool_context: ToolContext) -&gt; Dict[str, Any]:
    api_key = tool_context.state.get("api_key")
    if not api_key:
        # Define required auth config
        # auth_config = AuthConfig(...)
        # tool_context.request_credential(auth_config) # Request credentials
        # Use the 'actions' property to signal the auth request has been made
        # tool_context.actions.requested_auth_configs[tool_context.function_call_id] = auth_config
        return {"status": "Auth Required"}

    # Use the API key...
    print(f"Tool executing for query '{query}' using API key. Invocation: {tool_context.invocation_id}")

    # Optionally search memory or list artifacts
    # relevant_docs = tool_context.search_memory(f"info related to {query}")
    # available_files = tool_context.list_artifacts()

    return {"result": f"Data for {query} fetched."}
</code></pre> <pre><code>// Pseudocode: Tool function receiving ToolContext
import com.google.adk.tools.ToolContext;
import java.util.HashMap;
import java.util.Map;

// Assume this function is wrapped by a FunctionTool
public Map&lt;String, Object&gt; searchExternalApi(String query, ToolContext toolContext){
    String apiKey = toolContext.state.get("api_key");
    if(apiKey.isEmpty()){
        // Define required auth config
        // authConfig = AuthConfig(...);
        // toolContext.requestCredential(authConfig); # Request credentials
        // Use the 'actions' property to signal the auth request has been made
        ...
        return Map.of("status", "Auth Required");

    // Use the API key...
    System.out.println("Tool executing for query " + query + " using API key. ");

    // Optionally list artifacts
    // Single&lt;List&lt;String&gt;&gt; availableFiles = toolContext.listArtifacts();

    return Map.of("result", "Data for " + query + " fetched");
}
</code></pre> </li> </ol></article></a><a href="https://google.github.io/adk-docs/context/#what-are-context" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="7.76"><h2>What are Context</h2><p>The central piece holding all this information together for a single, complete user-request-to-final-response cycle (an invocation) is the <code><mark>InvocationContext</mark></code>. However, you typically won't create or manage this object directly. The ADK framework creates it when an invocation starts (e.g., via <code>runner.run_async</code>) and passes the relevant contextual information implicitly to your agent code, callbacks, and tools.</p>PythonJava <pre><code># Conceptual Pseudocode: How the framework provides context (Internal Logic)

# runner = Runner(agent=my_root_agent, session_service=..., artifact_service=...)
# user_message = types.Content(...)
# session = session_service.get_session(...) # Or create new

# --- Inside runner.run_async(...) ---
# 1. Framework creates the main context for this specific run
# invocation_context = <mark>InvocationContext(</mark>
#     invocation_id="unique-id-for-this-run",
#     session=session,
#     user_content=user_message,
#     agent=my_root_agent, # The starting agent
#     session_service=session_service,
#     artifact_service=artifact_service,
#     memory_service=memory_service,
#     # ... other necessary fields ...
# )
#
# 2. Framework calls the agent's run method, passing the context implicitly
#    (The agent's method signature will receive it, e.g., runAsyncImpl(InvocationContext <mark>invocationContext))</mark>
# await my_root_agent.run_async(invocation_context)
#   --- End Internal Logic ---
#
# As a developer, you work with the context objects provided in method arguments.
</code></pre></article></a><a href="https://google.github.io/adk-docs/context/#key-takeaways-best-practices" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="2.27"><h2>Key Takeaways &amp; Best Practices</h2><ul> <li>Use the Right Context: Always use the most specific context object provided (<code>ToolContext</code> in tools/tool-callbacks, <code>CallbackContext</code> in agent/model-callbacks, <code>ReadonlyContext</code> where applicable). Use the full <code><mark>InvocationContext</mark></code> (<code>ctx</code>) directly in <code>_run_async_impl</code> / <code>_run_live_impl</code> only when necessary.</li> <li>State for Data Flow: <code>context.state</code> is the primary way to share data, remember preferences, and manage conversational memory within an invocation. Use prefixes (<code>app:</code>, <code>user:</code>, <code>temp:</code>) thoughtfully when using persistent storage.</li> <li>Artifacts for Files: Use <code>context.save_artifact</code> and <code>context.load_artifact</code> for managing file references (like paths or URIs) or larger data blobs. Store references, load content on demand.</li> <li>Tracked Changes: Modifications to state or artifacts made via context methods are automatically linked to the current step's <code>EventActions</code> and handled by the <code>SessionService</code>.</li> <li>Start Simple: Focus on <code>state</code> and basic artifact usage first. Explore authentication, memory, and advanced <code><mark>InvocationContext</mark></code> fields (like those for live streaming) as your needs become more complex.</li> </ul></article></a><a href="https://google.github.io/adk-docs/context/#accessing-information" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="2.18"><h2>Accessing Information</h2><ul> <li> <p>Reading Session State: Access data saved in previous steps or user/app-level settings. Use dictionary-like access on the <code>state</code> property.</p> PythonJava <pre><code># Pseudocode: In a Tool function
from google.adk.tools import ToolContext

def my_tool(tool_context: ToolContext, **kwargs):
    user_pref = tool_context.state.get("user_display_preference", "default_mode")
    api_endpoint = tool_context.state.get("app:api_endpoint") # Read app-level state

    if user_pref == "dark_mode":
        # ... apply dark mode logic ...
        pass
    print(f"Using API endpoint: {api_endpoint}")
    # ... rest of tool logic ...

# Pseudocode: In a Callback function
from google.adk.agents.callback_context import CallbackContext

def my_callback(callback_context: CallbackContext, **kwargs):
    last_tool_result = callback_context.state.get("temp:last_api_result") # Read temporary state
    if last_tool_result:
        print(f"Found temporary result from last tool: {last_tool_result}")
    # ... callback logic ...
</code></pre> <pre><code>// Pseudocode: In a Tool function
import com.google.adk.tools.ToolContext;

public void myTool(ToolContext toolContext){
   String userPref = toolContext.state().get("user_display_preference");
   String apiEndpoint = toolContext.state().get("app:api_endpoint"); // Read app-level state
   if(userPref.equals("dark_mode")){
        // ... apply dark mode logic ...
        pass
    }
   System.out.println("Using API endpoint: " + api_endpoint);
   // ... rest of tool logic ...
}


// Pseudocode: In a Callback function
import com.google.adk.agents.CallbackContext;

    public void myCallback(CallbackContext callbackContext){
        String lastToolResult = (String) callbackContext.state().get("temp:last_api_result"); // Read temporary state
    }
    if(!(lastToolResult.isEmpty())){
        System.out.println("Found temporary result from last tool: " + lastToolResult);
    }
    // ... callback logic ...
</code></pre> </li> <li> <p>Getting Current Identifiers: Useful for logging or custom logic based on the current operation.</p> PythonJava <pre><code># Pseudocode: In any context (ToolContext shown)
from google.adk.tools import ToolContext

def log_tool_usage(tool_context: ToolContext, **kwargs):
    agent_name = tool_context.agent_nameSystem.out.println("Found temporary result from last tool: " + lastToolResult);
    inv_id = tool_context.invocation_id
    func_call_id = getattr(tool_context, 'function_call_id', 'N/A') # Specific to ToolContext

    print(f"Log: Invocation={inv_id}, Agent={agent_name}, FunctionCallID={func_call_id} - Tool Executed.")
</code></pre> <pre><code>// Pseudocode: In any context (ToolContext shown)
 import com.google.adk.tools.ToolContext;

 public void logToolUsage(ToolContext toolContext){
            String agentName = toolContext.agentName;
            String invId = toolContext.invocationId;
            String functionCallId = toolContext.functionCallId().get(); // Specific to ToolContext
            System.out.println("Log: Invocation= " + invId &amp;+ " Agent= " + agentName);
        }
</code></pre> </li> <li> <p>Accessing the Initial User Input: Refer back to the message that started the current invocation.</p> PythonJava <pre><code># Pseudocode: In a Callback
from google.adk.agents.callback_context import CallbackContext

def check_initial_intent(callback_context: CallbackContext, **kwargs):
    initial_text = "N/A"
    if callback_context.user_content and callback_context.user_content.parts:
        initial_text = callback_context.user_content.parts[0].text or "Non-text input"

    print(f"This invocation started with user input: '{initial_text}'")

# Pseudocode: In an Agent's _run_async_impl
# async def _run_async_impl(self, ctx: <mark>InvocationContext)</mark> -&gt; AsyncGenerator[Event, None]:
#     if ctx.user_content and ctx.user_content.parts:
#         initial_text = ctx.user_content.parts[0].text
#         print(f"Agent logic remembering initial query: {initial_text}")
#     ...
</code></pre> <pre><code>// Pseudocode: In a Callback
import com.google.adk.agents.CallbackContext;

public void checkInitialIntent(CallbackContext callbackContext){
    String initialText = "N/A";
    if((!(callbackContext.userContent().isEmpty())) &amp;&amp; (!(callbackContext.userContent().parts.isEmpty()))){
        initialText = cbx.userContent().get().parts().get().get(0).text().get();
        ...
        System.out.println("This invocation started with user input: " + initialText)
    }
}
</code></pre> </li> </ul></article></a></details></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/agents/custom-agents/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Custom agents</h1></article></a><a href="https://google.github.io/adk-docs/agents/custom-agents/#part-2-defining-the-custom-execution-logic" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="21.13"><h2>Part 2: Defining the Custom Execution Logic</h2><p></p><pre><code>@override
async def _run_async_impl(
    self, ctx: <mark>InvocationContext</mark>
) -&gt; AsyncGenerator[Event, None]:
    """
    Implements the custom orchestration logic for the story workflow.
    Uses the instance attributes assigned by Pydantic (e.g., self.story_generator).
    """
    logger.info(f"[{self.name}] Starting story generation workflow.")

    # 1. Initial Story Generation
    logger.info(f"[{self.name}] Running StoryGenerator...")
    async for event in self.story_generator.run_async(ctx):
        logger.info(f"[{self.name}] Event from StoryGenerator: {event.model_dump_json(indent=2, exclude_none=True)}")
        yield event

    # Check if story was generated before proceeding
    if "current_story" not in ctx.session.state or not ctx.session.state["current_story"]:
         logger.error(f"[{self.name}] Failed to generate initial story. Aborting workflow.")
         return # Stop processing if initial story failed

    logger.info(f"[{self.name}] Story state after generator: {ctx.session.state.get('current_story')}")


    # 2. Critic-Reviser Loop
    logger.info(f"[{self.name}] Running CriticReviserLoop...")
    # Use the loop_agent instance attribute assigned during init
    async for event in self.loop_agent.run_async(ctx):
        logger.info(f"[{self.name}] Event from CriticReviserLoop: {event.model_dump_json(indent=2, exclude_none=True)}")
        yield event

    logger.info(f"[{self.name}] Story state after loop: {ctx.session.state.get('current_story')}")

    # 3. Sequential Post-Processing (Grammar and Tone Check)
    logger.info(f"[{self.name}] Running PostProcessing...")
    # Use the sequential_agent instance attribute assigned during init
    async for event in self.sequential_agent.run_async(ctx):
        logger.info(f"[{self.name}] Event from PostProcessing: {event.model_dump_json(indent=2, exclude_none=True)}")
        yield event

    # 4. Tone-Based Conditional Logic
    tone_check_result = ctx.session.state.get("tone_check_result")
    logger.info(f"[{self.name}] Tone check result: {tone_check_result}")

    if tone_check_result == "negative":
        logger.info(f"[{self.name}] Tone is negative. Regenerating story...")
        async for event in self.story_generator.run_async(ctx):
            logger.info(f"[{self.name}] Event from StoryGenerator (Regen): {event.model_dump_json(indent=2, exclude_none=True)}")
            yield event
    else:
        logger.info(f"[{self.name}] Tone is not negative. Keeping current story.")
        pass

    logger.info(f"[{self.name}] Workflow finished.")
</code></pre> Explanation of Logic:<p></p><p></p><pre><code>@Override
protected Flowable&lt;Event&gt; runAsyncImpl(InvocationContext <mark>invocationContext)</mark> {
  // Implements the custom orchestration logic for the story workflow.
  // Uses the instance attributes assigned by Pydantic (e.g., self.story_generator).
  logger.log(Level.INFO, () -&gt; String.format("[%s] Starting story generation workflow.", name()));

  // Stage 1. Initial Story Generation
  Flowable&lt;Event&gt; storyGenFlow = runStage(storyGenerator, <mark>invocationContext,</mark> "StoryGenerator");

  // Stage 2: Critic-Reviser Loop (runs after story generation completes)
  Flowable&lt;Event&gt; criticReviserFlow = Flowable.defer(() -&gt; {
    if (!isStoryGenerated(invocationContext)) {
      logger.log(Level.SEVERE,() -&gt;
          String.format("[%s] Failed to generate initial story. Aborting after StoryGenerator.",
              name()));
      return Flowable.empty(); // Stop further processing if no story
    }
      logger.log(Level.INFO, () -&gt;
          String.format("[%s] Story state after generator: %s",
              name(), <mark>invocationContext.session().state().get("current_story")));</mark>
      return runStage(loopAgent, <mark>invocationContext,</mark> "CriticReviserLoop");
  });

  // Stage 3: Post-Processing (runs after critic-reviser loop completes)
  Flowable&lt;Event&gt; postProcessingFlow = Flowable.defer(() -&gt; {
    logger.log(Level.INFO, () -&gt;
        String.format("[%s] Story state after loop: %s",
            name(), <mark>invocationContext.session().state().get("current_story")));</mark>
    return runStage(sequentialAgent, <mark>invocationContext,</mark> "PostProcessing");
  });

  // Stage 4: Conditional Regeneration (runs after post-processing completes)
  Flowable&lt;Event&gt; conditionalRegenFlow = Flowable.defer(() -&gt; {
    String toneCheckResult = (String) <mark>invocationContext.session().state().get("tone_check_result");</mark>
    logger.log(Level.INFO, () -&gt; String.format("[%s] Tone check result: %s", name(), toneCheckResult));

    if ("negative".equalsIgnoreCase(toneCheckResult)) {
      logger.log(Level.INFO, () -&gt;
          String.format("[%s] Tone is negative. Regenerating story...", name()));
      return runStage(storyGenerator, <mark>invocationContext,</mark> "StoryGenerator (Regen)");
    } else {
      logger.log(Level.INFO, () -&gt;
          String.format("[%s] Tone is not negative. Keeping current story.", name()));
      return Flowable.empty(); // No regeneration needed
    }
  });

  return Flowable.concatArray(storyGenFlow, criticReviserFlow, postProcessingFlow, conditionalRegenFlow)
      .doOnComplete(() -&gt; logger.log(Level.INFO, () -&gt; String.format("[%s] Workflow finished.", name())));
}

// Helper method for a single agent run stage with logging
private Flowable&lt;Event&gt; runStage(BaseAgent agentToRun, <mark>InvocationContext</mark> ctx, String stageName) {
  logger.log(Level.INFO, () -&gt; String.format("[%s] Running %s...", name(), stageName));
  return agentToRun
      .runAsync(ctx)
      .doOnNext(event -&gt;
          logger.log(Level.INFO,() -&gt;
              String.format("[%s] Event from %s: %s", name(), stageName, event.toJson())))
      .doOnError(err -&gt;
          logger.log(Level.SEVERE,
              String.format("[%s] Error in %s", name(), stageName), err))
      .doOnComplete(() -&gt;
          logger.log(Level.INFO, () -&gt;
              String.format("[%s] %s finished.", name(), stageName)));
}
</code></pre> Explanation of Logic:<p></p></article></a><details class="md-search-result__more"><summary tabindex="-1"><div>2 more on this page</div></summary><a href="https://google.github.io/adk-docs/agents/custom-agents/#full-code-example" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="16.16"><h2>Full Code Example</h2>Storyflow Agent PythonJava <pre><code># Full runnable code for the StoryFlowAgent example
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import logging
from typing import AsyncGenerator
from typing_extensions import override

from google.adk.agents import LlmAgent, BaseAgent, LoopAgent, SequentialAgent
from google.adk.agents.invocation_context import <mark>InvocationContext</mark>
from google.genai import types
from google.adk.sessions import InMemorySessionService
from google.adk.runners import Runner
from google.adk.events import Event
from pydantic import BaseModel, Field

# --- Constants ---
APP_NAME = "story_app"
USER_ID = "12345"
SESSION_ID = "123344"
GEMINI_2_FLASH = "gemini-2.0-flash"

# --- Configure Logging ---
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


# --- Custom Orchestrator Agent ---
class StoryFlowAgent(BaseAgent):
    """
    Custom agent for a story generation and refinement workflow.

    This agent orchestrates a sequence of LLM agents to generate a story,
    critique it, revise it, check grammar and tone, and potentially
    regenerate the story if the tone is negative.
    """

    # --- Field Declarations for Pydantic ---
    # Declare the agents passed during initialization as class attributes with type hints
    story_generator: LlmAgent
    critic: LlmAgent
    reviser: LlmAgent
    grammar_check: LlmAgent
    tone_check: LlmAgent

    loop_agent: LoopAgent
    sequential_agent: SequentialAgent

    # model_config allows setting Pydantic configurations if needed, e.g., arbitrary_types_allowed
    model_config = {"arbitrary_types_allowed": True}

    def __init__(
        self,
        name: str,
        story_generator: LlmAgent,
        critic: LlmAgent,
        reviser: LlmAgent,
        grammar_check: LlmAgent,
        tone_check: LlmAgent,
    ):
        """
        Initializes the StoryFlowAgent.

        Args:
            name: The name of the agent.
            story_generator: An LlmAgent to generate the initial story.
            critic: An LlmAgent to critique the story.
            reviser: An LlmAgent to revise the story based on criticism.
            grammar_check: An LlmAgent to check the grammar.
            tone_check: An LlmAgent to analyze the tone.
        """
        # Create internal agents *before* calling super().__init__
        loop_agent = LoopAgent(
            name="CriticReviserLoop", sub_agents=[critic, reviser], max_iterations=2
        )
        sequential_agent = SequentialAgent(
            name="PostProcessing", sub_agents=[grammar_check, tone_check]
        )

        # Define the sub_agents list for the framework
        sub_agents_list = [
            story_generator,
            loop_agent,
            sequential_agent,
        ]

        # Pydantic will validate and assign them based on the class annotations.
        super().__init__(
            name=name,
            story_generator=story_generator,
            critic=critic,
            reviser=reviser,
            grammar_check=grammar_check,
            tone_check=tone_check,
            loop_agent=loop_agent,
            sequential_agent=sequential_agent,
            sub_agents=sub_agents_list, # Pass the sub_agents list directly
        )

    @override
    async def _run_async_impl(
        self, ctx: <mark>InvocationContext</mark>
    ) -&gt; AsyncGenerator[Event, None]:
        """
        Implements the custom orchestration logic for the story workflow.
        Uses the instance attributes assigned by Pydantic (e.g., self.story_generator).
        """
        logger.info(f"[{self.name}] Starting story generation workflow.")

        # 1. Initial Story Generation
        logger.info(f"[{self.name}] Running StoryGenerator...")
        async for event in self.story_generator.run_async(ctx):
            logger.info(f"[{self.name}] Event from StoryGenerator: {event.model_dump_json(indent=2, exclude_none=True)}")
            yield event

        # Check if story was generated before proceeding
        if "current_story" not in ctx.session.state or not ctx.session.state["current_story"]:
             logger.error(f"[{self.name}] Failed to generate initial story. Aborting workflow.")
             return # Stop processing if initial story failed

        logger.info(f"[{self.name}] Story state after generator: {ctx.session.state.get('current_story')}")


        # 2. Critic-Reviser Loop
        logger.info(f"[{self.name}] Running CriticReviserLoop...")
        # Use the loop_agent instance attribute assigned during init
        async for event in self.loop_agent.run_async(ctx):
            logger.info(f"[{self.name}] Event from CriticReviserLoop: {event.model_dump_json(indent=2, exclude_none=True)}")
            yield event

        logger.info(f"[{self.name}] Story state after loop: {ctx.session.state.get('current_story')}")

        # 3. Sequential Post-Processing (Grammar and Tone Check)
        logger.info(f"[{self.name}] Running PostProcessing...")
        # Use the sequential_agent instance attribute assigned during init
        async for event in self.sequential_agent.run_async(ctx):
            logger.info(f"[{self.name}] Event from PostProcessing: {event.model_dump_json(indent=2, exclude_none=True)}")
            yield event

        # 4. Tone-Based Conditional Logic
        tone_check_result = ctx.session.state.get("tone_check_result")
        logger.info(f"[{self.name}] Tone check result: {tone_check_result}")

        if tone_check_result == "negative":
            logger.info(f"[{self.name}] Tone is negative. Regenerating story...")
            async for event in self.story_generator.run_async(ctx):
                logger.info(f"[{self.name}] Event from StoryGenerator (Regen): {event.model_dump_json(indent=2, exclude_none=True)}")
                yield event
        else:
            logger.info(f"[{self.name}] Tone is not negative. Keeping current story.")
            pass

        logger.info(f"[{self.name}] Workflow finished.")

# --- Define the individual LLM agents ---
story_generator = LlmAgent(
    name="StoryGenerator",
    model=GEMINI_2_FLASH,
    instruction="""You are a story writer. Write a short story (around 100 words), on the following topic: {topic}""",
    input_schema=None,
    output_key="current_story",  # Key for storing output in session state
)

critic = LlmAgent(
    name="Critic",
    model=GEMINI_2_FLASH,
    instruction="""You are a story critic. Review the story provided: {{current_story}}. Provide 1-2 sentences of constructive criticism
on how to improve it. Focus on plot or character.""",
    input_schema=None,
    output_key="criticism",  # Key for storing criticism in session state
)

reviser = LlmAgent(
    name="Reviser",
    model=GEMINI_2_FLASH,
    instruction="""You are a story reviser. Revise the story provided: {{current_story}}, based on the criticism in
{{criticism}}. Output only the revised story.""",
    input_schema=None,
    output_key="current_story",  # Overwrites the original story
)

grammar_check = LlmAgent(
    name="GrammarCheck",
    model=GEMINI_2_FLASH,
    instruction="""You are a grammar checker. Check the grammar of the story provided: {current_story}. Output only the suggested
corrections as a list, or output 'Grammar is good!' if there are no errors.""",
    input_schema=None,
    output_key="grammar_suggestions",
)

tone_check = LlmAgent(
    name="ToneCheck",
    model=GEMINI_2_FLASH,
    instruction="""You are a tone analyzer. Analyze the tone of the story provided: {current_story}. Output only one word: 'positive' if
the tone is generally positive, 'negative' if the tone is generally negative, or 'neutral'
otherwise.""",
    input_schema=None,
    output_key="tone_check_result", # This agent's output determines the conditional flow
)

# --- Create the custom agent instance ---
story_flow_agent = StoryFlowAgent(
    name="StoryFlowAgent",
    story_generator=story_generator,
    critic=critic,
    reviser=reviser,
    grammar_check=grammar_check,
    tone_check=tone_check,
)

INITIAL_STATE = {"topic": "a brave kitten exploring a haunted house"}

# --- Setup Runner and Session ---
async def setup_session_and_runner():
    session_service = InMemorySessionService()
    session = await session_service.create_session(app_name=APP_NAME, user_id=USER_ID, session_id=SESSION_ID, state=INITIAL_STATE)
    logger.info(f"Initial session state: {session.state}")
    runner = Runner(
        agent=story_flow_agent, # Pass the custom orchestrator agent
        app_name=APP_NAME,
        session_service=session_service
    )
    return session_service, runner

# --- Function to Interact with the Agent ---
async def call_agent_async(user_input_topic: str):
    """
    Sends a new topic to the agent (overwriting the initial one if needed)
    and runs the workflow.
    """

    session_service, runner = await setup_session_and_runner()

    current_session = await session_service.get_session(app_name=APP_NAME, 
                                                  user_id=USER_ID, 
                                                  session_id=SESSION_ID)
    if not current_session:
        logger.error("Session not found!")
        return

    current_session.state["topic"] = user_input_topic
    logger.info(f"Updated session state topic to: {user_input_topic}")

    content = types.Content(role='user', parts=[types.Part(text=f"Generate a story about: {user_input_topic}")])
    events = runner.run_async(user_id=USER_ID, session_id=SESSION_ID, new_message=content)

    final_response = "No final response captured."
    async for event in events:
        if event.is_final_response() and event.content and event.content.parts:
            logger.info(f"Potential final response from [{event.author}]: {event.content.parts[0].text}")
            final_response = event.content.parts[0].text

    print("\n--- Agent Interaction Result ---")
    print("Agent Final Response: ", final_response)

    final_session = await session_service.get_session(app_name=APP_NAME, 
                                                user_id=USER_ID, 
                                                session_id=SESSION_ID)
    print("Final Session State:")
    import json
    print(json.dumps(final_session.state, indent=2))
    print("-------------------------------\n")

# --- Run the Agent ---
# Note: In Colab, you can directly use 'await' at the top level.
# If running this code as a standalone Python script, you'll need to use asyncio.run() or manage the event loop.
await call_agent_async("a lonely robot finding a friend in a junkyard")
</code></pre><pre><code># Full runnable code for the StoryFlowAgent example

import com.google.adk.agents.LlmAgent;
import com.google.adk.agents.BaseAgent;
import com.google.adk.agents.InvocationContext;
import com.google.adk.agents.LoopAgent;
import com.google.adk.agents.SequentialAgent;
import com.google.adk.events.Event;
import com.google.adk.runner.InMemoryRunner;
import com.google.adk.sessions.Session;
import com.google.genai.types.Content;
import com.google.genai.types.Part;
import io.reactivex.rxjava3.core.Flowable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.concurrent.ConcurrentHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;

public class StoryFlowAgentExample extends BaseAgent {

  // --- Constants ---
  private static final String APP_NAME = "story_app";
  private static final String USER_ID = "user_12345";
  private static final String SESSION_ID = "session_123344";
  private static final String MODEL_NAME = "gemini-2.0-flash"; // Ensure this model is available

  private static final Logger logger = Logger.getLogger(StoryFlowAgentExample.class.getName());

  private final LlmAgent storyGenerator;
  private final LoopAgent loopAgent;
  private final SequentialAgent sequentialAgent;

  public StoryFlowAgentExample(
      String name, LlmAgent storyGenerator, LoopAgent loopAgent, SequentialAgent sequentialAgent) {
    super(
        name,
        "Orchestrates story generation, critique, revision, and checks.",
        List.of(storyGenerator, loopAgent, sequentialAgent),
        null,
        null);

    this.storyGenerator = storyGenerator;
    this.loopAgent = loopAgent;
    this.sequentialAgent = sequentialAgent;
  }

  public static void main(String[] args) {

    // --- Define the individual LLM agents ---
    LlmAgent storyGenerator =
        LlmAgent.builder()
            .name("StoryGenerator")
            .model(MODEL_NAME)
            .description("Generates the initial story.")
            .instruction(
                """
              You are a story writer. Write a short story (around 100 words) about a cat,
              based on the topic: {topic}
              """)
            .inputSchema(null)
            .outputKey("current_story") // Key for storing output in session state
            .build();

    LlmAgent critic =
        LlmAgent.builder()
            .name("Critic")
            .model(MODEL_NAME)
            .description("Critiques the story.")
            .instruction(
                """
              You are a story critic. Review the story: {current_story}. Provide 1-2 sentences of constructive criticism
              on how to improve it. Focus on plot or character.
              """)
            .inputSchema(null)
            .outputKey("criticism") // Key for storing criticism in session state
            .build();

    LlmAgent reviser =
        LlmAgent.builder()
            .name("Reviser")
            .model(MODEL_NAME)
            .description("Revises the story based on criticism.")
            .instruction(
                """
              You are a story reviser. Revise the story: {current_story}, based on the criticism: {criticism}. Output only the revised story.
              """)
            .inputSchema(null)
            .outputKey("current_story") // Overwrites the original story
            .build();

    LlmAgent grammarCheck =
        LlmAgent.builder()
            .name("GrammarCheck")
            .model(MODEL_NAME)
            .description("Checks grammar and suggests corrections.")
            .instruction(
                """
               You are a grammar checker. Check the grammar of the story: {current_story}. Output only the suggested
               corrections as a list, or output 'Grammar is good!' if there are no errors.
               """)
            .outputKey("grammar_suggestions")
            .build();

    LlmAgent toneCheck =
        LlmAgent.builder()
            .name("ToneCheck")
            .model(MODEL_NAME)
            .description("Analyzes the tone of the story.")
            .instruction(
                """
              You are a tone analyzer. Analyze the tone of the story: {current_story}. Output only one word: 'positive' if
              the tone is generally positive, 'negative' if the tone is generally negative, or 'neutral'
              otherwise.
              """)
            .outputKey("tone_check_result") // This agent's output determines the conditional flow
            .build();

    LoopAgent loopAgent =
        LoopAgent.builder()
            .name("CriticReviserLoop")
            .description("Iteratively critiques and revises the story.")
            .subAgents(critic, reviser)
            .maxIterations(2)
            .build();

    SequentialAgent sequentialAgent =
        SequentialAgent.builder()
            .name("PostProcessing")
            .description("Performs grammar and tone checks sequentially.")
            .subAgents(grammarCheck, toneCheck)
            .build();


    StoryFlowAgentExample storyFlowAgentExample =
        new StoryFlowAgentExample(APP_NAME, storyGenerator, loopAgent, sequentialAgent);

    // --- Run the Agent ---
    runAgent(storyFlowAgentExample, "a lonely robot finding a friend in a junkyard");
  }

  // --- Function to Interact with the Agent ---
  // Sends a new topic to the agent (overwriting the initial one if needed)
  // and runs the workflow.
  public static void runAgent(StoryFlowAgentExample agent, String userTopic) {
    // --- Setup Runner and Session ---
    InMemoryRunner runner = new InMemoryRunner(agent);

    Map&lt;String, Object&gt; initialState = new HashMap&lt;&gt;();
    initialState.put("topic", "a brave kitten exploring a haunted house");

    Session session =
        runner
            .sessionService()
            .createSession(APP_NAME, USER_ID, new ConcurrentHashMap&lt;&gt;(initialState), SESSION_ID)
            .blockingGet();
    logger.log(Level.INFO, () -&gt; String.format("Initial session state: %s", session.state()));

    session.state().put("topic", userTopic); // Update the state in the retrieved session
    logger.log(Level.INFO, () -&gt; String.format("Updated session state topic to: %s", userTopic));

    Content userMessage = Content.fromParts(Part.fromText("Generate a story about: " + userTopic));
    // Use the modified session object for the run
    Flowable&lt;Event&gt; eventStream = runner.runAsync(USER_ID, session.id(), userMessage);

    final String[] finalResponse = {"No final response captured."};
    eventStream.blockingForEach(
        event -&gt; {
          if (event.finalResponse() &amp;&amp; event.content().isPresent()) {
            String author = event.author() != null ? event.author() : "UNKNOWN_AUTHOR";
            Optional&lt;String&gt; textOpt =
                event
                    .content()
                    .flatMap(Content::parts)
                    .filter(parts -&gt; !parts.isEmpty())
                    .map(parts -&gt; parts.get(0).text().orElse(""));

            logger.log(Level.INFO, () -&gt;
                String.format("Potential final response from [%s]: %s", author, textOpt.orElse("N/A")));
            textOpt.ifPresent(text -&gt; finalResponse[0] = text);
          }
        });

    System.out.println("\n--- Agent Interaction Result ---");
    System.out.println("Agent Final Response: " + finalResponse[0]);

    // Retrieve session again to see the final state after the run
    Session finalSession =
        runner
            .sessionService()
            .getSession(APP_NAME, USER_ID, SESSION_ID, Optional.empty())
            .blockingGet();

    assert finalSession != null;
    System.out.println("Final Session State:" + finalSession.state());
    System.out.println("-------------------------------\n");
  }

  private boolean isStoryGenerated(InvocationContext ctx) {
    Object currentStoryObj = ctx.session().state().get("current_story");
    return currentStoryObj != null &amp;&amp; !String.valueOf(currentStoryObj).isEmpty();
  }

  @Override
  protected Flowable&lt;Event&gt; runAsyncImpl(InvocationContext <mark>invocationContext)</mark> {
    // Implements the custom orchestration logic for the story workflow.
    // Uses the instance attributes assigned by Pydantic (e.g., self.story_generator).
    logger.log(Level.INFO, () -&gt; String.format("[%s] Starting story generation workflow.", name()));

    // Stage 1. Initial Story Generation
    Flowable&lt;Event&gt; storyGenFlow = runStage(storyGenerator, <mark>invocationContext,</mark> "StoryGenerator");

    // Stage 2: Critic-Reviser Loop (runs after story generation completes)
    Flowable&lt;Event&gt; criticReviserFlow = Flowable.defer(() -&gt; {
      if (!isStoryGenerated(invocationContext)) {
        logger.log(Level.SEVERE,() -&gt;
            String.format("[%s] Failed to generate initial story. Aborting after StoryGenerator.",
                name()));
        return Flowable.empty(); // Stop further processing if no story
      }
        logger.log(Level.INFO, () -&gt;
            String.format("[%s] Story state after generator: %s",
                name(), <mark>invocationContext.session().state().get("current_story")));</mark>
        return runStage(loopAgent, <mark>invocationContext,</mark> "CriticReviserLoop");
    });

    // Stage 3: Post-Processing (runs after critic-reviser loop completes)
    Flowable&lt;Event&gt; postProcessingFlow = Flowable.defer(() -&gt; {
      logger.log(Level.INFO, () -&gt;
          String.format("[%s] Story state after loop: %s",
              name(), <mark>invocationContext.session().state().get("current_story")));</mark>
      return runStage(sequentialAgent, <mark>invocationContext,</mark> "PostProcessing");
    });

    // Stage 4: Conditional Regeneration (runs after post-processing completes)
    Flowable&lt;Event&gt; conditionalRegenFlow = Flowable.defer(() -&gt; {
      String toneCheckResult = (String) <mark>invocationContext.session().state().get("tone_check_result");</mark>
      logger.log(Level.INFO, () -&gt; String.format("[%s] Tone check result: %s", name(), toneCheckResult));

      if ("negative".equalsIgnoreCase(toneCheckResult)) {
        logger.log(Level.INFO, () -&gt;
            String.format("[%s] Tone is negative. Regenerating story...", name()));
        return runStage(storyGenerator, <mark>invocationContext,</mark> "StoryGenerator (Regen)");
      } else {
        logger.log(Level.INFO, () -&gt;
            String.format("[%s] Tone is not negative. Keeping current story.", name()));
        return Flowable.empty(); // No regeneration needed
      }
    });

    return Flowable.concatArray(storyGenFlow, criticReviserFlow, postProcessingFlow, conditionalRegenFlow)
        .doOnComplete(() -&gt; logger.log(Level.INFO, () -&gt; String.format("[%s] Workflow finished.", name())));
  }

  // Helper method for a single agent run stage with logging
  private Flowable&lt;Event&gt; runStage(BaseAgent agentToRun, <mark>InvocationContext</mark> ctx, String stageName) {
    logger.log(Level.INFO, () -&gt; String.format("[%s] Running %s...", name(), stageName));
    return agentToRun
        .runAsync(ctx)
        .doOnNext(event -&gt;
            logger.log(Level.INFO,() -&gt;
                String.format("[%s] Event from %s: %s", name(), stageName, event.toJson())))
        .doOnError(err -&gt;
            logger.log(Level.SEVERE,
                String.format("[%s] Error in %s", name(), stageName), err))
        .doOnComplete(() -&gt;
            logger.log(Level.INFO, () -&gt;
                String.format("[%s] %s finished.", name(), stageName)));
  }

  @Override
  protected Flowable&lt;Event&gt; runLiveImpl(InvocationContext <mark>invocationContext)</mark> {
    return Flowable.error(new UnsupportedOperationException("runLive not implemented."));
  }
}
</code></pre></article></a><a href="https://google.github.io/adk-docs/agents/custom-agents/#implementing-custom-logic" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="2.18"><h2>Implementing Custom Logic:</h2><ul> <li>Signature: <code>async def _run_async_impl(self, ctx: <mark>InvocationContext)</mark> -&gt; AsyncGenerator[Event, None]:</code></li> <li>Asynchronous Generator: It must be an <code>async def</code> function and return an <code>AsyncGenerator</code>. This allows it to <code>yield</code> events produced by sub-agents or its own logic back to the runner.</li> <li><code>ctx</code> (InvocationContext): Provides access to crucial runtime information, most importantly <code>ctx.session.state</code>, which is the primary way to share data between steps orchestrated by your custom agent.</li> </ul></article></a></details></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/agents/multi-agents/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Multi-Agent Systems in ADK</h1></article></a><a href="https://google.github.io/adk-docs/agents/multi-agents/#workflow-agents-as-orchestrators" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="7.83"><h2>1.2. Workflow Agents as Orchestrators</h2><ul> <li><code>SequentialAgent</code>: Executes its <code>sub_agents</code> one after another in the order they are listed.<ul> <li>Context: Passes the same <code><mark>InvocationContext</mark></code> sequentially, allowing agents to easily pass results via shared state.</li> </ul> </li> </ul><ul> <li><code>ParallelAgent</code>: Executes its <code>sub_agents</code> in parallel. Events from sub-agents may be interleaved.<ul> <li>Context: Modifies the <code><mark>InvocationContext.branch</mark></code> for each child agent (e.g., <code>ParentBranch.ChildName</code>), providing a distinct contextual path which can be useful for isolating history in some memory implementations.</li> <li>State: Despite different branches, all parallel children access the same shared <code>session.state</code>, enabling them to read initial state and write results (use distinct keys to avoid race conditions).</li> </ul> </li> </ul></article></a><details class="md-search-result__more"><summary tabindex="-1"><div>4 more on this page</div></summary><a href="https://google.github.io/adk-docs/agents/multi-agents/#iterative-refinement-pattern" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="7.71"><h2>Iterative Refinement Pattern</h2>PythonJava <pre><code># Conceptual Code: Iterative Code Refinement
from google.adk.agents import LoopAgent, LlmAgent, BaseAgent
from google.adk.events import Event, EventActions
from google.adk.agents.invocation_context import <mark>InvocationContext</mark>
from typing import AsyncGenerator

# Agent to generate/refine code based on state['current_code'] and state['requirements']
code_refiner = LlmAgent(
    name="CodeRefiner",
    instruction="Read state['current_code'] (if exists) and state['requirements']. Generate/refine Python code to meet requirements. Save to state['current_code'].",
    output_key="current_code" # Overwrites previous code in state
)

# Agent to check if the code meets quality standards
quality_checker = LlmAgent(
    name="QualityChecker",
    instruction="Evaluate the code in state['current_code'] against state['requirements']. Output 'pass' or 'fail'.",
    output_key="quality_status"
)

# Custom agent to check the status and escalate if 'pass'
class CheckStatusAndEscalate(BaseAgent):
    async def _run_async_impl(self, ctx: <mark>InvocationContext)</mark> -&gt; AsyncGenerator[Event, None]:
        status = ctx.session.state.get("quality_status", "fail")
        should_stop = (status == "pass")
        yield Event(author=self.name, actions=EventActions(escalate=should_stop))

refinement_loop = LoopAgent(
    name="CodeRefinementLoop",
    max_iterations=5,
    sub_agents=[code_refiner, quality_checker, CheckStatusAndEscalate(name="StopChecker")]
)
# Loop runs: Refiner -&gt; Checker -&gt; StopChecker
# State['current_code'] is updated each iteration.
# Loop stops if QualityChecker outputs 'pass' (leading to StopChecker escalating) or after 5 iterations.
</code></pre><pre><code>// Conceptual Code: Iterative Code Refinement
import com.google.adk.agents.BaseAgent;
import com.google.adk.agents.LlmAgent;
import com.google.adk.agents.LoopAgent;
import com.google.adk.events.Event;
import com.google.adk.events.EventActions;
import com.google.adk.agents.InvocationContext;
import io.reactivex.rxjava3.core.Flowable;
import java.util.List;

// Agent to generate/refine code based on state['current_code'] and state['requirements']
LlmAgent codeRefiner = LlmAgent.builder()
    .name("CodeRefiner")
    .instruction("Read state['current_code'] (if exists) and state['requirements']. Generate/refine Java code to meet requirements. Save to state['current_code'].")
    .outputKey("current_code") // Overwrites previous code in state
    .build();

// Agent to check if the code meets quality standards
LlmAgent qualityChecker = LlmAgent.builder()
    .name("QualityChecker")
    .instruction("Evaluate the code in state['current_code'] against state['requirements']. Output 'pass' or 'fail'.")
    .outputKey("quality_status")
    .build();

BaseAgent checkStatusAndEscalate = new BaseAgent(
    "StopChecker","Checks quality_status and escalates if 'pass'.", List.of(), null, null) {

  @Override
  protected Flowable&lt;Event&gt; runAsyncImpl(InvocationContext <mark>invocationContext)</mark> {
    String status = (String) <mark>invocationContext.session().state().getOrDefault("quality_status",</mark> "fail");
    boolean shouldStop = "pass".equals(status);

    EventActions actions = EventActions.builder().escalate(shouldStop).build();
    Event event = Event.builder()
        .author(this.name())
        .actions(actions)
        .build();
    return Flowable.just(event);
  }
};

LoopAgent refinementLoop = LoopAgent.builder()
    .name("CodeRefinementLoop")
    .maxIterations(5)
    .subAgents(codeRefiner, qualityChecker, checkStatusAndEscalate)
    .build();

// Loop runs: Refiner -&gt; Checker -&gt; StopChecker
// State['current_code'] is updated each iteration.
// Loop stops if QualityChecker outputs 'pass' (leading to StopChecker escalating) or after 5
// iterations.
</code></pre></article></a><a href="https://google.github.io/adk-docs/agents/multi-agents/#c-explicit-invocation-agenttool" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="6.06"><h2>c) Explicit Invocation (<code>AgentTool</code>)</h2><pre><code>// Conceptual Setup: Agent as a Tool
import com.google.adk.agents.BaseAgent;
import com.google.adk.agents.LlmAgent;
import com.google.adk.tools.AgentTool;

// Example custom agent (could be LlmAgent or custom BaseAgent)
public class ImageGeneratorAgent extends BaseAgent  {

  public ImageGeneratorAgent(String name, String description) {
    super(name, description, List.of(), null, null);
  }

  // ... internal logic ...
  @Override
  protected Flowable&lt;Event&gt; runAsyncImpl(InvocationContext <mark>invocationContext)</mark> { // Simplified run logic
    <mark>invocationContext.session().state().get("image_prompt");</mark>
    // Generate image bytes
    // ...

    Event responseEvent = Event.builder()
        .author(this.name())
        .content(Content.fromParts(Part.fromText("\b...")))
        .build();

    return Flowable.just(responseEvent);
  }

  @Override
  protected Flowable&lt;Event&gt; runLiveImpl(InvocationContext <mark>invocationContext)</mark> {
    return null;
  }
}

// Wrap the agent using AgentTool
ImageGeneratorAgent imageAgent = new ImageGeneratorAgent("image_agent", "generates images");
AgentTool imageTool = AgentTool.create(imageAgent);

// Parent agent uses the AgentTool
LlmAgent artistAgent = LlmAgent.builder()
        .name("Artist")
        .model("gemini-2.0-flash")
        .instruction(
                "You are an artist. Create a detailed prompt for an image and then " +
                        "use the 'ImageGen' tool to generate the image. " +
                        "The 'ImageGen' tool expects a single string argument named 'request' " +
                        "containing the image prompt. The tool will return a JSON string in its " +
                        "'result' field, containing 'image_base64', 'mime_type', and 'status'."
        )
        .description("An agent that can create images using a generation tool.")
        .tools(imageTool) // Include the AgentTool
        .build();

// Artist LLM generates a prompt, then calls:
// FunctionCall(name='ImageGen', args={'imagePrompt': 'a cat wearing a hat'})
// Framework calls imageTool.runAsync(...), which runs ImageGeneratorAgent.
// The resulting image Part is returned to the Artist agent as the tool result.
</code></pre></article></a><a href="https://google.github.io/adk-docs/agents/multi-agents/#a-shared-session-state-sessionstate" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="2.27"><h2>a) Shared Session State (<code>session.state</code>)</h2><p>The most fundamental way for agents operating within the same invocation (and thus sharing the same <code>Session</code> object via the <code><mark>InvocationContext</mark></code>) to communicate passively.</p><p>When a parent agent invokes a sub-agent, it passes the same <code><mark>InvocationContext</mark></code>. This means they share the same temporary (<code>temp:</code>) state, which is ideal for passing data that is only relevant for the current turn.</p></article></a><a href="https://google.github.io/adk-docs/agents/multi-agents/#b-llm-driven-delegation-agent-transfer" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>b) LLM-Driven Delegation (Agent Transfer)</h2><ul> <li>Mechanism: The agent's LLM generates a specific function call: <code>transfer_to_agent(agent_name='target_agent_name')</code>.</li> <li>Handling: The <code>AutoFlow</code>, used by default when sub-agents are present or transfer isn't disallowed, intercepts this call. It identifies the target agent using <code>root_agent.find_agent()</code> and updates the <code><mark>InvocationContext</mark></code> to switch execution focus.</li> <li>Requires: The calling <code>LlmAgent</code> needs clear <code>instructions</code> on when to transfer, and potential target agents need distinct <code>description</code>s for the LLM to make informed decisions. Transfer scope (parent, sub-agent, siblings) can be configured on the <code>LlmAgent</code>.</li> <li>Nature: Dynamic, flexible routing based on LLM interpretation.</li> </ul></article></a></details></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/safety/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Safety and Security for AI Agents</h1></article></a><a href="https://google.github.io/adk-docs/safety/#in-tool-guardrails" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="7.25"><h2>In-tool guardrails</h2>PythonJava <pre><code># Conceptual example: Setting policy data intended for tool context
# In a real ADK app, this might be set in <mark>InvocationContext.session.state</mark>
# or passed during tool initialization, then retrieved via ToolContext.

policy = {} # Assuming policy is a dictionary
policy['select_only'] = True
policy['tables'] = ['mytable1', 'mytable2']

# Conceptual: Storing policy where the tool can access it via ToolContext later.
# This specific line might look different in practice.
# For example, storing in session state:
invocation_context.session.state["query_tool_policy"] = policy

# Or maybe passing during tool init:
query_tool = QueryTool(policy=policy)
# For this example, we'll assume it gets stored somewhere accessible.
</code></pre><pre><code>// Conceptual example: Setting policy data intended for tool context
// In a real ADK app, this might be set in <mark>InvocationContext.session.state</mark>
// or passed during tool initialization, then retrieved via ToolContext.

policy = new HashMap&lt;String, Object&gt;(); // Assuming policy is a Map
policy.put("select_only", true);
policy.put("tables", new ArrayList&lt;&gt;("mytable1", "mytable2"));

// Conceptual: Storing policy where the tool can access it via ToolContext later.
// This specific line might look different in practice.
// For example, storing in session state:
<mark>invocationContext.session().state().put("query_tool_policy",</mark> policy);

// Or maybe passing during tool init:
query_tool = QueryTool(policy);
// For this example, we'll assume it gets stored somewhere accessible.
</code></pre></article></a></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/callbacks/types-of-callbacks/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Types of Callbacks</h1></article></a><a href="https://google.github.io/adk-docs/callbacks/types-of-callbacks/#before-tool-callback" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="6.76"><h2>Before Tool Callback</h2><pre><code>import com.google.adk.agents.LlmAgent;
import com.google.adk.agents.InvocationContext;
import com.google.adk.events.Event;
import com.google.adk.runner.InMemoryRunner;
import com.google.adk.sessions.Session;
import com.google.adk.tools.Annotations.Schema;
import com.google.adk.tools.BaseTool;
import com.google.adk.tools.FunctionTool;
import com.google.adk.tools.ToolContext;
import com.google.common.collect.ImmutableMap;
import com.google.genai.types.Content;
import com.google.genai.types.Part;
import io.reactivex.rxjava3.core.Flowable;
import io.reactivex.rxjava3.core.Maybe;
import java.util.HashMap;
import java.util.Map;

public class BeforeToolCallbackExample {

  private static final String APP_NAME = "ToolCallbackAgentApp";
  private static final String USER_ID = "user_1";
  private static final String SESSION_ID = "session_001";
  private static final String MODEL_NAME = "gemini-2.0-flash";

  public static void main(String[] args) {
    BeforeToolCallbackExample example = new BeforeToolCallbackExample();
    example.runAgent("capital of canada");
  }

  // --- Define a Simple Tool Function ---
  // The Schema is important for the callback "args" to correctly identify the input.
  public static Map&lt;String, Object&gt; getCapitalCity(
      @Schema(name = "country", description = "The country to find the capital of.")
          String country) {
    System.out.printf("--- Tool 'getCapitalCity' executing with country: %s ---%n", country);
    Map&lt;String, String&gt; countryCapitals = new HashMap&lt;&gt;();
    countryCapitals.put("united states", "Washington, D.C.");
    countryCapitals.put("canada", "Ottawa");
    countryCapitals.put("france", "Paris");
    countryCapitals.put("germany", "Berlin");

    String capital =
        countryCapitals.getOrDefault(country.toLowerCase(), "Capital not found for " + country);
    // FunctionTool expects a Map&lt;String, Object&gt; as the return type for the method it wraps.
    return ImmutableMap.of("capital", capital);
  }

  // Define the Callback function
  // The Tool callback provides all these parameters by default.
  public Maybe&lt;Map&lt;String, Object&gt;&gt; simpleBeforeToolModifier(
      <mark>InvocationContext</mark> <mark>invocationContext,</mark>
      BaseTool tool,
      Map&lt;String, Object&gt; args,
      ToolContext toolContext) {

    String agentName = <mark>invocationContext.agent().name();</mark>
    String toolName = tool.name();
    System.out.printf(
        "[Callback] Before tool call for tool '%s' in agent '%s'%n", toolName, agentName);
    System.out.printf("[Callback] Original args: %s%n", args);

    if ("getCapitalCity".equals(toolName)) {
      String countryArg = (String) args.get("country");
      if (countryArg != null) {
        if ("canada".equalsIgnoreCase(countryArg)) {
          System.out.println("[Callback] Detected 'Canada'. Modifying args to 'France'.");
          args.put("country", "France");
          System.out.printf("[Callback] Modified args: %s%n", args);
          // Proceed with modified args
          return Maybe.empty();
        } else if ("BLOCK".equalsIgnoreCase(countryArg)) {
          System.out.println("[Callback] Detected 'BLOCK'. Skipping tool execution.");
          // Return a map to skip the tool call and use this as the result
          return Maybe.just(
              ImmutableMap.of("result", "Tool execution was blocked by before_tool_callback."));
        }
      }
    }

    System.out.println("[Callback] Proceeding with original or previously modified args.");
    return Maybe.empty();
  }

  public void runAgent(String query) {
    // --- Wrap the function into a Tool ---
    FunctionTool capitalTool = FunctionTool.create(this.getClass(), "getCapitalCity");

    // Create LlmAgent and Assign Callback
    LlmAgent myLlmAgent =
        LlmAgent.builder()
            .name(APP_NAME)
            .model(MODEL_NAME)
            .instruction(
                "You are an agent that can find capital cities. Use the getCapitalCity tool.")
            .description("An LLM agent demonstrating before_tool_callback")
            .tools(capitalTool)
            .beforeToolCallback(this::simpleBeforeToolModifier)
            .build();

    // Session and Runner
    InMemoryRunner runner = new InMemoryRunner(myLlmAgent);
    Session session =
        runner.sessionService().createSession(APP_NAME, USER_ID, null, SESSION_ID).blockingGet();

    Content userMessage = Content.fromParts(Part.fromText(query));

    System.out.printf("%n--- Calling agent with query: \"%s\" ---%n", query);
    Flowable&lt;Event&gt; eventStream = runner.runAsync(USER_ID, session.id(), userMessage);
    // Stream event response
    eventStream.blockingForEach(
        event -&gt; {
          if (event.finalResponse()) {
            System.out.println(event.stringifyContent());
          }
        });
  }
}
</code></pre></article></a><a href="https://google.github.io/adk-docs/callbacks/types-of-callbacks/#after-tool-callback" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="6.76"><h2>After Tool Callback</h2><pre><code>import com.google.adk.agents.LlmAgent;
import com.google.adk.agents.InvocationContext;
import com.google.adk.events.Event;
import com.google.adk.runner.InMemoryRunner;
import com.google.adk.sessions.Session;
import com.google.adk.tools.Annotations.Schema;
import com.google.adk.tools.BaseTool;
import com.google.adk.tools.FunctionTool;
import com.google.adk.tools.ToolContext;
import com.google.common.collect.ImmutableMap;
import com.google.genai.types.Content;
import com.google.genai.types.Part;
import io.reactivex.rxjava3.core.Flowable;
import io.reactivex.rxjava3.core.Maybe;
import java.util.HashMap;
import java.util.Map;

public class AfterToolCallbackExample {

  private static final String APP_NAME = "AfterToolCallbackAgentApp";
  private static final String USER_ID = "user_1";
  private static final String SESSION_ID = "session_001";
  private static final String MODEL_NAME = "gemini-2.0-flash";

  public static void main(String[] args) {
    AfterToolCallbackExample example = new AfterToolCallbackExample();
    example.runAgent("What is the capital of the United States?");
  }

  // --- Define a Simple Tool Function (Same as before) ---
  @Schema(description = "Retrieves the capital city of a given country.")
  public static Map&lt;String, Object&gt; getCapitalCity(
      @Schema(description = "The country to find the capital of.") String country) {
    System.out.printf("--- Tool 'getCapitalCity' executing with country: %s ---%n", country);
    Map&lt;String, String&gt; countryCapitals = new HashMap&lt;&gt;();
    countryCapitals.put("united states", "Washington, D.C.");
    countryCapitals.put("canada", "Ottawa");
    countryCapitals.put("france", "Paris");
    countryCapitals.put("germany", "Berlin");

    String capital =
        countryCapitals.getOrDefault(country.toLowerCase(), "Capital not found for " + country);
    return ImmutableMap.of("result", capital);
  }

  // Define the Callback function.
  public Maybe&lt;Map&lt;String, Object&gt;&gt; simpleAfterToolModifier(
      <mark>InvocationContext</mark> <mark>invocationContext,</mark>
      BaseTool tool,
      Map&lt;String, Object&gt; args,
      ToolContext toolContext,
      Object toolResponse) {

    // Inspects/modifies the tool result after execution.
    String agentName = <mark>invocationContext.agent().name();</mark>
    String toolName = tool.name();
    System.out.printf(
        "[Callback] After tool call for tool '%s' in agent '%s'%n", toolName, agentName);
    System.out.printf("[Callback] Args used: %s%n", args);
    System.out.printf("[Callback] Original tool_response: %s%n", toolResponse);

    if (!(toolResponse instanceof Map)) {
      System.out.println("[Callback] toolResponse is not a Map, cannot process further.");
      // Pass through if not a map
      return Maybe.empty();
    }

    // Default structure for function tool results is {"result": &lt;return_value&gt;}
    @SuppressWarnings("unchecked")
    Map&lt;String, Object&gt; responseMap = (Map&lt;String, Object&gt;) toolResponse;
    Object originalResultValue = responseMap.get("result");

    // --- Modification Example ---
    // If the tool was 'get_capital_city' and result is 'Washington, D.C.'
    if ("getCapitalCity".equals(toolName) &amp;&amp; "Washington, D.C.".equals(originalResultValue)) {
      System.out.println("[Callback] Detected 'Washington, D.C.'. Modifying tool response.");

      // IMPORTANT: Create a new mutable map or modify a copy
      Map&lt;String, Object&gt; modifiedResponse = new HashMap&lt;&gt;(responseMap);
      modifiedResponse.put(
          "result", originalResultValue + " (Note: This is the capital of the USA).");
      modifiedResponse.put("note_added_by_callback", true); // Add extra info if needed

      System.out.printf("[Callback] Modified tool_response: %s%n", modifiedResponse);
      return Maybe.just(modifiedResponse);
    }

    System.out.println("[Callback] Passing original tool response through.");
    // Return Maybe.empty() to use the original tool_response
    return Maybe.empty();
  }

  public void runAgent(String query) {
    // --- Wrap the function into a Tool ---
    FunctionTool capitalTool = FunctionTool.create(this.getClass(), "getCapitalCity");

    // Create LlmAgent and Assign Callback
    LlmAgent myLlmAgent =
        LlmAgent.builder()
            .name(APP_NAME)
            .model(MODEL_NAME)
            .instruction(
                "You are an agent that finds capital cities using the getCapitalCity tool. Report"
                    + " the result clearly.")
            .description("An LLM agent demonstrating after_tool_callback")
            .tools(capitalTool) // Add the tool
            .afterToolCallback(this::simpleAfterToolModifier) // Assign the callback
            .build();

    InMemoryRunner runner = new InMemoryRunner(myLlmAgent);

    // Session and Runner
    Session session =
        runner.sessionService().createSession(APP_NAME, USER_ID, null, SESSION_ID).blockingGet();

    Content userMessage = Content.fromParts(Part.fromText(query));

    System.out.printf("%n--- Calling agent with query: \"%s\" ---%n", query);
    Flowable&lt;Event&gt; eventStream = runner.runAsync(USER_ID, session.id(), userMessage);
    // Stream event response
    eventStream.blockingForEach(
        event -&gt; {
          if (event.finalResponse()) {
            System.out.println(event.stringifyContent());
          }
        });
  }
}
</code></pre></article></a><details class="md-search-result__more"><summary tabindex="-1"><div>1 more on this page</div></summary><a href="https://google.github.io/adk-docs/callbacks/types-of-callbacks/#before-agent-callback" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>Before Agent Callback</h2><p>When: Called immediately before the agent's <code>_run_async_impl</code> (or <code>_run_live_impl</code>) method is executed. It runs after the agent's <code><mark>InvocationContext</mark></code> is created but before its core logic begins.</p></article></a></details></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/runtime/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Runtime</h1></article></a><a href="https://google.github.io/adk-docs/runtime/#runners-role-orchestrator" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="3.95"><h2>Runner's Role (Orchestrator)</h2><pre><code>// Simplified conceptual view of the Runner's main loop logic in Java.
public Flowable&lt;Event&gt; runConceptual(
    Session session,                  
    <mark>InvocationContext</mark> <mark>invocationContext,</mark> 
    Content newQuery                
    ) {

    // 1. Append new_query to session event history (via SessionService)
    // ...
    sessionService.appendEvent(session, userEvent).blockingGet();

    // 2. Kick off event stream by calling the agent
    Flowable&lt;Event&gt; agentEventStream = agentToRun.runAsync(invocationContext);

    // 3. Process each generated event, commit changes, and "yield" or "emit"
    return agentEventStream.map(event -&gt; {
        // This mutates the session object (adds event, applies stateDelta).
        // The return value of appendEvent (a Single&lt;Event&gt;) is conceptually
        // just the event itself after processing.
        sessionService.appendEvent(session, event).blockingGet(); // Simplified blocking call

        // memory_service.update_memory(...) // If applicable - conceptual
        // artifact_service might have already been called via context during agent run

        // 4. "Yield" event for upstream processing
        //    In RxJava, returning the event in map effectively yields it to the next operator or subscriber.
        return event;
    });
}
</code></pre></article></a><details class="md-search-result__more"><summary tabindex="-1"><div>4 more on this page</div></summary><a href="https://google.github.io/adk-docs/runtime/#execution-logics-role-agent-tool-callback" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>Execution Logic's Role (Agent, Tool, Callback)</h2><ol> <li>Execute: Runs its logic based on the current <code><mark>InvocationContext</mark></code>, including the session state as it was when execution resumed.</li> <li>Yield: When the logic needs to communicate (send a message, call a tool, report a state change), it constructs an <code>Event</code> containing the relevant content and actions, and then <code>yield</code>s this event back to the <code>Runner</code>.</li> <li>Pause: Crucially, execution of the agent logic pauses immediately after the <code>yield</code> statement (or <code>return</code> in RxJava). It waits for the <code>Runner</code> to complete step 3 (processing and committing).</li> <li>Resume: Only after the <code>Runner</code> has processed the yielded event does the agent logic resume execution from the statement immediately following the <code>yield</code>.</li> <li>See Updated State: Upon resumption, the agent logic can now reliably access the session state (<code>ctx.session.state</code>) reflecting the changes that were committed by the <code>Runner</code> from the previously yielded event.</li> </ol></article></a><a href="https://google.github.io/adk-docs/runtime/#invocation" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2><code>Invocation</code></h2><ul> <li>Role: A conceptual term representing everything that happens in response to a single user query, from the moment the <code>Runner</code> receives it until the agent logic finishes yielding events for that query.</li> <li>Function: An invocation might involve multiple agent runs (if using agent transfer or <code>AgentTool</code>), multiple LLM calls, tool executions, and callback executions, all tied together by a single <code>invocation_id</code> within the <code><mark>InvocationContext</mark></code>. State variables prefixed with <code>temp:</code> are strictly scoped to a single invocation and discarded afterwards.</li> </ul></article></a><a href="https://google.github.io/adk-docs/runtime/#step-by-step-breakdown" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>Step-by-Step Breakdown</h2><ol> <li>User Input: The User sends a query (e.g., "What's the capital of France?").</li> <li>Runner Starts: <code>Runner.run_async</code> begins. It interacts with the <code>SessionService</code> to load the relevant <code>Session</code> and adds the user query as the first <code>Event</code> to the session history. An <code><mark>InvocationContext</mark></code> (<code>ctx</code>) is prepared.</li> <li>Agent Execution: The <code>Runner</code> calls <code>agent.run_async(ctx)</code> on the designated root agent (e.g., an <code>LlmAgent</code>).</li> <li>LLM Call (Example): The <code>Agent_Llm</code> determines it needs information, perhaps by calling a tool. It prepares a request for the <code>LLM</code>. Let's assume the LLM decides to call <code>MyTool</code>.</li> <li>Yield FunctionCall Event: The <code>Agent_Llm</code> receives the <code>FunctionCall</code> response from the LLM, wraps it in an <code>Event(author='Agent_Llm', content=Content(parts=[Part(function_call=...)]))</code>, and <code>yields</code> or <code>emits</code> this event.</li> <li>Agent Pauses: The <code>Agent_Llm</code>'s execution pauses immediately after the <code>yield</code>.</li> <li>Runner Processes: The <code>Runner</code> receives the FunctionCall event. It passes it to the <code>SessionService</code> to record it in the history. The <code>Runner</code> then yields the event upstream to the <code>User</code> (or application).</li> <li>Agent Resumes: The <code>Runner</code> signals that the event is processed, and <code>Agent_Llm</code> resumes execution.</li> <li>Tool Execution: The <code>Agent_Llm</code>'s internal flow now proceeds to execute the requested <code>MyTool</code>. It calls <code>tool.run_async(...)</code>.</li> <li>Tool Returns Result: <code>MyTool</code> executes and returns its result (e.g., <code>{'result': 'Paris'}</code>).</li> <li>Yield FunctionResponse Event: The agent (<code>Agent_Llm</code>) wraps the tool result into an <code>Event</code> containing a <code>FunctionResponse</code> part (e.g., <code>Event(author='Agent_Llm', content=Content(role='user', parts=[Part(function_response=...)]))</code>). This event might also contain <code>actions</code> if the tool modified state (<code>state_delta</code>) or saved artifacts (<code>artifact_delta</code>). The agent <code>yield</code>s this event.</li> <li>Agent Pauses: <code>Agent_Llm</code> pauses again.</li> <li>Runner Processes: <code>Runner</code> receives the FunctionResponse event. It passes it to <code>SessionService</code> which applies any <code>state_delta</code>/<code>artifact_delta</code> and adds the event to history. <code>Runner</code> yields the event upstream.</li> <li>Agent Resumes: <code>Agent_Llm</code> resumes, now knowing the tool result and any state changes are committed.</li> <li>Final LLM Call (Example): <code>Agent_Llm</code> sends the tool result back to the <code>LLM</code> to generate a natural language response.</li> <li>Yield Final Text Event: <code>Agent_Llm</code> receives the final text from the <code>LLM</code>, wraps it in an <code>Event(author='Agent_Llm', content=Content(parts=[Part(text=...)]))</code>, and <code>yield</code>s it.</li> <li>Agent Pauses: <code>Agent_Llm</code> pauses.</li> <li>Runner Processes: <code>Runner</code> receives the final text event, passes it to <code>SessionService</code> for history, and yields it upstream to the <code>User</code>. This is likely marked as the <code>is_final_response()</code>.</li> <li>Agent Resumes &amp; Finishes: <code>Agent_Llm</code> resumes. Having completed its task for this invocation, its <code>run_async</code> generator finishes.</li> <li>Runner Completes: The <code>Runner</code> sees the agent's generator is exhausted and finishes its loop for this invocation.</li> </ol></article></a><a href="https://google.github.io/adk-docs/runtime/#state-updates-commitment-timing" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>State Updates &amp; Commitment Timing</h2><ul> <li> <p>The Rule: When your code (in an agent, tool, or callback) modifies the session state (e.g., <code>context.state['my_key'] = 'new_value'</code>), this change is initially recorded locally within the current <code><mark>InvocationContext</mark></code>. The change is only guaranteed to be persisted (saved by the <code>SessionService</code>) after the <code>Event</code> carrying the corresponding <code>state_delta</code> in its <code>actions</code> has been <code>yield</code>-ed by your code and subsequently processed by the <code>Runner</code>.</p> </li> <li> <p>Implication: Code that runs after resuming from a <code>yield</code> can reliably assume that the state changes signaled in the yielded event have been committed.</p> </li> </ul></article></a></details></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/plugins/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Plugins</h1></article></a><a href="https://google.github.io/adk-docs/plugins/#user-message-callbacks" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="2.30"><h2>User Message callbacks</h2><pre><code>async def on_user_message_callback(
    self,
    *,
    invocation_context: <mark>InvocationContext,</mark>
    user_message: types.Content,
) -&gt; Optional[types.Content]:
</code></pre></article></a><a href="https://google.github.io/adk-docs/plugins/#event-callbacks" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="2.30"><h2>Event callbacks</h2><pre><code>async def on_event_callback(
    self, *, invocation_context: <mark>InvocationContext,</mark> event: Event
) -&gt; Optional[Event]:
</code></pre></article></a><details class="md-search-result__more"><summary tabindex="-1"><div>2 more on this page</div></summary><a href="https://google.github.io/adk-docs/plugins/#runner-start-callbacks" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>Runner start callbacks</h2><pre><code>async def before_run_callback(
    self, *, invocation_context: <mark>InvocationContext</mark>
) -&gt; Optional[types.Content]:
</code></pre></article></a><a href="https://google.github.io/adk-docs/plugins/#runner-end-callbacks" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>Runner end callbacks</h2><pre><code>async def after_run_callback(
    self, *, invocation_context: <mark>InvocationContext</mark>
) -&gt; Optional[None]:
</code></pre></article></a></details></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/agents/workflow-agents/parallel-agents/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Parallel agents</h1></article></a><a href="https://google.github.io/adk-docs/agents/workflow-agents/parallel-agents/#independent-execution-and-state-management" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="2.27"><h2>Independent Execution and State Management</h2><ul> <li>Shared <code><mark>InvocationContext</mark></code>: You could pass a shared <code><mark>InvocationContext</mark></code> object to each sub-agent.  This object could act as a shared data store.  However, you'd need to manage concurrent access to this shared context carefully (e.g., using locks) to avoid race conditions.</li> <li>External State Management:  Use an external database, message queue, or other mechanism to manage shared state and facilitate communication between agents.</li> <li>Post-Processing: Collect results from each branch, and then implement logic to coordinate data afterwards.</li> </ul></article></a></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/agents/workflow-agents/loop-agents/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Loop agents</h1></article></a><a href="https://google.github.io/adk-docs/agents/workflow-agents/loop-agents/#full-example-iterative-document-improvement" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>Full Example: Iterative Document Improvement</h2>Full Code PythonJava <pre><code># Part of agent.py --&gt; Follow https://google.github.io/adk-docs/get-started/quickstart/ to learn the setup

import asyncio
import os
from google.adk.agents import LoopAgent, LlmAgent, BaseAgent, SequentialAgent
from google.genai import types
from google.adk.runners import InMemoryRunner
from google.adk.agents.invocation_context import <mark>InvocationContext</mark>
from google.adk.tools.tool_context import ToolContext
from typing import AsyncGenerator, Optional
from google.adk.events import Event, EventActions

# --- Constants ---
APP_NAME = "doc_writing_app_v3" # New App Name
USER_ID = "dev_user_01"
SESSION_ID_BASE = "loop_exit_tool_session" # New Base Session ID
GEMINI_MODEL = "gemini-2.0-flash"
STATE_INITIAL_TOPIC = "initial_topic"

# --- State Keys ---
STATE_CURRENT_DOC = "current_document"
STATE_CRITICISM = "criticism"
# Define the exact phrase the Critic should use to signal completion
COMPLETION_PHRASE = "No major issues found."

# --- Tool Definition ---
def exit_loop(tool_context: ToolContext):
  """Call this function ONLY when the critique indicates no further changes are needed, signaling the iterative process should end."""
  print(f"  [Tool Call] exit_loop triggered by {tool_context.agent_name}")
  tool_context.actions.escalate = True
  # Return empty dict as tools should typically return JSON-serializable output
  return {}

# --- Agent Definitions ---

# STEP 1: Initial Writer Agent (Runs ONCE at the beginning)
initial_writer_agent = LlmAgent(
    name="InitialWriterAgent",
    model=GEMINI_MODEL,
    include_contents='none',
    # MODIFIED Instruction: Ask for a slightly more developed start
    instruction=f"""You are a Creative Writing Assistant tasked with starting a story.
    Write the *first draft* of a short story (aim for 2-4 sentences).
    Base the content *only* on the topic provided below. Try to introduce a specific element (like a character, a setting detail, or a starting action) to make it engaging.
    Topic: {{initial_topic}}

    Output *only* the story/document text. Do not add introductions or explanations.
""",
    description="Writes the initial document draft based on the topic, aiming for some initial substance.",
    output_key=STATE_CURRENT_DOC
)

# STEP 2a: Critic Agent (Inside the Refinement Loop)
critic_agent_in_loop = LlmAgent(
    name="CriticAgent",
    model=GEMINI_MODEL,
    include_contents='none',
    # MODIFIED Instruction: More nuanced completion criteria, look for clear improvement paths.
    instruction=f"""You are a Constructive Critic AI reviewing a short document draft (typically 2-6 sentences). Your goal is balanced feedback.

    **Document to Review:**
    ```
    {{current_document}}
    ```

    **Task:**
    Review the document for clarity, engagement, and basic coherence according to the initial topic (if known).

    IF you identify 1-2 *clear and actionable* ways the document could be improved to better capture the topic or enhance reader engagement (e.g., "Needs a stronger opening sentence", "Clarify the character's goal"):
    Provide these specific suggestions concisely. Output *only* the critique text.

    ELSE IF the document is coherent, addresses the topic adequately for its length, and has no glaring errors or obvious omissions:
    Respond *exactly* with the phrase "{COMPLETION_PHRASE}" and nothing else. It doesn't need to be perfect, just functionally complete for this stage. Avoid suggesting purely subjective stylistic preferences if the core is sound.

    Do not add explanations. Output only the critique OR the exact completion phrase.
""",
    description="Reviews the current draft, providing critique if clear improvements are needed, otherwise signals completion.",
    output_key=STATE_CRITICISM
)


# STEP 2b: Refiner/Exiter Agent (Inside the Refinement Loop)
refiner_agent_in_loop = LlmAgent(
    name="RefinerAgent",
    model=GEMINI_MODEL,
    # Relies solely on state via placeholders
    include_contents='none',
    instruction=f"""You are a Creative Writing Assistant refining a document based on feedback OR exiting the process.
    **Current Document:**
    ```
    {{current_document}}
    ```
    **Critique/Suggestions:**
    {{criticism}}

    **Task:**
    Analyze the 'Critique/Suggestions'.
    IF the critique is *exactly* "{COMPLETION_PHRASE}":
    You MUST call the 'exit_loop' function. Do not output any text.
    ELSE (the critique contains actionable feedback):
    Carefully apply the suggestions to improve the 'Current Document'. Output *only* the refined document text.

    Do not add explanations. Either output the refined document OR call the exit_loop function.
""",
    description="Refines the document based on critique, or calls exit_loop if critique indicates completion.",
    tools=[exit_loop], # Provide the exit_loop tool
    output_key=STATE_CURRENT_DOC # Overwrites state['current_document'] with the refined version
)


# STEP 2: Refinement Loop Agent
refinement_loop = LoopAgent(
    name="RefinementLoop",
    # Agent order is crucial: Critique first, then Refine/Exit
    sub_agents=[
        critic_agent_in_loop,
        refiner_agent_in_loop,
    ],
    max_iterations=5 # Limit loops
)

# STEP 3: Overall Sequential Pipeline
# For ADK tools compatibility, the root agent must be named `root_agent`
root_agent = SequentialAgent(
    name="IterativeWritingPipeline",
    sub_agents=[
        initial_writer_agent, # Run first to create initial doc
        refinement_loop       # Then run the critique/refine loop
    ],
    description="Writes an initial document and then iteratively refines it with critique using an exit tool."
)
</code></pre></article></a></li><li class="md-search-result__item"><a href="https://google.github.io/adk-docs/agents/workflow-agents/sequential-agents/" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="0.00"><div class="md-search-result__icon md-icon"></div><h1>Sequential agents</h1></article></a><a href="https://google.github.io/adk-docs/agents/workflow-agents/sequential-agents/#full-example-code-development-pipeline" class="md-search-result__link" tabindex="-1"><article class="md-search-result__article md-typeset" data-md-score="1.65"><h2>Full Example: Code Development Pipeline</h2><p>The <code>SequentialAgent</code> passes the same <code><mark>InvocationContext</mark></code> to each of its sub-agents. This means they all share the same session state, including the temporary (<code>temp:</code>) namespace, making it easy to pass data between steps within a single turn.</p></article></a></li></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    

    <!-- Repository information -->
    
      <div class="md-header__source">
        <!-- First repository information -->
<a href="https://github.com/google/adk-python" class="md-source" data-md-component="source" style="margin-right: 10px;" title="adk-python">
  <div class="md-source__icon md-icon">
    
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6m-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3m44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9M244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8M97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1m-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7m32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1m-11.4-14.7c-1.6 1-1.6 3.6 0 5.9s4.3 3.3 5.6 2.3c1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2"></path></svg>
  </div>
  <div class="md-source__repository md-source__repository--active">
    adk-python
  <ul class="md-source__facts"><li class="md-source__fact md-source__fact--version">v1.16.0</li><li class="md-source__fact md-source__fact--stars">13.8k</li><li class="md-source__fact md-source__fact--forks">2.1k</li></ul></div>
</a>

<!-- Second repository information -->
<a href="https://github.com/google/adk-java" class="md-source" data-md-component="source" title="adk-java">
  <div class="md-source__icon md-icon">
    
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6m-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3m44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9M244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8M97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1m-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7m32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1m-11.4-14.7c-1.6 1-1.6 3.6 0 5.9s4.3 3.3 5.6 2.3c1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2"></path></svg>
  </div>
  <div class="md-source__repository md-source__repository--active">
    adk-java
  <ul class="md-source__facts"><li class="md-source__fact md-source__fact--version">v1.16.0</li><li class="md-source__fact md-source__fact--stars">13.8k</li><li class="md-source__fact md-source__fact--forks">2.1k</li></ul></div>
</a>
      </div>
    
  </nav>

  <!-- Navigation tabs (sticky) -->
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" style="top: 53px;">
                <div class="md-sidebar__scrollwrap" style="height: 818px;">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="https://google.github.io/adk-docs/" title="Agent Development Kit" class="md-nav__button md-logo" aria-label="Agent Development Kit" data-md-component="logo">
      
  <img src="./webpage_files/agent-development-kit.png" alt="logo">

    </a>
    Agent Development Kit
  </label>
  
    <div class="md-nav__source">
      <!-- First repository information -->
<a href="https://github.com/google/adk-python" title="adk-python" class="md-source" data-md-component="source" style="margin-right: 10px;">
  <div class="md-source__icon md-icon">
    
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6m-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3m44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9M244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8M97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1m-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7m32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1m-11.4-14.7c-1.6 1-1.6 3.6 0 5.9s4.3 3.3 5.6 2.3c1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2"></path></svg>
  </div>
  <div class="md-source__repository">
    adk-python
  </div>
</a>

<!-- Second repository information -->
<a href="https://github.com/google/adk-java" title="adk-java" class="md-source" data-md-component="source">
  <div class="md-source__icon md-icon">
    
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6m-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3m44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9M244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8M97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1m-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7m32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1m-11.4-14.7c-1.6 1-1.6 3.6 0 5.9s4.3 3.3 5.6 2.3c1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2"></path></svg>
  </div>
  <div class="md-source__repository">
    adk-java
  </div>
</a>
    </div>
  
  <ul class="md-nav__list">
    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Home
    
  </span>
  

      </a>
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_2">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/get-started/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Get started
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_2" id="__nav_2_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_2_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_2">
            <span class="md-nav__icon md-icon"></span>
            Get started
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/python/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Python
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/java/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Java
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_3">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/tutorials/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Build your agent
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_3" id="__nav_3_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_3_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_3">
            <span class="md-nav__icon md-icon"></span>
            Build your agent
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/quickstart/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Multi-tool agent
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tutorials/agent-team/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Agent team
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_3_4">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/get-started/streaming/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Streaming agent
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_3_4" id="__nav_3_4_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="2" aria-labelledby="__nav_3_4_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_3_4">
            <span class="md-nav__icon md-icon"></span>
            Streaming agent
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/streaming/quickstart-streaming/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Python
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/streaming/quickstart-streaming-java/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Java
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tutorials/ag-ui/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Agentic UI (AG-UI)
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/testing/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Testing
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://github.com/google/adk-samples" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Code samples
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/installation/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Advanced setup
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/get-started/about/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Technical overview
    
  </span>
  

      </a>
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_5">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/agents/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Agents
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_5" id="__nav_5_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_5_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_5">
            <span class="md-nav__icon md-icon"></span>
            Agents
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/llm-agents/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    LLM agents
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_5_3">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/agents/workflow-agents/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Workflow agents
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_5_3" id="__nav_5_3_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="2" aria-labelledby="__nav_5_3_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_5_3">
            <span class="md-nav__icon md-icon"></span>
            Workflow agents
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/workflow-agents/sequential-agents/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Sequential agents
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/workflow-agents/loop-agents/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Loop agents
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/workflow-agents/parallel-agents/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Parallel agents
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/custom-agents/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Custom agents
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/multi-agents/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Multi-agent systems
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/config/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Agent Config
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/agents/models/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Models &amp; Authentication
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_6">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/tools/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Tools for Agents
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_6" id="__nav_6_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_6_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_6">
            <span class="md-nav__icon md-icon"></span>
            Tools for Agents
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/built-in-tools/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Built-in tools
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    
    
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_6_3">
        
          
          <label class="md-nav__link" for="__nav_6_3" id="__nav_6_3_label" tabindex="0">
            
  
  
  <span class="md-ellipsis">
    Gemini API tools
    
  </span>
  

            <span class="md-nav__icon md-icon"></span>
          </label>
        
        <nav class="md-nav" data-md-level="2" aria-labelledby="__nav_6_3_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_6_3">
            <span class="md-nav__icon md-icon"></span>
            Gemini API tools
          </label>
          <ul class="md-nav__list">
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/gemini-api/computer-use/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Computer use
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

              
            
              
                
  
  
  
  
    
    
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_6_4">
        
          
          <label class="md-nav__link" for="__nav_6_4" id="__nav_6_4_label" tabindex="0">
            
  
  
  <span class="md-ellipsis">
    Google Cloud tools
    
  </span>
  

            <span class="md-nav__icon md-icon"></span>
          </label>
        
        <nav class="md-nav" data-md-level="2" aria-labelledby="__nav_6_4_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_6_4">
            <span class="md-nav__icon md-icon"></span>
            Google Cloud tools
          </label>
          <ul class="md-nav__list">
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/google-cloud-tools/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Overview
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/google-cloud/code-exec-agent-engine/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Code Execution with Agent Engine
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/third-party/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Third party tools
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/third-party/openapi-tools/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    OpenAPI tools
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_7">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/tools-custom/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Custom Tools
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_7" id="__nav_7_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_7_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_7">
            <span class="md-nav__icon md-icon"></span>
            Custom Tools
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    
    
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_7_2">
        
          
          <label class="md-nav__link" for="__nav_7_2" id="__nav_7_2_label" tabindex="0">
            
  
  
  <span class="md-ellipsis">
    Function tools
    
  </span>
  

            <span class="md-nav__icon md-icon"></span>
          </label>
        
        <nav class="md-nav" data-md-level="2" aria-labelledby="__nav_7_2_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_7_2">
            <span class="md-nav__icon md-icon"></span>
            Function tools
          </label>
          <ul class="md-nav__list">
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/function-tools/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Overview
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/performance/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Tool performance
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/confirmation/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Action confirmations
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/mcp-tools/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    MCP tools
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/tools/authentication/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Authentication
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_8">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/runtime/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Running Agents
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_8" id="__nav_8_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_8_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_8">
            <span class="md-nav__icon md-icon"></span>
            Running Agents
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/runtime/runconfig/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Runtime Config
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/runtime/resume/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Resume Agents
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_9">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/deploy/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Deploy
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_9" id="__nav_9_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_9_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_9">
            <span class="md-nav__icon md-icon"></span>
            Deploy
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/deploy/agent-engine/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Agent Engine
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/deploy/cloud-run/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Cloud Run
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/deploy/gke/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    GKE
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_10">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/sessions/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Sessions &amp; Memory
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_10" id="__nav_10_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_10_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_10">
            <span class="md-nav__icon md-icon"></span>
            Sessions &amp; Memory
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/sessions/session/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Session
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/sessions/state/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    State
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/sessions/memory/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Memory
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/sessions/express-mode/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Vertex AI Express Mode
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_11">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/callbacks/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Callbacks
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_11" id="__nav_11_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_11_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_11">
            <span class="md-nav__icon md-icon"></span>
            Callbacks
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/callbacks/types-of-callbacks/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Types of callbacks
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/callbacks/design-patterns-and-best-practices/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Callback patterns
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_12">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/artifacts/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Artifacts
    
  </span>
  

            </a>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_12_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_12">
            <span class="md-nav__icon md-icon"></span>
            Artifacts
          </label>
          <ul class="md-nav__list">
            
              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_13">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/events/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Events
    
  </span>
  

            </a>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_13_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_13">
            <span class="md-nav__icon md-icon"></span>
            Events
          </label>
          <ul class="md-nav__list">
            
              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_14">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/context/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Context
    
  </span>
  

            </a>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_14_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_14">
            <span class="md-nav__icon md-icon"></span>
            Context
          </label>
          <ul class="md-nav__list">
            
              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
      
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_15">
        
          
          <label class="md-nav__link" for="__nav_15" id="__nav_15_label" tabindex="0">
            
  
  
  <span class="md-ellipsis">
    Observability
    
  </span>
  

            <span class="md-nav__icon md-icon"></span>
          </label>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_15_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_15">
            <span class="md-nav__icon md-icon"></span>
            Observability
          </label>
          <ul class="md-nav__list">
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/observability/logging/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Logging
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/observability/cloud-trace/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Cloud Trace
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/observability/agentops/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    AgentOps
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/observability/arize-ax/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Arize AX
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/observability/phoenix/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Phoenix
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/observability/weave/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    W&amp;B Weave
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_16">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/evaluate/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Evaluate
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_16" id="__nav_16_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_16_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_16">
            <span class="md-nav__icon md-icon"></span>
            Evaluate
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/evaluate/criteria/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Criteria
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_17">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/mcp/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    MCP
    
  </span>
  

            </a>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_17_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_17">
            <span class="md-nav__icon md-icon"></span>
            MCP
          </label>
          <ul class="md-nav__list">
            
              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_18">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/plugins/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Plugins
    
  </span>
  

            </a>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_18_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_18">
            <span class="md-nav__icon md-icon"></span>
            Plugins
          </label>
          <ul class="md-nav__list">
            
              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
    
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--active md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_19" checked="">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/streaming/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    Bidi-streaming (live)
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_19" id="__nav_19_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_19_label" aria-expanded="true">
          <label class="md-nav__title" for="__nav_19">
            <span class="md-nav__icon md-icon"></span>
            Bidi-streaming (live)
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/streaming/custom-streaming/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Custom Audio Bidi-streaming app sample (SSE)
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
    
  
  
  
    <li class="md-nav__item md-nav__item--active">
      
      <input class="md-nav__toggle md-toggle" type="checkbox" id="__toc">
      
      
        
      
      
        <label class="md-nav__link md-nav__link--active" for="__toc">
          
  
  
  <span class="md-ellipsis">
    Custom Audio Bidi-streaming app sample (WebSockets)
    
  </span>
  

          <span class="md-nav__icon md-icon"></span>
        </label>
      
      <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/" class="md-nav__link md-nav__link--active">
        
  
  
  <span class="md-ellipsis">
    Custom Audio Bidi-streaming app sample (WebSockets)
    
  </span>
  

      </a>
      
        

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
    
  
  
    <label class="md-nav__title" for="__toc">
      <span class="md-nav__icon md-icon"></span>
      Table of contents
    </label>
    <ul class="md-nav__list" data-md-component="toc">
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#supported-models" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Supported models for voice/video streaming
    </span>
  </a>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#1.-setup-installation" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      1. Install ADK
    </span>
  </a>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#2.-set-up-the-platform" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      2. Set up the platform
    </span>
  </a>
  
    <nav class="md-nav" aria-label="2. Set up the platform">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#agentpy" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      agent.py
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#3.-interact-with-your-streaming-app" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      3. Interact with Your Streaming app
    </span>
  </a>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#4.-server-side-code-overview" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      4. Server code overview
    </span>
  </a>
  
    <nav class="md-nav" aria-label="4. Server code overview">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#adk-streaming-setup" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      ADK Streaming Setup
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#start_agent_sessionsession_id-is_audiofalse" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      start_agent_session(session_id, is_audio=False)
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#session-resumption-configuration" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Session Resumption Configuration
    </span>
  </a>
  
    <nav class="md-nav" aria-label="Session Resumption Configuration">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#enabling-session-resumption" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Enabling Session Resumption
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#session-resumption-features" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Session Resumption Features
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#implementation-notes" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Implementation Notes
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#troubleshooting" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Troubleshooting
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#agent_to_client_messagingwebsocket-live_events" class="md-nav__link md-nav__link--passed md-nav__link--active">
    <span class="md-ellipsis">
      agent_to_client_messaging(websocket, live_events)
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#client_to_agent_messagingwebsocket-live_request_queue" class="md-nav__link">
    <span class="md-ellipsis">
      client_to_agent_messaging(websocket, live_request_queue)
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#fastapi-web-application" class="md-nav__link">
    <span class="md-ellipsis">
      FastAPI Web Application
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#how-it-works-overall-flow" class="md-nav__link">
    <span class="md-ellipsis">
      How It Works (Overall Flow)
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#5.-client-side-code-overview" class="md-nav__link">
    <span class="md-ellipsis">
      5. Client code overview
    </span>
  </a>
  
    <nav class="md-nav" aria-label="5. Client code overview">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#prerequisites" class="md-nav__link">
    <span class="md-ellipsis">
      Prerequisites
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#websocket-handling" class="md-nav__link">
    <span class="md-ellipsis">
      WebSocket Handling
    </span>
  </a>
  
    <nav class="md-nav" aria-label="WebSocket Handling">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#dom-interaction-message-submission" class="md-nav__link">
    <span class="md-ellipsis">
      DOM Interaction &amp; Message Submission
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#audio-handling" class="md-nav__link">
    <span class="md-ellipsis">
      Audio Handling
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#how-it-works-client-side-flow" class="md-nav__link">
    <span class="md-ellipsis">
      How It Works (Client-Side Flow)
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#summary" class="md-nav__link">
    <span class="md-ellipsis">
      Summary
    </span>
  </a>
  
    <nav class="md-nav" aria-label="Summary">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#next-steps-for-production" class="md-nav__link">
    <span class="md-ellipsis">
      Next steps for production
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
    </ul>
  
</nav>
      
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/streaming/dev-guide/part1/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Bidi-streaming development guide series
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/streaming/streaming-tools/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Streaming Tools
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/streaming/configuration/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Configurating Bidi-streaming behaviour
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://medium.com/google-cloud/google-adk-vertex-ai-live-api-125238982d5e" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Google ADK + Vertex AI Live API (blog post)
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_20">
        
          
          <label class="md-nav__link" for="__nav_20" id="__nav_20_label" tabindex="0">
            
  
  
  <span class="md-ellipsis">
    Grounding
    
  </span>
  

            <span class="md-nav__icon md-icon"></span>
          </label>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_20_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_20">
            <span class="md-nav__icon md-icon"></span>
            Grounding
          </label>
          <ul class="md-nav__list">
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/grounding/google_search_grounding/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Understanding Google Search Grounding
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/grounding/vertex_ai_search_grounding/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Understanding Vertex AI Search Grounding
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/safety/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Safety and Security
    
  </span>
  

      </a>
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_22">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/a2a/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    A2A Protocol
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_22" id="__nav_22_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_22_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_22">
            <span class="md-nav__icon md-icon"></span>
            A2A Protocol
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/a2a/intro/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Introduction to A2A
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/a2a/quickstart-exposing/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    A2A Quickstart (Exposing)
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/a2a/quickstart-consuming/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    A2A Quickstart (Consuming)
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://a2a-protocol.org/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    A2A Protocol Documentation
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/community/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Community Resources
    
  </span>
  

      </a>
    </li>
  

    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/contributing-guide/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Contributing Guide
    
  </span>
  

      </a>
    </li>
  

    
      
      
  
  
  
  
    
    
      
        
          
        
      
        
      
        
      
        
      
        
      
        
      
    
    
    
    
    <li class="md-nav__item md-nav__item--nested">
      
        
        
        <input class="md-nav__toggle md-toggle " type="checkbox" id="__nav_25">
        
          
          <div class="md-nav__link md-nav__container">
            <a href="https://google.github.io/adk-docs/api-reference/" class="md-nav__link ">
              
  
  
  <span class="md-ellipsis">
    API Reference
    
  </span>
  

            </a>
            
              
              <label class="md-nav__link " for="__nav_25" id="__nav_25_label" tabindex="0">
                <span class="md-nav__icon md-icon"></span>
              </label>
            
          </div>
        
        <nav class="md-nav" data-md-level="1" aria-labelledby="__nav_25_label" aria-expanded="false">
          <label class="md-nav__title" for="__nav_25">
            <span class="md-nav__icon md-icon"></span>
            API Reference
          </label>
          <ul class="md-nav__list">
            
              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/api-reference/python/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Python ADK
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/api-reference/java/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Java ADK
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/api-reference/cli/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    CLI Reference
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/api-reference/agentconfig/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    Agent Config reference
    
  </span>
  

      </a>
    </li>
  

              
            
              
                
  
  
  
  
    <li class="md-nav__item">
      <a href="https://google.github.io/adk-docs/api-reference/rest/" class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    REST API
    
  </span>
  

      </a>
    </li>
  

              
            
          </ul>
        </nav>
      
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" style="top: 53px;">
                <div class="md-sidebar__scrollwrap" style="height: 818px;">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
    
  
  
    <label class="md-nav__title" for="__toc">
      <span class="md-nav__icon md-icon"></span>
      Table of contents
    </label>
    <ul class="md-nav__list" data-md-component="toc">
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#supported-models" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Supported models for voice/video streaming
    </span>
  </a>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#1.-setup-installation" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      1. Install ADK
    </span>
  </a>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#2.-set-up-the-platform" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      2. Set up the platform
    </span>
  </a>
  
    <nav class="md-nav" aria-label="2. Set up the platform">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#agentpy" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      agent.py
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#3.-interact-with-your-streaming-app" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      3. Interact with Your Streaming app
    </span>
  </a>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#4.-server-side-code-overview" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      4. Server code overview
    </span>
  </a>
  
    <nav class="md-nav" aria-label="4. Server code overview">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#adk-streaming-setup" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      ADK Streaming Setup
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#start_agent_sessionsession_id-is_audiofalse" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      start_agent_session(session_id, is_audio=False)
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#session-resumption-configuration" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Session Resumption Configuration
    </span>
  </a>
  
    <nav class="md-nav" aria-label="Session Resumption Configuration">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#enabling-session-resumption" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Enabling Session Resumption
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#session-resumption-features" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Session Resumption Features
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#implementation-notes" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Implementation Notes
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#troubleshooting" class="md-nav__link md-nav__link--passed">
    <span class="md-ellipsis">
      Troubleshooting
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#agent_to_client_messagingwebsocket-live_events" class="md-nav__link md-nav__link--passed md-nav__link--active" title="agent_to_client_messaging(websocket, live_events)">
    <span class="md-ellipsis">
      agent_to_client_messaging(websocket, live_events)
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#client_to_agent_messagingwebsocket-live_request_queue" class="md-nav__link" title="client_to_agent_messaging(websocket, live_request_queue)">
    <span class="md-ellipsis">
      client_to_agent_messaging(websocket, live_request_queue)
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#fastapi-web-application" class="md-nav__link">
    <span class="md-ellipsis">
      FastAPI Web Application
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#how-it-works-overall-flow" class="md-nav__link">
    <span class="md-ellipsis">
      How It Works (Overall Flow)
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#5.-client-side-code-overview" class="md-nav__link">
    <span class="md-ellipsis">
      5. Client code overview
    </span>
  </a>
  
    <nav class="md-nav" aria-label="5. Client code overview">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#prerequisites" class="md-nav__link">
    <span class="md-ellipsis">
      Prerequisites
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#websocket-handling" class="md-nav__link">
    <span class="md-ellipsis">
      WebSocket Handling
    </span>
  </a>
  
    <nav class="md-nav" aria-label="WebSocket Handling">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#dom-interaction-message-submission" class="md-nav__link">
    <span class="md-ellipsis">
      DOM Interaction &amp; Message Submission
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#audio-handling" class="md-nav__link">
    <span class="md-ellipsis">
      Audio Handling
    </span>
  </a>
  
</li>
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#how-it-works-client-side-flow" class="md-nav__link">
    <span class="md-ellipsis">
      How It Works (Client-Side Flow)
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
        <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#summary" class="md-nav__link">
    <span class="md-ellipsis">
      Summary
    </span>
  </a>
  
    <nav class="md-nav" aria-label="Summary">
      <ul class="md-nav__list">
        
          <li class="md-nav__item">
  <a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#next-steps-for-production" class="md-nav__link">
    <span class="md-ellipsis">
      Next steps for production
    </span>
  </a>
  
</li>
        
      </ul>
    </nav>
  
</li>
      
    </ul>
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              <article class="md-content__inner md-typeset">
                
                  


  
    <a href="https://github.com/google/adk-docs/edit/main/docs/streaming/custom-streaming-ws.md" title="Edit this page" class="md-content__button md-icon">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10 20H6V4h7v5h5v3.1l2-2V8l-6-6H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h4zm10.2-7c.1 0 .3.1.4.2l1.3 1.3c.2.2.2.6 0 .8l-1 1-2.1-2.1 1-1c.1-.1.2-.2.4-.2m0 3.9L14.1 23H12v-2.1l6.1-6.1z"></path></svg>
    </a>
  
  
    
      
    
    <a href="https://github.com/google/adk-docs/raw/main/docs/streaming/custom-streaming-ws.md" title="View source of this page" class="md-content__button md-icon">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 18c.56 0 1 .44 1 1s-.44 1-1 1-1-.44-1-1 .44-1 1-1m0-3c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4m0 6.5a2.5 2.5 0 0 1-2.5-2.5 2.5 2.5 0 0 1 2.5-2.5 2.5 2.5 0 0 1 2.5 2.5 2.5 2.5 0 0 1-2.5 2.5M9.27 20H6V4h7v5h5v4.07c.7.08 1.36.25 2 .49V8l-6-6H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4.5a8.2 8.2 0 0 1-1.23-2"></path></svg>
    </a>
  


<h1 id="custom-streaming-websocket">Custom Audio Streaming app (WebSocket)<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#custom-streaming-websocket" title="Permanent link">¶</a></h1>
<p>This article overviews the server and client code for a custom asynchronous web app built with ADK Streaming and <a href="https://fastapi.tiangolo.com/">FastAPI</a>, enabling real-time, bidirectional audio and text communication with WebSockets.</p>
<p><strong>Note:</strong> This guide assumes you have experience of JavaScript and Python <code>asyncio</code> programming.</p>
<h2 id="supported-models">Supported models for voice/video streaming<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#supported-models" title="Permanent link">¶</a></h2>
<p>In order to use voice/video streaming in ADK, you will need to use Gemini models that support the Live API. You can find the <strong>model ID(s)</strong> that supports the Gemini Live API in the documentation:</p>
<ul>
<li><a href="https://ai.google.dev/gemini-api/docs/models#live-api">Google AI Studio: Gemini Live API</a></li>
<li><a href="https://cloud.google.com/vertex-ai/generative-ai/docs/live-api">Vertex AI: Gemini Live API</a></li>
</ul>
<p>There is also a <a href="https://google.github.io/adk-docs/streaming/custom-streaming/">SSE</a> version of the sample is available.</p>
<h2 id="1.-setup-installation">1. Install ADK<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#1.-setup-installation" title="Permanent link">¶</a></h2>
<p>Create &amp; Activate Virtual Environment (Recommended):</p>
<div class="language-bash highlight"><pre id="__code_80"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_80 &gt; code"></button><code class="md-code__content"><span id="__span-0-1"><a id="__codelineno-0-1" name="__codelineno-0-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-0-1"></a><span class="c1"># Create</span>
</span><span id="__span-0-2"><a id="__codelineno-0-2" name="__codelineno-0-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-0-2"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>.venv
</span><span id="__span-0-3"><a id="__codelineno-0-3" name="__codelineno-0-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-0-3"></a><span class="c1"># Activate (each new terminal)</span>
</span><span id="__span-0-4"><a id="__codelineno-0-4" name="__codelineno-0-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-0-4"></a><span class="c1"># macOS/Linux: source .venv/bin/activate</span>
</span><span id="__span-0-5"><a id="__codelineno-0-5" name="__codelineno-0-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-0-5"></a><span class="c1"># Windows CMD: .venv\Scripts\activate.bat</span>
</span><span id="__span-0-6"><a id="__codelineno-0-6" name="__codelineno-0-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-0-6"></a><span class="c1"># Windows PowerShell: .venv\Scripts\Activate.ps1</span>
</span></code></pre></div>
<p>Install ADK:</p>
<div class="language-bash highlight"><pre id="__code_81"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_81 &gt; code"></button><code class="md-code__content"><span id="__span-1-1"><a id="__codelineno-1-1" name="__codelineno-1-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>--upgrade<span class="w"> </span>google-adk<span class="o">==</span><span class="m">1</span>.10.0
</span></code></pre></div>
<p>Set <code>SSL_CERT_FILE</code> variable with the following command.</p>
<div class="language-shell highlight"><pre id="__code_82"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_82 &gt; code"></button><code class="md-code__content"><span id="__span-2-1"><a id="__codelineno-2-1" name="__codelineno-2-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-2-1"></a><span class="nb">export</span><span class="w"> </span><span class="nv">SSL_CERT_FILE</span><span class="o">=</span><span class="k">$(</span>python<span class="w"> </span>-m<span class="w"> </span>certifi<span class="k">)</span>
</span></code></pre></div>
<p>Download the sample code:</p>
<div class="language-bash highlight"><pre id="__code_83"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_83 &gt; code"></button><code class="md-code__content"><span id="__span-3-1"><a id="__codelineno-3-1" name="__codelineno-3-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-3-1"></a>git<span class="w"> </span>clone<span class="w"> </span>--no-checkout<span class="w"> </span>https://github.com/google/adk-docs.git
</span><span id="__span-3-2"><a id="__codelineno-3-2" name="__codelineno-3-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-3-2"></a><span class="nb">cd</span><span class="w"> </span>adk-docs
</span><span id="__span-3-3"><a id="__codelineno-3-3" name="__codelineno-3-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-3-3"></a>git<span class="w"> </span>sparse-checkout<span class="w"> </span>init<span class="w"> </span>--cone
</span><span id="__span-3-4"><a id="__codelineno-3-4" name="__codelineno-3-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-3-4"></a>git<span class="w"> </span>sparse-checkout<span class="w"> </span><span class="nb">set</span><span class="w"> </span>examples/python/snippets/streaming/adk-streaming-ws
</span><span id="__span-3-5"><a id="__codelineno-3-5" name="__codelineno-3-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-3-5"></a>git<span class="w"> </span>checkout<span class="w"> </span>main
</span><span id="__span-3-6"><a id="__codelineno-3-6" name="__codelineno-3-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-3-6"></a><span class="nb">cd</span><span class="w"> </span>examples/python/snippets/streaming/adk-streaming-ws/app
</span></code></pre></div>
<p>This sample code has the following files and folders:</p>
<div class="language-console highlight"><pre id="__code_84"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_84 &gt; code"></button><code class="md-code__content"><span id="__span-4-1"><a id="__codelineno-4-1" name="__codelineno-4-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-1"></a><span class="go">adk-streaming-ws/</span>
</span><span id="__span-4-2"><a id="__codelineno-4-2" name="__codelineno-4-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-2"></a><span class="go">└── app/ # the web app folder</span>
</span><span id="__span-4-3"><a id="__codelineno-4-3" name="__codelineno-4-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-3"></a><span class="go">    ├── .env # Gemini API key / Google Cloud Project ID</span>
</span><span id="__span-4-4"><a id="__codelineno-4-4" name="__codelineno-4-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-4"></a><span class="go">    ├── main.py # FastAPI web app</span>
</span><span id="__span-4-5"><a id="__codelineno-4-5" name="__codelineno-4-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-5"></a><span class="go">    ├── static/ # Static content folder</span>
</span><span id="__span-4-6"><a id="__codelineno-4-6" name="__codelineno-4-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-6"></a><span class="go">    |   ├── js # JavaScript files folder (includes app.js)</span>
</span><span id="__span-4-7"><a id="__codelineno-4-7" name="__codelineno-4-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-7"></a><span class="go">    |   └── index.html # The web client page</span>
</span><span id="__span-4-8"><a id="__codelineno-4-8" name="__codelineno-4-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-8"></a><span class="go">    └── google_search_agent/ # Agent folder</span>
</span><span id="__span-4-9"><a id="__codelineno-4-9" name="__codelineno-4-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-9"></a><span class="go">        ├── __init__.py # Python package</span>
</span><span id="__span-4-10"><a id="__codelineno-4-10" name="__codelineno-4-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-4-10"></a><span class="go">        └── agent.py # Agent definition</span>
</span></code></pre></div>
<h2 id="2.-set-up-the-platform">2. Set up the platform<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#2.-set-up-the-platform" title="Permanent link">¶</a></h2>
<p>To run the sample app, choose a platform from either Google AI Studio or Google Cloud Vertex AI:</p>
<div class="tabbed-set tabbed-alternate" data-tabs="1:2" style="--md-indicator-x: 0px; --md-indicator-width: 210px;"><input checked="checked" id="gemini---google-ai-studio" name="__tabbed_1" type="radio"><input id="gemini---google-cloud-vertex-ai" name="__tabbed_1" type="radio"><div class="tabbed-labels tabbed-labels--linked"><label for="gemini---google-ai-studio"><a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#gemini---google-ai-studio" tabindex="-1">Gemini - Google AI Studio</a></label><label for="gemini---google-cloud-vertex-ai"><a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#gemini---google-cloud-vertex-ai" tabindex="-1">Gemini - Google Cloud Vertex AI</a></label></div>
<div class="tabbed-content">
<div class="tabbed-block">
<ol>
<li>Get an API key from <a href="https://aistudio.google.com/apikey">Google AI Studio</a>.</li>
<li>
<p>Open the <strong><code>.env</code></strong> file located inside (<code>app/</code>) and copy-paste the following code.</p>
<div class="language-text highlight"><span class="filename">.env</span><pre id="__code_85"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_85 &gt; code"></button><code class="md-code__content"><span id="__span-5-1"><a id="__codelineno-5-1" name="__codelineno-5-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-5-1"></a>GOOGLE_GENAI_USE_VERTEXAI=FALSE
</span><span id="__span-5-2"><a id="__codelineno-5-2" name="__codelineno-5-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-5-2"></a>GOOGLE_API_KEY=PASTE_YOUR_ACTUAL_API_KEY_HERE
</span></code></pre></div>
</li>
<li>
<p>Replace <code>PASTE_YOUR_ACTUAL_API_KEY_HERE</code> with your actual <code>API KEY</code>.</p>
</li>
</ol>
</div>
<div class="tabbed-block">
<ol>
<li>You need an existing
   <a href="https://cloud.google.com/?e=48754805&amp;hl=en">Google Cloud</a> account and a
   project.<ul>
<li>Set up a
  <a href="https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-multimodal#setup-gcp">Google Cloud project</a></li>
<li>Set up the
  <a href="https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-multimodal#setup-local">gcloud CLI</a></li>
<li>Authenticate to Google Cloud, from the terminal by running
  <code>gcloud auth login</code>.</li>
<li><a href="https://console.cloud.google.com/flows/enableapi?apiid=aiplatform.googleapis.com">Enable the Vertex AI API</a>.</li>
</ul>
</li>
<li>
<p>Open the <strong><code>.env</code></strong> file located inside (<code>app/</code>). Copy-paste
   the following code and update the project ID and location.</p>
<div class="language-text highlight"><span class="filename">.env</span><pre id="__code_86"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_86 &gt; code"></button><code class="md-code__content"><span id="__span-6-1"><a id="__codelineno-6-1" name="__codelineno-6-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-6-1"></a>GOOGLE_GENAI_USE_VERTEXAI=TRUE
</span><span id="__span-6-2"><a id="__codelineno-6-2" name="__codelineno-6-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-6-2"></a>GOOGLE_CLOUD_PROJECT=PASTE_YOUR_ACTUAL_PROJECT_ID
</span><span id="__span-6-3"><a id="__codelineno-6-3" name="__codelineno-6-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-6-3"></a>GOOGLE_CLOUD_LOCATION=us-central1
</span></code></pre></div>
</li>
</ol>
</div>
</div>
<div class="tabbed-control tabbed-control--prev" hidden=""><button class="tabbed-button" tabindex="-1" aria-hidden="true"></button></div><div class="tabbed-control tabbed-control--next" hidden=""><button class="tabbed-button" tabindex="-1" aria-hidden="true"></button></div></div>
<h3 id="agentpy">agent.py<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#agentpy" title="Permanent link">¶</a></h3>
<p>The agent definition code <code>agent.py</code> in the <code>google_search_agent</code> folder is where the agent's logic is written:</p>
<div class="language-py highlight"><pre id="__code_87"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_87 &gt; code"></button><code class="md-code__content"><span id="__span-7-1"><a id="__codelineno-7-1" name="__codelineno-7-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-1"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.adk.agents</span><span class="w"> </span><span class="kn">import</span> <span class="n">Agent</span>
</span><span id="__span-7-2"><a id="__codelineno-7-2" name="__codelineno-7-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-2"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.adk.tools</span><span class="w"> </span><span class="kn">import</span> <span class="n">google_search</span>  <span class="c1"># Import the tool</span>
</span><span id="__span-7-3"><a id="__codelineno-7-3" name="__codelineno-7-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-3"></a>
</span><span id="__span-7-4"><a id="__codelineno-7-4" name="__codelineno-7-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-4"></a><span class="n">root_agent</span> <span class="o">=</span> <span class="n">Agent</span><span class="p">(</span>
</span><span id="__span-7-5"><a id="__codelineno-7-5" name="__codelineno-7-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-5"></a>   <span class="n">name</span><span class="o">=</span><span class="s2">"google_search_agent"</span><span class="p">,</span>
</span><span id="__span-7-6"><a id="__codelineno-7-6" name="__codelineno-7-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-6"></a>   <span class="n">model</span><span class="o">=</span><span class="s2">"gemini-2.0-flash-exp"</span><span class="p">,</span> <span class="c1"># if this model does not work, try below</span>
</span><span id="__span-7-7"><a id="__codelineno-7-7" name="__codelineno-7-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-7"></a>   <span class="c1">#model="gemini-2.0-flash-live-001",</span>
</span><span id="__span-7-8"><a id="__codelineno-7-8" name="__codelineno-7-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-8"></a>   <span class="n">description</span><span class="o">=</span><span class="s2">"Agent to answer questions using Google Search."</span><span class="p">,</span>
</span><span id="__span-7-9"><a id="__codelineno-7-9" name="__codelineno-7-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-9"></a>   <span class="n">instruction</span><span class="o">=</span><span class="s2">"Answer the question using the Google Search tool."</span><span class="p">,</span>
</span><span id="__span-7-10"><a id="__codelineno-7-10" name="__codelineno-7-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-10"></a>   <span class="n">tools</span><span class="o">=</span><span class="p">[</span><span class="n">google_search</span><span class="p">],</span>
</span><span id="__span-7-11"><a id="__codelineno-7-11" name="__codelineno-7-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-7-11"></a><span class="p">)</span>
</span></code></pre></div>
<p><strong>Note:</strong>  To enable both text and audio/video input, the model must support the generateContent (for text) and bidiGenerateContent methods. Verify these capabilities by referring to the <a href="https://ai.google.dev/api/models#method:-models.list">List Models Documentation</a>. This quickstart utilizes the gemini-2.0-flash-exp model for demonstration purposes.</p>
<p>Notice how easily you integrated <a href="https://ai.google.dev/gemini-api/docs/grounding?lang=python#configure-search">grounding with Google Search</a> capabilities.  The <code>Agent</code> class and the <code>google_search</code> tool handle the complex interactions with the LLM and grounding with the search API, allowing you to focus on the agent's <em>purpose</em> and <em>behavior</em>.</p>
<p><img alt="intro_components.png" src="./webpage_files/quickstart-streaming-tool.png"></p>
<h2 id="3.-interact-with-your-streaming-app">3. Interact with Your Streaming app<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#3.-interact-with-your-streaming-app" title="Permanent link">¶</a></h2>
<p>1. <strong>Navigate to the Correct Directory:</strong></p>
<p>To run your agent effectively, make sure you are in the <strong>app folder (<code>adk-streaming-ws/app</code>)</strong></p>
<p>2. <strong>Start the Fast API</strong>: Run the following command to start CLI interface with</p>
<div class="language-console highlight"><pre id="__code_88"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_88 &gt; code"></button><code class="md-code__content"><span id="__span-8-1"><a id="__codelineno-8-1" name="__codelineno-8-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-8-1"></a><span class="go">uvicorn main:app --reload</span>
</span></code></pre></div>
<p>3. <strong>Access the app with the text mode:</strong> Once the app starts, the terminal will display a local URL (e.g., <a href="http://localhost:8000/">http://localhost:8000</a>). Click this link to open the UI in your browser.</p>
<p>Now you should see the UI like this:</p>
<p><img alt="ADK Streaming app" src="./webpage_files/adk-streaming-text.png"></p>
<p>Try asking a question <code>What time is it now?</code>. The agent will use Google Search to respond to your queries. You would notice that the UI shows the agent's response as streaming text. You can also send messages to the agent at any time, even while the agent is still responding. This demonstrates the bidirectional communication capability of ADK Streaming.</p>
<p>4. <strong>Access the app with the audio mode:</strong> Now click the <code>Start Audio</code> button. The app reconnects with the server in an audio mode, and the UI will show the following dialog for the first time:</p>
<p><img alt="ADK Streaming app" src="./webpage_files/adk-streaming-audio-dialog.png"></p>
<p>Click <code>Allow while visiting the site</code>, then you will see the microphone icon will be shown at the top of the browser:</p>
<p><img alt="ADK Streaming app" src="./webpage_files/adk-streaming-mic.png"></p>
<p>Now you can talk to the agent with voice. Ask questions like <code>What time is it now?</code> with voice and you will hear the agent responding in voice too. As Streaming for ADK supports <a href="https://ai.google.dev/gemini-api/docs/live#supported-languages">multiple languages</a>, it can also respond to question in the supported languages.</p>
<p>5. <strong>Check console logs</strong></p>
<p>If you are using the Chrome browser, use the right click and select <code>Inspect</code> to open the DevTools. On the <code>Console</code>, you can see the incoming and outgoing audio data such as <code>[CLIENT TO AGENT]</code> and <code>[AGENT TO CLIENT]</code>, representing the audio data streaming in and out between the browser and the server.</p>
<p>At the same time, in the app server console, you should see something like this:</p>
<div class="language-text highlight"><pre id="__code_89"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_89 &gt; code"></button><code class="md-code__content" tabindex="0"><span id="__span-9-1"><a id="__codelineno-9-1" name="__codelineno-9-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-1"></a>INFO:     ('127.0.0.1', 50068) - "WebSocket /ws/70070018?is_audio=true" [accepted]
</span><span id="__span-9-2"><a id="__codelineno-9-2" name="__codelineno-9-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-2"></a>Client #70070018 connected, audio mode: true
</span><span id="__span-9-3"><a id="__codelineno-9-3" name="__codelineno-9-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-3"></a>INFO:     connection open
</span><span id="__span-9-4"><a id="__codelineno-9-4" name="__codelineno-9-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-4"></a>INFO:     127.0.0.1:50061 - "GET /static/js/pcm-player-processor.js HTTP/1.1" 200 OK
</span><span id="__span-9-5"><a id="__codelineno-9-5" name="__codelineno-9-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-5"></a>INFO:     127.0.0.1:50060 - "GET /static/js/pcm-recorder-processor.js HTTP/1.1" 200 OK
</span><span id="__span-9-6"><a id="__codelineno-9-6" name="__codelineno-9-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-6"></a>[AGENT TO CLIENT]: audio/pcm: 9600 bytes.
</span><span id="__span-9-7"><a id="__codelineno-9-7" name="__codelineno-9-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-7"></a>INFO:     127.0.0.1:50082 - "GET /favicon.ico HTTP/1.1" 404 Not Found
</span><span id="__span-9-8"><a id="__codelineno-9-8" name="__codelineno-9-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-8"></a>[AGENT TO CLIENT]: audio/pcm: 11520 bytes.
</span><span id="__span-9-9"><a id="__codelineno-9-9" name="__codelineno-9-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-9-9"></a>[AGENT TO CLIENT]: audio/pcm: 11520 bytes.
</span></code></pre></div>
<p>These console logs are important in case you develop your own streaming application. In many cases, the communication failure between the browser and server becomes a major cause for the streaming application bugs.</p>
<p>6. <strong>Troubleshooting tips</strong></p>
<ul>
<li><strong>When <code>ws://</code> doesn't work:</strong> If you see any errors on the Chrome DevTools with regard to <code>ws://</code> connection, try replacing <code>ws://</code> with <code>wss://</code> on <code>app/static/js/app.js</code> at line 28. This may happen when you are running the sample on a cloud environment and using a proxy connection to connect from your browser.</li>
<li><strong>When <code>gemini-2.0-flash-exp</code> model doesn't work:</strong> If you see any errors on the app server console with regard to <code>gemini-2.0-flash-exp</code> model availability, try replacing it with <code>gemini-2.0-flash-live-001</code> on <code>app/google_search_agent/agent.py</code> at line 6.</li>
</ul>
<h2 id="4.-server-side-code-overview">4. Server code overview<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#4.-server-side-code-overview" title="Permanent link">¶</a></h2>
<p>This server app enables real-time, streaming interaction with ADK agent via WebSockets. Clients send text/audio to the ADK agent and receive streamed text/audio responses.</p>
<p>Core functions:
1.  Initialize/manage ADK agent sessions.
2.  Handle client WebSocket connections.
3.  Relay client messages to the ADK agent.
4.  Stream ADK agent responses (text/audio) to clients.</p>
<h3 id="adk-streaming-setup">ADK Streaming Setup<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#adk-streaming-setup" title="Permanent link">¶</a></h3>
<div class="language-py highlight"><pre id="__code_90"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_90 &gt; code"></button><code class="md-code__content" tabindex="0"><span id="__span-10-1"><a id="__codelineno-10-1" name="__codelineno-10-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-1"></a><span class="kn">import</span><span class="w"> </span><span class="nn">os</span>
</span><span id="__span-10-2"><a id="__codelineno-10-2" name="__codelineno-10-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-2"></a><span class="kn">import</span><span class="w"> </span><span class="nn">json</span>
</span><span id="__span-10-3"><a id="__codelineno-10-3" name="__codelineno-10-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-3"></a><span class="kn">import</span><span class="w"> </span><span class="nn">asyncio</span>
</span><span id="__span-10-4"><a id="__codelineno-10-4" name="__codelineno-10-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-4"></a><span class="kn">import</span><span class="w"> </span><span class="nn">base64</span>
</span><span id="__span-10-5"><a id="__codelineno-10-5" name="__codelineno-10-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-5"></a>
</span><span id="__span-10-6"><a id="__codelineno-10-6" name="__codelineno-10-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-6"></a><span class="kn">from</span><span class="w"> </span><span class="nn">pathlib</span><span class="w"> </span><span class="kn">import</span> <span class="n">Path</span>
</span><span id="__span-10-7"><a id="__codelineno-10-7" name="__codelineno-10-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-7"></a><span class="kn">from</span><span class="w"> </span><span class="nn">dotenv</span><span class="w"> </span><span class="kn">import</span> <span class="n">load_dotenv</span>
</span><span id="__span-10-8"><a id="__codelineno-10-8" name="__codelineno-10-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-8"></a>
</span><span id="__span-10-9"><a id="__codelineno-10-9" name="__codelineno-10-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-9"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.genai.types</span><span class="w"> </span><span class="kn">import</span> <span class="p">(</span>
</span><span id="__span-10-10"><a id="__codelineno-10-10" name="__codelineno-10-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-10"></a>    <span class="n">Part</span><span class="p">,</span>
</span><span id="__span-10-11"><a id="__codelineno-10-11" name="__codelineno-10-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-11"></a>    <span class="n">Content</span><span class="p">,</span>
</span><span id="__span-10-12"><a id="__codelineno-10-12" name="__codelineno-10-12" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-12"></a>    <span class="n">Blob</span><span class="p">,</span>
</span><span id="__span-10-13"><a id="__codelineno-10-13" name="__codelineno-10-13" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-13"></a><span class="p">)</span>
</span><span id="__span-10-14"><a id="__codelineno-10-14" name="__codelineno-10-14" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-14"></a>
</span><span id="__span-10-15"><a id="__codelineno-10-15" name="__codelineno-10-15" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-15"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.adk.runners</span><span class="w"> </span><span class="kn">import</span> <span class="n">Runner</span>
</span><span id="__span-10-16"><a id="__codelineno-10-16" name="__codelineno-10-16" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-16"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.adk.agents</span><span class="w"> </span><span class="kn">import</span> <span class="n">LiveRequestQueue</span>
</span><span id="__span-10-17"><a id="__codelineno-10-17" name="__codelineno-10-17" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-17"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.adk.agents.run_config</span><span class="w"> </span><span class="kn">import</span> <span class="n">RunConfig</span>
</span><span id="__span-10-18"><a id="__codelineno-10-18" name="__codelineno-10-18" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-18"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.adk.sessions.in_memory_session_service</span><span class="w"> </span><span class="kn">import</span> <span class="n">InMemorySessionService</span>
</span><span id="__span-10-19"><a id="__codelineno-10-19" name="__codelineno-10-19" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-19"></a>
</span><span id="__span-10-20"><a id="__codelineno-10-20" name="__codelineno-10-20" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-20"></a><span class="kn">from</span><span class="w"> </span><span class="nn">fastapi</span><span class="w"> </span><span class="kn">import</span> <span class="n">FastAPI</span><span class="p">,</span> <span class="n">WebSocket</span>
</span><span id="__span-10-21"><a id="__codelineno-10-21" name="__codelineno-10-21" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-21"></a><span class="kn">from</span><span class="w"> </span><span class="nn">fastapi.staticfiles</span><span class="w"> </span><span class="kn">import</span> <span class="n">StaticFiles</span>
</span><span id="__span-10-22"><a id="__codelineno-10-22" name="__codelineno-10-22" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-22"></a><span class="kn">from</span><span class="w"> </span><span class="nn">fastapi.responses</span><span class="w"> </span><span class="kn">import</span> <span class="n">FileResponse</span>
</span><span id="__span-10-23"><a id="__codelineno-10-23" name="__codelineno-10-23" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-23"></a>
</span><span id="__span-10-24"><a id="__codelineno-10-24" name="__codelineno-10-24" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-10-24"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google_search_agent.agent</span><span class="w"> </span><span class="kn">import</span> <span class="n">root_agent</span>
</span></code></pre></div>
<ul>
<li><strong>Imports:</strong> Includes standard Python libraries, <code>dotenv</code> for environment variables, Google ADK, and FastAPI.</li>
<li><strong><code>load_dotenv()</code>:</strong> Loads environment variables.</li>
<li><strong><code>APP_NAME</code></strong>: Application identifier for ADK.</li>
<li><strong><code>session_service = InMemorySessionService()</code></strong>: Initializes an in-memory ADK session service, suitable for single-instance or development use. Production might use a persistent store.</li>
</ul>
<h3 id="start_agent_sessionsession_id-is_audiofalse"><code>start_agent_session(session_id, is_audio=False)</code><a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#start_agent_sessionsession_id-is_audiofalse" title="Permanent link">¶</a></h3>
<div class="language-py highlight"><pre id="__code_91"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_91 &gt; code"></button><code class="md-code__content"><span id="__span-11-1"><a id="__codelineno-11-1" name="__codelineno-11-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-1"></a><span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">start_agent_session</span><span class="p">(</span><span class="n">user_id</span><span class="p">,</span> <span class="n">is_audio</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
</span><span id="__span-11-2"><a id="__codelineno-11-2" name="__codelineno-11-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-2"></a><span class="w">    </span><span class="sd">"""Starts an agent session"""</span>
</span><span id="__span-11-3"><a id="__codelineno-11-3" name="__codelineno-11-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-3"></a>
</span><span id="__span-11-4"><a id="__codelineno-11-4" name="__codelineno-11-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-4"></a>    <span class="c1"># Create a Runner</span>
</span><span id="__span-11-5"><a id="__codelineno-11-5" name="__codelineno-11-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-5"></a>    <span class="n">runner</span> <span class="o">=</span> <span class="n">InMemoryRunner</span><span class="p">(</span>
</span><span id="__span-11-6"><a id="__codelineno-11-6" name="__codelineno-11-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-6"></a>        <span class="n">app_name</span><span class="o">=</span><span class="n">APP_NAME</span><span class="p">,</span>
</span><span id="__span-11-7"><a id="__codelineno-11-7" name="__codelineno-11-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-7"></a>        <span class="n">agent</span><span class="o">=</span><span class="n">root_agent</span><span class="p">,</span>
</span><span id="__span-11-8"><a id="__codelineno-11-8" name="__codelineno-11-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-8"></a>    <span class="p">)</span>
</span><span id="__span-11-9"><a id="__codelineno-11-9" name="__codelineno-11-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-9"></a>
</span><span id="__span-11-10"><a id="__codelineno-11-10" name="__codelineno-11-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-10"></a>    <span class="c1"># Create a Session</span>
</span><span id="__span-11-11"><a id="__codelineno-11-11" name="__codelineno-11-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-11"></a>    <span class="n">session</span> <span class="o">=</span> <span class="k">await</span> <span class="n">runner</span><span class="o">.</span><span class="n">session_service</span><span class="o">.</span><span class="n">create_session</span><span class="p">(</span>
</span><span id="__span-11-12"><a id="__codelineno-11-12" name="__codelineno-11-12" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-12"></a>        <span class="n">app_name</span><span class="o">=</span><span class="n">APP_NAME</span><span class="p">,</span>
</span><span id="__span-11-13"><a id="__codelineno-11-13" name="__codelineno-11-13" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-13"></a>        <span class="n">user_id</span><span class="o">=</span><span class="n">user_id</span><span class="p">,</span>  <span class="c1"># Replace with actual user ID</span>
</span><span id="__span-11-14"><a id="__codelineno-11-14" name="__codelineno-11-14" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-14"></a>    <span class="p">)</span>
</span><span id="__span-11-15"><a id="__codelineno-11-15" name="__codelineno-11-15" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-15"></a>
</span><span id="__span-11-16"><a id="__codelineno-11-16" name="__codelineno-11-16" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-16"></a>    <span class="c1"># Set response modality</span>
</span><span id="__span-11-17"><a id="__codelineno-11-17" name="__codelineno-11-17" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-17"></a>    <span class="n">modality</span> <span class="o">=</span> <span class="s2">"AUDIO"</span> <span class="k">if</span> <span class="n">is_audio</span> <span class="k">else</span> <span class="s2">"TEXT"</span>
</span><span id="__span-11-18"><a id="__codelineno-11-18" name="__codelineno-11-18" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-18"></a>    <span class="n">run_config</span> <span class="o">=</span> <span class="n">RunConfig</span><span class="p">(</span><span class="n">response_modalities</span><span class="o">=</span><span class="p">[</span><span class="n">modality</span><span class="p">])</span>
</span><span id="__span-11-19"><a id="__codelineno-11-19" name="__codelineno-11-19" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-19"></a>
</span><span id="__span-11-20"><a id="__codelineno-11-20" name="__codelineno-11-20" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-20"></a>    <span class="c1"># Optional: Enable session resumption for improved reliability</span>
</span><span id="__span-11-21"><a id="__codelineno-11-21" name="__codelineno-11-21" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-21"></a>    <span class="c1"># run_config = RunConfig(</span>
</span><span id="__span-11-22"><a id="__codelineno-11-22" name="__codelineno-11-22" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-22"></a>    <span class="c1">#     response_modalities=[modality],</span>
</span><span id="__span-11-23"><a id="__codelineno-11-23" name="__codelineno-11-23" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-23"></a>    <span class="c1">#     session_resumption=types.SessionResumptionConfig()</span>
</span><span id="__span-11-24"><a id="__codelineno-11-24" name="__codelineno-11-24" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-24"></a>    <span class="c1"># )</span>
</span><span id="__span-11-25"><a id="__codelineno-11-25" name="__codelineno-11-25" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-25"></a>
</span><span id="__span-11-26"><a id="__codelineno-11-26" name="__codelineno-11-26" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-26"></a>    <span class="c1"># Create a LiveRequestQueue for this session</span>
</span><span id="__span-11-27"><a id="__codelineno-11-27" name="__codelineno-11-27" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-27"></a>    <span class="n">live_request_queue</span> <span class="o">=</span> <span class="n">LiveRequestQueue</span><span class="p">()</span>
</span><span id="__span-11-28"><a id="__codelineno-11-28" name="__codelineno-11-28" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-28"></a>
</span><span id="__span-11-29"><a id="__codelineno-11-29" name="__codelineno-11-29" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-29"></a>    <span class="c1"># Start agent session</span>
</span><span id="__span-11-30"><a id="__codelineno-11-30" name="__codelineno-11-30" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-30"></a>    <span class="n">live_events</span> <span class="o">=</span> <span class="n">runner</span><span class="o">.</span><span class="n">run_live</span><span class="p">(</span>
</span><span id="__span-11-31"><a id="__codelineno-11-31" name="__codelineno-11-31" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-31"></a>        <span class="n">session</span><span class="o">=</span><span class="n">session</span><span class="p">,</span>
</span><span id="__span-11-32"><a id="__codelineno-11-32" name="__codelineno-11-32" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-32"></a>        <span class="n">live_request_queue</span><span class="o">=</span><span class="n">live_request_queue</span><span class="p">,</span>
</span><span id="__span-11-33"><a id="__codelineno-11-33" name="__codelineno-11-33" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-33"></a>        <span class="n">run_config</span><span class="o">=</span><span class="n">run_config</span><span class="p">,</span>
</span><span id="__span-11-34"><a id="__codelineno-11-34" name="__codelineno-11-34" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-34"></a>    <span class="p">)</span>
</span><span id="__span-11-35"><a id="__codelineno-11-35" name="__codelineno-11-35" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-11-35"></a>    <span class="k">return</span> <span class="n">live_events</span><span class="p">,</span> <span class="n">live_request_queue</span>
</span></code></pre></div>
<p>This function initializes an ADK agent live session.</p>
<div class="md-typeset__scrollwrap"><div class="md-typeset__table"><table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>user_id</code></td>
<td><code>str</code></td>
<td>Unique client identifier.</td>
</tr>
<tr>
<td><code>is_audio</code></td>
<td><code>bool</code></td>
<td><code>True</code> for audio responses, <code>False</code> for text (default).</td>
</tr>
</tbody>
</table></div></div>
<p><strong>Key Steps:</strong>
1.  <strong>Create Runner:</strong> Instantiates the ADK runner for the <code>root_agent</code>.
2.  <strong>Create Session:</strong> Establishes an ADK session.
3.  <strong>Set Response Modality:</strong> Configures agent response as "AUDIO" or "TEXT".
4.  <strong>Create LiveRequestQueue:</strong> Creates a queue for client inputs to the agent.
5.  <strong>Start Agent Session:</strong> <code>runner.run_live(...)</code> starts the agent, returning:
    *   <code>live_events</code>: Asynchronous iterable for agent events (text, audio, completion).
    *   <code>live_request_queue</code>: Queue to send data to the agent.</p>
<p><strong>Returns:</strong> <code>(live_events, live_request_queue)</code>.</p>
<h3 id="session-resumption-configuration">Session Resumption Configuration<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#session-resumption-configuration" title="Permanent link">¶</a></h3>
<p>ADK supports live session resumption to improve reliability during streaming conversations. This feature enables automatic reconnection when live connections are interrupted due to network issues.</p>
<h4 id="enabling-session-resumption">Enabling Session Resumption<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#enabling-session-resumption" title="Permanent link">¶</a></h4>
<p>To enable session resumption, you need to:</p>
<ol>
<li>
<p><strong>Import the required types</strong>:
</p><div class="language-py highlight"><pre id="__code_92"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_92 &gt; code"></button><code class="md-code__content"><span id="__span-12-1"><a id="__codelineno-12-1" name="__codelineno-12-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-12-1"></a><span class="kn">from</span><span class="w"> </span><span class="nn">google.genai</span><span class="w"> </span><span class="kn">import</span> <span class="n">types</span>
</span></code></pre></div><p></p>
</li>
<li>
<p><strong>Configure session resumption in RunConfig</strong>:
</p><div class="language-py highlight"><pre id="__code_93"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_93 &gt; code"></button><code class="md-code__content"><span id="__span-13-1"><a id="__codelineno-13-1" name="__codelineno-13-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-13-1"></a><span class="n">run_config</span> <span class="o">=</span> <span class="n">RunConfig</span><span class="p">(</span>
</span><span id="__span-13-2"><a id="__codelineno-13-2" name="__codelineno-13-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-13-2"></a>    <span class="n">response_modalities</span><span class="o">=</span><span class="p">[</span><span class="n">modality</span><span class="p">],</span>
</span><span id="__span-13-3"><a id="__codelineno-13-3" name="__codelineno-13-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-13-3"></a>    <span class="n">session_resumption</span><span class="o">=</span><span class="n">types</span><span class="o">.</span><span class="n">SessionResumptionConfig</span><span class="p">()</span>
</span><span id="__span-13-4"><a id="__codelineno-13-4" name="__codelineno-13-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-13-4"></a><span class="p">)</span>
</span></code></pre></div><p></p>
</li>
</ol>
<h4 id="session-resumption-features">Session Resumption Features<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#session-resumption-features" title="Permanent link">¶</a></h4>
<ul>
<li><strong>Automatic Handle Caching</strong> - The system automatically caches session resumption handles during live conversations</li>
<li><strong>Transparent Reconnection</strong> - When connections are interrupted, the system attempts to resume using cached handles</li>
<li><strong>Context Preservation</strong> - Conversation context and state are maintained across reconnections</li>
<li><strong>Network Resilience</strong> - Provides better user experience during unstable network conditions</li>
</ul>
<h4 id="implementation-notes">Implementation Notes<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#implementation-notes" title="Permanent link">¶</a></h4>
<ul>
<li>Session resumption handles are managed internally by the ADK framework</li>
<li>No additional client-side code changes are required</li>
<li>The feature is particularly beneficial for long-running streaming conversations</li>
<li>Connection interruptions become less disruptive to the user experience</li>
</ul>
<h4 id="troubleshooting">Troubleshooting<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#troubleshooting" title="Permanent link">¶</a></h4>
<p>If you encounter errors with session resumption:</p>
<ol>
<li><strong>Check model compatibility</strong> - Ensure you're using a model that supports session resumption</li>
<li><strong>API limitations</strong> - Some session resumption features may not be available in all API versions</li>
<li><strong>Remove session resumption</strong> - If issues persist, you can disable session resumption by removing the <code>session_resumption</code> parameter from <code>RunConfig</code></li>
</ol>
<h3 id="agent_to_client_messagingwebsocket-live_events"><code>agent_to_client_messaging(websocket, live_events)</code><a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#agent_to_client_messagingwebsocket-live_events" title="Permanent link">¶</a></h3>
<div class="language-py highlight"><pre id="__code_94"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_94 &gt; code"></button><code class="md-code__content" tabindex="0"><span id="__span-14-1"><a id="__codelineno-14-1" name="__codelineno-14-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-1"></a><span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">agent_to_client_messaging</span><span class="p">(</span><span class="n">websocket</span><span class="p">,</span> <span class="n">live_events</span><span class="p">):</span>
</span><span id="__span-14-2"><a id="__codelineno-14-2" name="__codelineno-14-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-2"></a><span class="w">    </span><span class="sd">"""Agent to client communication"""</span>
</span><span id="__span-14-3"><a id="__codelineno-14-3" name="__codelineno-14-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-3"></a>    <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
</span><span id="__span-14-4"><a id="__codelineno-14-4" name="__codelineno-14-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-4"></a>        <span class="k">async</span> <span class="k">for</span> <span class="n">event</span> <span class="ow">in</span> <span class="n">live_events</span><span class="p">:</span>
</span><span id="__span-14-5"><a id="__codelineno-14-5" name="__codelineno-14-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-5"></a>
</span><span id="__span-14-6"><a id="__codelineno-14-6" name="__codelineno-14-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-6"></a>            <span class="c1"># If the turn complete or interrupted, send it</span>
</span><span id="__span-14-7"><a id="__codelineno-14-7" name="__codelineno-14-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-7"></a>            <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">turn_complete</span> <span class="ow">or</span> <span class="n">event</span><span class="o">.</span><span class="n">interrupted</span><span class="p">:</span>
</span><span id="__span-14-8"><a id="__codelineno-14-8" name="__codelineno-14-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-8"></a>                <span class="n">message</span> <span class="o">=</span> <span class="p">{</span>
</span><span id="__span-14-9"><a id="__codelineno-14-9" name="__codelineno-14-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-9"></a>                    <span class="s2">"turn_complete"</span><span class="p">:</span> <span class="n">event</span><span class="o">.</span><span class="n">turn_complete</span><span class="p">,</span>
</span><span id="__span-14-10"><a id="__codelineno-14-10" name="__codelineno-14-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-10"></a>                    <span class="s2">"interrupted"</span><span class="p">:</span> <span class="n">event</span><span class="o">.</span><span class="n">interrupted</span><span class="p">,</span>
</span><span id="__span-14-11"><a id="__codelineno-14-11" name="__codelineno-14-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-11"></a>                <span class="p">}</span>
</span><span id="__span-14-12"><a id="__codelineno-14-12" name="__codelineno-14-12" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-12"></a>                <span class="k">await</span> <span class="n">websocket</span><span class="o">.</span><span class="n">send_text</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">message</span><span class="p">))</span>
</span><span id="__span-14-13"><a id="__codelineno-14-13" name="__codelineno-14-13" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-13"></a>                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"[AGENT TO CLIENT]: </span><span class="si">{</span><span class="n">message</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</span><span id="__span-14-14"><a id="__codelineno-14-14" name="__codelineno-14-14" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-14"></a>                <span class="k">continue</span>
</span><span id="__span-14-15"><a id="__codelineno-14-15" name="__codelineno-14-15" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-15"></a>
</span><span id="__span-14-16"><a id="__codelineno-14-16" name="__codelineno-14-16" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-16"></a>            <span class="c1"># Read the Content and its first Part</span>
</span><span id="__span-14-17"><a id="__codelineno-14-17" name="__codelineno-14-17" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-17"></a>            <span class="n">part</span><span class="p">:</span> <span class="n">Part</span> <span class="o">=</span> <span class="p">(</span>
</span><span id="__span-14-18"><a id="__codelineno-14-18" name="__codelineno-14-18" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-18"></a>                <span class="n">event</span><span class="o">.</span><span class="n">content</span> <span class="ow">and</span> <span class="n">event</span><span class="o">.</span><span class="n">content</span><span class="o">.</span><span class="n">parts</span> <span class="ow">and</span> <span class="n">event</span><span class="o">.</span><span class="n">content</span><span class="o">.</span><span class="n">parts</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span id="__span-14-19"><a id="__codelineno-14-19" name="__codelineno-14-19" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-19"></a>            <span class="p">)</span>
</span><span id="__span-14-20"><a id="__codelineno-14-20" name="__codelineno-14-20" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-20"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">part</span><span class="p">:</span>
</span><span id="__span-14-21"><a id="__codelineno-14-21" name="__codelineno-14-21" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-21"></a>                <span class="k">continue</span>
</span><span id="__span-14-22"><a id="__codelineno-14-22" name="__codelineno-14-22" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-22"></a>
</span><span id="__span-14-23"><a id="__codelineno-14-23" name="__codelineno-14-23" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-23"></a>            <span class="c1"># If it's audio, send Base64 encoded audio data</span>
</span><span id="__span-14-24"><a id="__codelineno-14-24" name="__codelineno-14-24" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-24"></a>            <span class="n">is_audio</span> <span class="o">=</span> <span class="n">part</span><span class="o">.</span><span class="n">inline_data</span> <span class="ow">and</span> <span class="n">part</span><span class="o">.</span><span class="n">inline_data</span><span class="o">.</span><span class="n">mime_type</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">"audio/pcm"</span><span class="p">)</span>
</span><span id="__span-14-25"><a id="__codelineno-14-25" name="__codelineno-14-25" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-25"></a>            <span class="k">if</span> <span class="n">is_audio</span><span class="p">:</span>
</span><span id="__span-14-26"><a id="__codelineno-14-26" name="__codelineno-14-26" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-26"></a>                <span class="n">audio_data</span> <span class="o">=</span> <span class="n">part</span><span class="o">.</span><span class="n">inline_data</span> <span class="ow">and</span> <span class="n">part</span><span class="o">.</span><span class="n">inline_data</span><span class="o">.</span><span class="n">data</span>
</span><span id="__span-14-27"><a id="__codelineno-14-27" name="__codelineno-14-27" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-27"></a>                <span class="k">if</span> <span class="n">audio_data</span><span class="p">:</span>
</span><span id="__span-14-28"><a id="__codelineno-14-28" name="__codelineno-14-28" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-28"></a>                    <span class="n">message</span> <span class="o">=</span> <span class="p">{</span>
</span><span id="__span-14-29"><a id="__codelineno-14-29" name="__codelineno-14-29" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-29"></a>                        <span class="s2">"mime_type"</span><span class="p">:</span> <span class="s2">"audio/pcm"</span><span class="p">,</span>
</span><span id="__span-14-30"><a id="__codelineno-14-30" name="__codelineno-14-30" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-30"></a>                        <span class="s2">"data"</span><span class="p">:</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">audio_data</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s2">"ascii"</span><span class="p">)</span>
</span><span id="__span-14-31"><a id="__codelineno-14-31" name="__codelineno-14-31" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-31"></a>                    <span class="p">}</span>
</span><span id="__span-14-32"><a id="__codelineno-14-32" name="__codelineno-14-32" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-32"></a>                    <span class="k">await</span> <span class="n">websocket</span><span class="o">.</span><span class="n">send_text</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">message</span><span class="p">))</span>
</span><span id="__span-14-33"><a id="__codelineno-14-33" name="__codelineno-14-33" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-33"></a>                    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"[AGENT TO CLIENT]: audio/pcm: </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">audio_data</span><span class="p">)</span><span class="si">}</span><span class="s2"> bytes."</span><span class="p">)</span>
</span><span id="__span-14-34"><a id="__codelineno-14-34" name="__codelineno-14-34" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-34"></a>                    <span class="k">continue</span>
</span><span id="__span-14-35"><a id="__codelineno-14-35" name="__codelineno-14-35" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-35"></a>
</span><span id="__span-14-36"><a id="__codelineno-14-36" name="__codelineno-14-36" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-36"></a>            <span class="c1"># If it's text and a parial text, send it</span>
</span><span id="__span-14-37"><a id="__codelineno-14-37" name="__codelineno-14-37" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-37"></a>            <span class="k">if</span> <span class="n">part</span><span class="o">.</span><span class="n">text</span> <span class="ow">and</span> <span class="n">event</span><span class="o">.</span><span class="n">partial</span><span class="p">:</span>
</span><span id="__span-14-38"><a id="__codelineno-14-38" name="__codelineno-14-38" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-38"></a>                <span class="n">message</span> <span class="o">=</span> <span class="p">{</span>
</span><span id="__span-14-39"><a id="__codelineno-14-39" name="__codelineno-14-39" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-39"></a>                    <span class="s2">"mime_type"</span><span class="p">:</span> <span class="s2">"text/plain"</span><span class="p">,</span>
</span><span id="__span-14-40"><a id="__codelineno-14-40" name="__codelineno-14-40" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-40"></a>                    <span class="s2">"data"</span><span class="p">:</span> <span class="n">part</span><span class="o">.</span><span class="n">text</span>
</span><span id="__span-14-41"><a id="__codelineno-14-41" name="__codelineno-14-41" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-41"></a>                <span class="p">}</span>
</span><span id="__span-14-42"><a id="__codelineno-14-42" name="__codelineno-14-42" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-42"></a>                <span class="k">await</span> <span class="n">websocket</span><span class="o">.</span><span class="n">send_text</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">message</span><span class="p">))</span>
</span><span id="__span-14-43"><a id="__codelineno-14-43" name="__codelineno-14-43" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-14-43"></a>                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"[AGENT TO CLIENT]: text/plain: </span><span class="si">{</span><span class="n">message</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</span></code></pre></div>
<p>This asynchronous function streams ADK agent events to the WebSocket client.</p>
<p><strong>Logic:</strong>
1.  Iterates through <code>live_events</code> from the agent.
2.  <strong>Turn Completion/Interruption:</strong> Sends status flags to the client.
3.  <strong>Content Processing:</strong>
    *   Extracts the first <code>Part</code> from event content.
    *   <strong>Audio Data:</strong> If audio (PCM), Base64 encodes and sends it as JSON: <code>{ "mime_type": "audio/pcm", "data": "&lt;base64_audio&gt;" }</code>.
    *   <strong>Text Data:</strong> If partial text, sends it as JSON: <code>{ "mime_type": "text/plain", "data": "&lt;partial_text&gt;" }</code>.
4.  Logs messages.</p>
<h3 id="client_to_agent_messagingwebsocket-live_request_queue"><code>client_to_agent_messaging(websocket, live_request_queue)</code><a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#client_to_agent_messagingwebsocket-live_request_queue" title="Permanent link">¶</a></h3>
<div class="language-py highlight"><pre id="__code_95"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_95 &gt; code"></button><code class="md-code__content" tabindex="0"><span id="__span-15-1"><a id="__codelineno-15-1" name="__codelineno-15-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-1"></a><span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">client_to_agent_messaging</span><span class="p">(</span><span class="n">websocket</span><span class="p">,</span> <span class="n">live_request_queue</span><span class="p">):</span>
</span><span id="__span-15-2"><a id="__codelineno-15-2" name="__codelineno-15-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-2"></a><span class="w">    </span><span class="sd">"""Client to agent communication"""</span>
</span><span id="__span-15-3"><a id="__codelineno-15-3" name="__codelineno-15-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-3"></a>    <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
</span><span id="__span-15-4"><a id="__codelineno-15-4" name="__codelineno-15-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-4"></a>        <span class="c1"># Decode JSON message</span>
</span><span id="__span-15-5"><a id="__codelineno-15-5" name="__codelineno-15-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-5"></a>        <span class="n">message_json</span> <span class="o">=</span> <span class="k">await</span> <span class="n">websocket</span><span class="o">.</span><span class="n">receive_text</span><span class="p">()</span>
</span><span id="__span-15-6"><a id="__codelineno-15-6" name="__codelineno-15-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-6"></a>        <span class="n">message</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">message_json</span><span class="p">)</span>
</span><span id="__span-15-7"><a id="__codelineno-15-7" name="__codelineno-15-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-7"></a>        <span class="n">mime_type</span> <span class="o">=</span> <span class="n">message</span><span class="p">[</span><span class="s2">"mime_type"</span><span class="p">]</span>
</span><span id="__span-15-8"><a id="__codelineno-15-8" name="__codelineno-15-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-8"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">message</span><span class="p">[</span><span class="s2">"data"</span><span class="p">]</span>
</span><span id="__span-15-9"><a id="__codelineno-15-9" name="__codelineno-15-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-9"></a>
</span><span id="__span-15-10"><a id="__codelineno-15-10" name="__codelineno-15-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-10"></a>        <span class="c1"># Send the message to the agent</span>
</span><span id="__span-15-11"><a id="__codelineno-15-11" name="__codelineno-15-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-11"></a>        <span class="k">if</span> <span class="n">mime_type</span> <span class="o">==</span> <span class="s2">"text/plain"</span><span class="p">:</span>
</span><span id="__span-15-12"><a id="__codelineno-15-12" name="__codelineno-15-12" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-12"></a>            <span class="c1"># Send a text message</span>
</span><span id="__span-15-13"><a id="__codelineno-15-13" name="__codelineno-15-13" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-13"></a>            <span class="n">content</span> <span class="o">=</span> <span class="n">Content</span><span class="p">(</span><span class="n">role</span><span class="o">=</span><span class="s2">"user"</span><span class="p">,</span> <span class="n">parts</span><span class="o">=</span><span class="p">[</span><span class="n">Part</span><span class="o">.</span><span class="n">from_text</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">data</span><span class="p">)])</span>
</span><span id="__span-15-14"><a id="__codelineno-15-14" name="__codelineno-15-14" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-14"></a>            <span class="n">live_request_queue</span><span class="o">.</span><span class="n">send_content</span><span class="p">(</span><span class="n">content</span><span class="o">=</span><span class="n">content</span><span class="p">)</span>
</span><span id="__span-15-15"><a id="__codelineno-15-15" name="__codelineno-15-15" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-15"></a>            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"[CLIENT TO AGENT]: </span><span class="si">{</span><span class="n">data</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</span><span id="__span-15-16"><a id="__codelineno-15-16" name="__codelineno-15-16" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-16"></a>        <span class="k">elif</span> <span class="n">mime_type</span> <span class="o">==</span> <span class="s2">"audio/pcm"</span><span class="p">:</span>
</span><span id="__span-15-17"><a id="__codelineno-15-17" name="__codelineno-15-17" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-17"></a>            <span class="c1"># Send an audio data</span>
</span><span id="__span-15-18"><a id="__codelineno-15-18" name="__codelineno-15-18" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-18"></a>            <span class="n">decoded_data</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span id="__span-15-19"><a id="__codelineno-15-19" name="__codelineno-15-19" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-19"></a>            <span class="n">live_request_queue</span><span class="o">.</span><span class="n">send_realtime</span><span class="p">(</span><span class="n">Blob</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">decoded_data</span><span class="p">,</span> <span class="n">mime_type</span><span class="o">=</span><span class="n">mime_type</span><span class="p">))</span>
</span><span id="__span-15-20"><a id="__codelineno-15-20" name="__codelineno-15-20" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-20"></a>        <span class="k">else</span><span class="p">:</span>
</span><span id="__span-15-21"><a id="__codelineno-15-21" name="__codelineno-15-21" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-15-21"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Mime type not supported: </span><span class="si">{</span><span class="n">mime_type</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</span></code></pre></div>
<p>This asynchronous function relays messages from the WebSocket client to the ADK agent.</p>
<p><strong>Logic:</strong>
1.  Receives and parses JSON messages from the WebSocket, expecting: <code>{ "mime_type": "text/plain" | "audio/pcm", "data": "&lt;data&gt;" }</code>.
2.  <strong>Text Input:</strong> For "text/plain", sends <code>Content</code> to agent via <code>live_request_queue.send_content()</code>.
3.  <strong>Audio Input:</strong> For "audio/pcm", decodes Base64 data, wraps in <code>Blob</code>, and sends via <code>live_request_queue.send_realtime()</code>.
4.  Raises <code>ValueError</code> for unsupported MIME types.
5.  Logs messages.</p>
<h3 id="fastapi-web-application">FastAPI Web Application<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#fastapi-web-application" title="Permanent link">¶</a></h3>
<div class="language-py highlight"><pre id="__code_96"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_96 &gt; code"></button><code class="md-code__content" tabindex="0"><span id="__span-16-1"><a id="__codelineno-16-1" name="__codelineno-16-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-1"></a><span class="n">app</span> <span class="o">=</span> <span class="n">FastAPI</span><span class="p">()</span>
</span><span id="__span-16-2"><a id="__codelineno-16-2" name="__codelineno-16-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-2"></a>
</span><span id="__span-16-3"><a id="__codelineno-16-3" name="__codelineno-16-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-3"></a><span class="n">STATIC_DIR</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="s2">"static"</span><span class="p">)</span>
</span><span id="__span-16-4"><a id="__codelineno-16-4" name="__codelineno-16-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-4"></a><span class="n">app</span><span class="o">.</span><span class="n">mount</span><span class="p">(</span><span class="s2">"/static"</span><span class="p">,</span> <span class="n">StaticFiles</span><span class="p">(</span><span class="n">directory</span><span class="o">=</span><span class="n">STATIC_DIR</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s2">"static"</span><span class="p">)</span>
</span><span id="__span-16-5"><a id="__codelineno-16-5" name="__codelineno-16-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-5"></a>
</span><span id="__span-16-6"><a id="__codelineno-16-6" name="__codelineno-16-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-6"></a>
</span><span id="__span-16-7"><a id="__codelineno-16-7" name="__codelineno-16-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-7"></a><span class="nd">@app</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">"/"</span><span class="p">)</span>
</span><span id="__span-16-8"><a id="__codelineno-16-8" name="__codelineno-16-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-8"></a><span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">root</span><span class="p">():</span>
</span><span id="__span-16-9"><a id="__codelineno-16-9" name="__codelineno-16-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-9"></a><span class="w">    </span><span class="sd">"""Serves the index.html"""</span>
</span><span id="__span-16-10"><a id="__codelineno-16-10" name="__codelineno-16-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-10"></a>    <span class="k">return</span> <span class="n">FileResponse</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">STATIC_DIR</span><span class="p">,</span> <span class="s2">"index.html"</span><span class="p">))</span>
</span><span id="__span-16-11"><a id="__codelineno-16-11" name="__codelineno-16-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-11"></a>
</span><span id="__span-16-12"><a id="__codelineno-16-12" name="__codelineno-16-12" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-12"></a>
</span><span id="__span-16-13"><a id="__codelineno-16-13" name="__codelineno-16-13" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-13"></a><span class="nd">@app</span><span class="o">.</span><span class="n">websocket</span><span class="p">(</span><span class="s2">"/ws/</span><span class="si">{user_id}</span><span class="s2">"</span><span class="p">)</span>
</span><span id="__span-16-14"><a id="__codelineno-16-14" name="__codelineno-16-14" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-14"></a><span class="k">async</span> <span class="k">def</span><span class="w"> </span><span class="nf">websocket_endpoint</span><span class="p">(</span><span class="n">websocket</span><span class="p">:</span> <span class="n">WebSocket</span><span class="p">,</span> <span class="n">user_id</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span> <span class="n">is_audio</span><span class="p">:</span> <span class="nb">str</span><span class="p">):</span>
</span><span id="__span-16-15"><a id="__codelineno-16-15" name="__codelineno-16-15" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-15"></a><span class="w">    </span><span class="sd">"""Client websocket endpoint"""</span>
</span><span id="__span-16-16"><a id="__codelineno-16-16" name="__codelineno-16-16" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-16"></a>
</span><span id="__span-16-17"><a id="__codelineno-16-17" name="__codelineno-16-17" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-17"></a>    <span class="c1"># Wait for client connection</span>
</span><span id="__span-16-18"><a id="__codelineno-16-18" name="__codelineno-16-18" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-18"></a>    <span class="k">await</span> <span class="n">websocket</span><span class="o">.</span><span class="n">accept</span><span class="p">()</span>
</span><span id="__span-16-19"><a id="__codelineno-16-19" name="__codelineno-16-19" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-19"></a>    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Client #</span><span class="si">{</span><span class="n">user_id</span><span class="si">}</span><span class="s2"> connected, audio mode: </span><span class="si">{</span><span class="n">is_audio</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</span><span id="__span-16-20"><a id="__codelineno-16-20" name="__codelineno-16-20" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-20"></a>
</span><span id="__span-16-21"><a id="__codelineno-16-21" name="__codelineno-16-21" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-21"></a>    <span class="c1"># Start agent session</span>
</span><span id="__span-16-22"><a id="__codelineno-16-22" name="__codelineno-16-22" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-22"></a>    <span class="n">user_id_str</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">user_id</span><span class="p">)</span>
</span><span id="__span-16-23"><a id="__codelineno-16-23" name="__codelineno-16-23" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-23"></a>    <span class="n">live_events</span><span class="p">,</span> <span class="n">live_request_queue</span> <span class="o">=</span> <span class="k">await</span> <span class="n">start_agent_session</span><span class="p">(</span><span class="n">user_id_str</span><span class="p">,</span> <span class="n">is_audio</span> <span class="o">==</span> <span class="s2">"true"</span><span class="p">)</span>
</span><span id="__span-16-24"><a id="__codelineno-16-24" name="__codelineno-16-24" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-24"></a>
</span><span id="__span-16-25"><a id="__codelineno-16-25" name="__codelineno-16-25" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-25"></a>    <span class="c1"># Start tasks</span>
</span><span id="__span-16-26"><a id="__codelineno-16-26" name="__codelineno-16-26" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-26"></a>    <span class="n">agent_to_client_task</span> <span class="o">=</span> <span class="n">asyncio</span><span class="o">.</span><span class="n">create_task</span><span class="p">(</span>
</span><span id="__span-16-27"><a id="__codelineno-16-27" name="__codelineno-16-27" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-27"></a>        <span class="n">agent_to_client_messaging</span><span class="p">(</span><span class="n">websocket</span><span class="p">,</span> <span class="n">live_events</span><span class="p">)</span>
</span><span id="__span-16-28"><a id="__codelineno-16-28" name="__codelineno-16-28" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-28"></a>    <span class="p">)</span>
</span><span id="__span-16-29"><a id="__codelineno-16-29" name="__codelineno-16-29" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-29"></a>    <span class="n">client_to_agent_task</span> <span class="o">=</span> <span class="n">asyncio</span><span class="o">.</span><span class="n">create_task</span><span class="p">(</span>
</span><span id="__span-16-30"><a id="__codelineno-16-30" name="__codelineno-16-30" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-30"></a>        <span class="n">client_to_agent_messaging</span><span class="p">(</span><span class="n">websocket</span><span class="p">,</span> <span class="n">live_request_queue</span><span class="p">)</span>
</span><span id="__span-16-31"><a id="__codelineno-16-31" name="__codelineno-16-31" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-31"></a>    <span class="p">)</span>
</span><span id="__span-16-32"><a id="__codelineno-16-32" name="__codelineno-16-32" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-32"></a>
</span><span id="__span-16-33"><a id="__codelineno-16-33" name="__codelineno-16-33" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-33"></a>    <span class="c1"># Wait until the websocket is disconnected or an error occurs</span>
</span><span id="__span-16-34"><a id="__codelineno-16-34" name="__codelineno-16-34" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-34"></a>    <span class="n">tasks</span> <span class="o">=</span> <span class="p">[</span><span class="n">agent_to_client_task</span><span class="p">,</span> <span class="n">client_to_agent_task</span><span class="p">]</span>
</span><span id="__span-16-35"><a id="__codelineno-16-35" name="__codelineno-16-35" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-35"></a>    <span class="k">await</span> <span class="n">asyncio</span><span class="o">.</span><span class="n">wait</span><span class="p">(</span><span class="n">tasks</span><span class="p">,</span> <span class="n">return_when</span><span class="o">=</span><span class="n">asyncio</span><span class="o">.</span><span class="n">FIRST_EXCEPTION</span><span class="p">)</span>
</span><span id="__span-16-36"><a id="__codelineno-16-36" name="__codelineno-16-36" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-36"></a>
</span><span id="__span-16-37"><a id="__codelineno-16-37" name="__codelineno-16-37" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-37"></a>    <span class="c1"># Close LiveRequestQueue</span>
</span><span id="__span-16-38"><a id="__codelineno-16-38" name="__codelineno-16-38" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-38"></a>    <span class="n">live_request_queue</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span id="__span-16-39"><a id="__codelineno-16-39" name="__codelineno-16-39" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-39"></a>
</span><span id="__span-16-40"><a id="__codelineno-16-40" name="__codelineno-16-40" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-40"></a>    <span class="c1"># Disconnected</span>
</span><span id="__span-16-41"><a id="__codelineno-16-41" name="__codelineno-16-41" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-16-41"></a>    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Client #</span><span class="si">{</span><span class="n">user_id</span><span class="si">}</span><span class="s2"> disconnected"</span><span class="p">)</span>
</span></code></pre></div>
<ul>
<li><strong><code>app = FastAPI()</code></strong>: Initializes the application.</li>
<li><strong>Static Files:</strong> Serves files from the <code>static</code> directory under <code>/static</code>.</li>
<li><strong><code>@app.get("/")</code> (Root Endpoint):</strong> Serves <code>index.html</code>.</li>
<li><strong><code>@app.websocket("/ws/{user_id}")</code> (WebSocket Endpoint):</strong><ul>
<li><strong>Path Parameters:</strong> <code>user_id</code> (int) and <code>is_audio</code> (str: "true"/"false").</li>
<li><strong>Connection Handling:</strong><ol>
<li>Accepts WebSocket connection.</li>
<li>Calls <code>start_agent_session()</code> using <code>user_id</code> and <code>is_audio</code>.</li>
<li><strong>Concurrent Messaging Tasks:</strong> Creates and runs <code>agent_to_client_messaging</code> and <code>client_to_agent_messaging</code> concurrently using <code>asyncio.gather</code>. These tasks handle bidirectional message flow.</li>
<li>Logs client connection and disconnection.</li>
</ol>
</li>
</ul>
</li>
</ul>
<h3 id="how-it-works-overall-flow">How It Works (Overall Flow)<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#how-it-works-overall-flow" title="Permanent link">¶</a></h3>
<ol>
<li>Client connects to <code>ws://&lt;server&gt;/ws/&lt;user_id&gt;?is_audio=&lt;true_or_false&gt;</code>.</li>
<li>Server's <code>websocket_endpoint</code> accepts, starts ADK session (<code>start_agent_session</code>).</li>
<li>Two <code>asyncio</code> tasks manage communication:<ul>
<li><code>client_to_agent_messaging</code>: Client WebSocket messages -&gt; ADK <code>live_request_queue</code>.</li>
<li><code>agent_to_client_messaging</code>: ADK <code>live_events</code> -&gt; Client WebSocket.</li>
</ul>
</li>
<li>Bidirectional streaming continues until disconnection or error.</li>
</ol>
<h2 id="5.-client-side-code-overview">5. Client code overview<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#5.-client-side-code-overview" title="Permanent link">¶</a></h2>
<p>The JavaScript <code>app.js</code> (in <code>app/static/js</code>) manages client-side interaction with the ADK Streaming WebSocket backend. It handles sending text/audio and receiving/displaying streamed responses.</p>
<p>Key functionalities:
1.  Manage WebSocket connection.
2.  Handle text input.
3.  Capture microphone audio (Web Audio API, AudioWorklets).
4.  Send text/audio to backend.
5.  Receive and render text/audio agent responses.
6.  Manage UI.</p>
<h3 id="prerequisites">Prerequisites<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#prerequisites" title="Permanent link">¶</a></h3>
<ul>
<li><strong>HTML Structure:</strong> Requires specific element IDs (e.g., <code>messageForm</code>, <code>message</code>, <code>messages</code>, <code>sendButton</code>, <code>startAudioButton</code>).</li>
<li><strong>Backend Server:</strong> The Python FastAPI server must be running.</li>
<li><strong>Audio Worklet Files:</strong> <code>audio-player.js</code> and <code>audio-recorder.js</code> for audio processing.</li>
</ul>
<h3 id="websocket-handling">WebSocket Handling<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#websocket-handling" title="Permanent link">¶</a></h3>
<div class="language-JavaScript highlight"><pre id="__code_97"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_97 &gt; code"></button><code class="md-code__content" tabindex="0"><span id="__span-17-1"><a id="__codelineno-17-1" name="__codelineno-17-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-1"></a><span class="c1">// Connect the server with a WebSocket connection</span>
</span><span id="__span-17-2"><a id="__codelineno-17-2" name="__codelineno-17-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-2"></a><span class="kd">const</span><span class="w"> </span><span class="nx">sessionId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">().</span><span class="nx">toString</span><span class="p">().</span><span class="nx">substring</span><span class="p">(</span><span class="mf">10</span><span class="p">);</span>
</span><span id="__span-17-3"><a id="__codelineno-17-3" name="__codelineno-17-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-3"></a><span class="kd">const</span><span class="w"> </span><span class="nx">ws_url</span><span class="w"> </span><span class="o">=</span>
</span><span id="__span-17-4"><a id="__codelineno-17-4" name="__codelineno-17-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-4"></a><span class="w">  </span><span class="s2">"ws://"</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">"/ws/"</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">sessionId</span><span class="p">;</span>
</span><span id="__span-17-5"><a id="__codelineno-17-5" name="__codelineno-17-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-5"></a><span class="kd">let</span><span class="w"> </span><span class="nx">websocket</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">null</span><span class="p">;</span>
</span><span id="__span-17-6"><a id="__codelineno-17-6" name="__codelineno-17-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-6"></a><span class="kd">let</span><span class="w"> </span><span class="nx">is_audio</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">false</span><span class="p">;</span>
</span><span id="__span-17-7"><a id="__codelineno-17-7" name="__codelineno-17-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-7"></a>
</span><span id="__span-17-8"><a id="__codelineno-17-8" name="__codelineno-17-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-8"></a><span class="c1">// Get DOM elements</span>
</span><span id="__span-17-9"><a id="__codelineno-17-9" name="__codelineno-17-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-9"></a><span class="kd">const</span><span class="w"> </span><span class="nx">messageForm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"messageForm"</span><span class="p">);</span>
</span><span id="__span-17-10"><a id="__codelineno-17-10" name="__codelineno-17-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-10"></a><span class="kd">const</span><span class="w"> </span><span class="nx">messageInput</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"message"</span><span class="p">);</span>
</span><span id="__span-17-11"><a id="__codelineno-17-11" name="__codelineno-17-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-11"></a><span class="kd">const</span><span class="w"> </span><span class="nx">messagesDiv</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"messages"</span><span class="p">);</span>
</span><span id="__span-17-12"><a id="__codelineno-17-12" name="__codelineno-17-12" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-12"></a><span class="kd">let</span><span class="w"> </span><span class="nx">currentMessageId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">null</span><span class="p">;</span>
</span><span id="__span-17-13"><a id="__codelineno-17-13" name="__codelineno-17-13" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-13"></a>
</span><span id="__span-17-14"><a id="__codelineno-17-14" name="__codelineno-17-14" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-14"></a><span class="c1">// WebSocket handlers</span>
</span><span id="__span-17-15"><a id="__codelineno-17-15" name="__codelineno-17-15" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-15"></a><span class="kd">function</span><span class="w"> </span><span class="nx">connectWebsocket</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-16"><a id="__codelineno-17-16" name="__codelineno-17-16" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-16"></a><span class="w">  </span><span class="c1">// Connect websocket</span>
</span><span id="__span-17-17"><a id="__codelineno-17-17" name="__codelineno-17-17" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-17"></a><span class="w">  </span><span class="nx">websocket</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="ow">new</span><span class="w"> </span><span class="nx">WebSocket</span><span class="p">(</span><span class="nx">ws_url</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">"?is_audio="</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">is_audio</span><span class="p">);</span>
</span><span id="__span-17-18"><a id="__codelineno-17-18" name="__codelineno-17-18" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-18"></a>
</span><span id="__span-17-19"><a id="__codelineno-17-19" name="__codelineno-17-19" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-19"></a><span class="w">  </span><span class="c1">// Handle connection open</span>
</span><span id="__span-17-20"><a id="__codelineno-17-20" name="__codelineno-17-20" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-20"></a><span class="w">  </span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onopen</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-21"><a id="__codelineno-17-21" name="__codelineno-17-21" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-21"></a><span class="w">    </span><span class="c1">// Connection opened messages</span>
</span><span id="__span-17-22"><a id="__codelineno-17-22" name="__codelineno-17-22" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-22"></a><span class="w">    </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"WebSocket connection opened."</span><span class="p">);</span>
</span><span id="__span-17-23"><a id="__codelineno-17-23" name="__codelineno-17-23" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-23"></a><span class="w">    </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"messages"</span><span class="p">).</span><span class="nx">textContent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Connection opened"</span><span class="p">;</span>
</span><span id="__span-17-24"><a id="__codelineno-17-24" name="__codelineno-17-24" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-24"></a>
</span><span id="__span-17-25"><a id="__codelineno-17-25" name="__codelineno-17-25" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-25"></a><span class="w">    </span><span class="c1">// Enable the Send button</span>
</span><span id="__span-17-26"><a id="__codelineno-17-26" name="__codelineno-17-26" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-26"></a><span class="w">    </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"sendButton"</span><span class="p">).</span><span class="nx">disabled</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">false</span><span class="p">;</span>
</span><span id="__span-17-27"><a id="__codelineno-17-27" name="__codelineno-17-27" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-27"></a><span class="w">    </span><span class="nx">addSubmitHandler</span><span class="p">();</span>
</span><span id="__span-17-28"><a id="__codelineno-17-28" name="__codelineno-17-28" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-28"></a><span class="w">  </span><span class="p">};</span>
</span><span id="__span-17-29"><a id="__codelineno-17-29" name="__codelineno-17-29" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-29"></a>
</span><span id="__span-17-30"><a id="__codelineno-17-30" name="__codelineno-17-30" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-30"></a><span class="w">  </span><span class="c1">// Handle incoming messages</span>
</span><span id="__span-17-31"><a id="__codelineno-17-31" name="__codelineno-17-31" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-31"></a><span class="w">  </span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onmessage</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="w"> </span><span class="p">(</span><span class="nx">event</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-32"><a id="__codelineno-17-32" name="__codelineno-17-32" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-32"></a><span class="w">    </span><span class="c1">// Parse the incoming message</span>
</span><span id="__span-17-33"><a id="__codelineno-17-33" name="__codelineno-17-33" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-33"></a><span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">message_from_server</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span><span id="__span-17-34"><a id="__codelineno-17-34" name="__codelineno-17-34" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-34"></a><span class="w">    </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"[AGENT TO CLIENT] "</span><span class="p">,</span><span class="w"> </span><span class="nx">message_from_server</span><span class="p">);</span>
</span><span id="__span-17-35"><a id="__codelineno-17-35" name="__codelineno-17-35" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-35"></a>
</span><span id="__span-17-36"><a id="__codelineno-17-36" name="__codelineno-17-36" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-36"></a><span class="w">    </span><span class="c1">// Check if the turn is complete</span>
</span><span id="__span-17-37"><a id="__codelineno-17-37" name="__codelineno-17-37" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-37"></a><span class="w">    </span><span class="c1">// if turn complete, add new message</span>
</span><span id="__span-17-38"><a id="__codelineno-17-38" name="__codelineno-17-38" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-38"></a><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span>
</span><span id="__span-17-39"><a id="__codelineno-17-39" name="__codelineno-17-39" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-39"></a><span class="w">      </span><span class="nx">message_from_server</span><span class="p">.</span><span class="nx">turn_complete</span><span class="w"> </span><span class="o">&amp;&amp;</span>
</span><span id="__span-17-40"><a id="__codelineno-17-40" name="__codelineno-17-40" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-40"></a><span class="w">      </span><span class="nx">message_from_server</span><span class="p">.</span><span class="nx">turn_complete</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">true</span>
</span><span id="__span-17-41"><a id="__codelineno-17-41" name="__codelineno-17-41" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-41"></a><span class="w">    </span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-42"><a id="__codelineno-17-42" name="__codelineno-17-42" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-42"></a><span class="w">      </span><span class="nx">currentMessageId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">null</span><span class="p">;</span>
</span><span id="__span-17-43"><a id="__codelineno-17-43" name="__codelineno-17-43" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-43"></a><span class="w">      </span><span class="k">return</span><span class="p">;</span>
</span><span id="__span-17-44"><a id="__codelineno-17-44" name="__codelineno-17-44" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-44"></a><span class="w">    </span><span class="p">}</span>
</span><span id="__span-17-45"><a id="__codelineno-17-45" name="__codelineno-17-45" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-45"></a>
</span><span id="__span-17-46"><a id="__codelineno-17-46" name="__codelineno-17-46" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-46"></a><span class="w">    </span><span class="c1">// If it's audio, play it</span>
</span><span id="__span-17-47"><a id="__codelineno-17-47" name="__codelineno-17-47" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-47"></a><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">message_from_server</span><span class="p">.</span><span class="nx">mime_type</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"audio/pcm"</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="nx">audioPlayerNode</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-48"><a id="__codelineno-17-48" name="__codelineno-17-48" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-48"></a><span class="w">      </span><span class="nx">audioPlayerNode</span><span class="p">.</span><span class="nx">port</span><span class="p">.</span><span class="nx">postMessage</span><span class="p">(</span><span class="nx">base64ToArray</span><span class="p">(</span><span class="nx">message_from_server</span><span class="p">.</span><span class="nx">data</span><span class="p">));</span>
</span><span id="__span-17-49"><a id="__codelineno-17-49" name="__codelineno-17-49" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-49"></a><span class="w">    </span><span class="p">}</span>
</span><span id="__span-17-50"><a id="__codelineno-17-50" name="__codelineno-17-50" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-50"></a>
</span><span id="__span-17-51"><a id="__codelineno-17-51" name="__codelineno-17-51" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-51"></a><span class="w">    </span><span class="c1">// If it's a text, print it</span>
</span><span id="__span-17-52"><a id="__codelineno-17-52" name="__codelineno-17-52" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-52"></a><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">message_from_server</span><span class="p">.</span><span class="nx">mime_type</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"text/plain"</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-53"><a id="__codelineno-17-53" name="__codelineno-17-53" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-53"></a><span class="w">      </span><span class="c1">// add a new message for a new turn</span>
</span><span id="__span-17-54"><a id="__codelineno-17-54" name="__codelineno-17-54" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-54"></a><span class="w">      </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">currentMessageId</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-55"><a id="__codelineno-17-55" name="__codelineno-17-55" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-55"></a><span class="w">        </span><span class="nx">currentMessageId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">().</span><span class="nx">toString</span><span class="p">(</span><span class="mf">36</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mf">7</span><span class="p">);</span>
</span><span id="__span-17-56"><a id="__codelineno-17-56" name="__codelineno-17-56" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-56"></a><span class="w">        </span><span class="kd">const</span><span class="w"> </span><span class="nx">message</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">"p"</span><span class="p">);</span>
</span><span id="__span-17-57"><a id="__codelineno-17-57" name="__codelineno-17-57" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-57"></a><span class="w">        </span><span class="nx">message</span><span class="p">.</span><span class="nx">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">currentMessageId</span><span class="p">;</span>
</span><span id="__span-17-58"><a id="__codelineno-17-58" name="__codelineno-17-58" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-58"></a><span class="w">        </span><span class="c1">// Append the message element to the messagesDiv</span>
</span><span id="__span-17-59"><a id="__codelineno-17-59" name="__codelineno-17-59" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-59"></a><span class="w">        </span><span class="nx">messagesDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span>
</span><span id="__span-17-60"><a id="__codelineno-17-60" name="__codelineno-17-60" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-60"></a><span class="w">      </span><span class="p">}</span>
</span><span id="__span-17-61"><a id="__codelineno-17-61" name="__codelineno-17-61" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-61"></a>
</span><span id="__span-17-62"><a id="__codelineno-17-62" name="__codelineno-17-62" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-62"></a><span class="w">      </span><span class="c1">// Add message text to the existing message element</span>
</span><span id="__span-17-63"><a id="__codelineno-17-63" name="__codelineno-17-63" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-63"></a><span class="w">      </span><span class="kd">const</span><span class="w"> </span><span class="nx">message</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">currentMessageId</span><span class="p">);</span>
</span><span id="__span-17-64"><a id="__codelineno-17-64" name="__codelineno-17-64" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-64"></a><span class="w">      </span><span class="nx">message</span><span class="p">.</span><span class="nx">textContent</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="nx">message_from_server</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
</span><span id="__span-17-65"><a id="__codelineno-17-65" name="__codelineno-17-65" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-65"></a>
</span><span id="__span-17-66"><a id="__codelineno-17-66" name="__codelineno-17-66" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-66"></a><span class="w">      </span><span class="c1">// Scroll down to the bottom of the messagesDiv</span>
</span><span id="__span-17-67"><a id="__codelineno-17-67" name="__codelineno-17-67" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-67"></a><span class="w">      </span><span class="nx">messagesDiv</span><span class="p">.</span><span class="nx">scrollTop</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">messagesDiv</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="p">;</span>
</span><span id="__span-17-68"><a id="__codelineno-17-68" name="__codelineno-17-68" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-68"></a><span class="w">    </span><span class="p">}</span>
</span><span id="__span-17-69"><a id="__codelineno-17-69" name="__codelineno-17-69" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-69"></a><span class="w">  </span><span class="p">};</span>
</span><span id="__span-17-70"><a id="__codelineno-17-70" name="__codelineno-17-70" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-70"></a>
</span><span id="__span-17-71"><a id="__codelineno-17-71" name="__codelineno-17-71" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-71"></a><span class="w">  </span><span class="c1">// Handle connection close</span>
</span><span id="__span-17-72"><a id="__codelineno-17-72" name="__codelineno-17-72" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-72"></a><span class="w">  </span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onclose</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-73"><a id="__codelineno-17-73" name="__codelineno-17-73" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-73"></a><span class="w">    </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"WebSocket connection closed."</span><span class="p">);</span>
</span><span id="__span-17-74"><a id="__codelineno-17-74" name="__codelineno-17-74" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-74"></a><span class="w">    </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"sendButton"</span><span class="p">).</span><span class="nx">disabled</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">true</span><span class="p">;</span>
</span><span id="__span-17-75"><a id="__codelineno-17-75" name="__codelineno-17-75" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-75"></a><span class="w">    </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"messages"</span><span class="p">).</span><span class="nx">textContent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Connection closed"</span><span class="p">;</span>
</span><span id="__span-17-76"><a id="__codelineno-17-76" name="__codelineno-17-76" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-76"></a><span class="w">    </span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-77"><a id="__codelineno-17-77" name="__codelineno-17-77" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-77"></a><span class="w">      </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"Reconnecting..."</span><span class="p">);</span>
</span><span id="__span-17-78"><a id="__codelineno-17-78" name="__codelineno-17-78" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-78"></a><span class="w">      </span><span class="nx">connectWebsocket</span><span class="p">();</span>
</span><span id="__span-17-79"><a id="__codelineno-17-79" name="__codelineno-17-79" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-79"></a><span class="w">    </span><span class="p">},</span><span class="w"> </span><span class="mf">5000</span><span class="p">);</span>
</span><span id="__span-17-80"><a id="__codelineno-17-80" name="__codelineno-17-80" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-80"></a><span class="w">  </span><span class="p">};</span>
</span><span id="__span-17-81"><a id="__codelineno-17-81" name="__codelineno-17-81" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-81"></a>
</span><span id="__span-17-82"><a id="__codelineno-17-82" name="__codelineno-17-82" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-82"></a><span class="w">  </span><span class="nx">websocket</span><span class="p">.</span><span class="nx">onerror</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="w"> </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-83"><a id="__codelineno-17-83" name="__codelineno-17-83" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-83"></a><span class="w">    </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"WebSocket error: "</span><span class="p">,</span><span class="w"> </span><span class="nx">e</span><span class="p">);</span>
</span><span id="__span-17-84"><a id="__codelineno-17-84" name="__codelineno-17-84" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-84"></a><span class="w">  </span><span class="p">};</span>
</span><span id="__span-17-85"><a id="__codelineno-17-85" name="__codelineno-17-85" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-85"></a><span class="p">}</span>
</span><span id="__span-17-86"><a id="__codelineno-17-86" name="__codelineno-17-86" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-86"></a><span class="nx">connectWebsocket</span><span class="p">();</span>
</span><span id="__span-17-87"><a id="__codelineno-17-87" name="__codelineno-17-87" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-87"></a>
</span><span id="__span-17-88"><a id="__codelineno-17-88" name="__codelineno-17-88" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-88"></a><span class="c1">// Add submit handler to the form</span>
</span><span id="__span-17-89"><a id="__codelineno-17-89" name="__codelineno-17-89" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-89"></a><span class="kd">function</span><span class="w"> </span><span class="nx">addSubmitHandler</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-90"><a id="__codelineno-17-90" name="__codelineno-17-90" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-90"></a><span class="w">  </span><span class="nx">messageForm</span><span class="p">.</span><span class="nx">onsubmit</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kd">function</span><span class="w"> </span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-91"><a id="__codelineno-17-91" name="__codelineno-17-91" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-91"></a><span class="w">    </span><span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span id="__span-17-92"><a id="__codelineno-17-92" name="__codelineno-17-92" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-92"></a><span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">message</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">messageInput</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
</span><span id="__span-17-93"><a id="__codelineno-17-93" name="__codelineno-17-93" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-93"></a><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">message</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-94"><a id="__codelineno-17-94" name="__codelineno-17-94" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-94"></a><span class="w">      </span><span class="kd">const</span><span class="w"> </span><span class="nx">p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">"p"</span><span class="p">);</span>
</span><span id="__span-17-95"><a id="__codelineno-17-95" name="__codelineno-17-95" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-95"></a><span class="w">      </span><span class="nx">p</span><span class="p">.</span><span class="nx">textContent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"&gt; "</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">message</span><span class="p">;</span>
</span><span id="__span-17-96"><a id="__codelineno-17-96" name="__codelineno-17-96" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-96"></a><span class="w">      </span><span class="nx">messagesDiv</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span>
</span><span id="__span-17-97"><a id="__codelineno-17-97" name="__codelineno-17-97" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-97"></a><span class="w">      </span><span class="nx">messageInput</span><span class="p">.</span><span class="nx">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">;</span>
</span><span id="__span-17-98"><a id="__codelineno-17-98" name="__codelineno-17-98" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-98"></a><span class="w">      </span><span class="nx">sendMessage</span><span class="p">({</span>
</span><span id="__span-17-99"><a id="__codelineno-17-99" name="__codelineno-17-99" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-99"></a><span class="w">        </span><span class="nx">mime_type</span><span class="o">:</span><span class="w"> </span><span class="s2">"text/plain"</span><span class="p">,</span>
</span><span id="__span-17-100"><a id="__codelineno-17-100" name="__codelineno-17-100" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-100"></a><span class="w">        </span><span class="nx">data</span><span class="o">:</span><span class="w"> </span><span class="nx">message</span><span class="p">,</span>
</span><span id="__span-17-101"><a id="__codelineno-17-101" name="__codelineno-17-101" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-101"></a><span class="w">      </span><span class="p">});</span>
</span><span id="__span-17-102"><a id="__codelineno-17-102" name="__codelineno-17-102" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-102"></a><span class="w">      </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"[CLIENT TO AGENT] "</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nx">message</span><span class="p">);</span>
</span><span id="__span-17-103"><a id="__codelineno-17-103" name="__codelineno-17-103" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-103"></a><span class="w">    </span><span class="p">}</span>
</span><span id="__span-17-104"><a id="__codelineno-17-104" name="__codelineno-17-104" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-104"></a><span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="kc">false</span><span class="p">;</span>
</span><span id="__span-17-105"><a id="__codelineno-17-105" name="__codelineno-17-105" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-105"></a><span class="w">  </span><span class="p">};</span>
</span><span id="__span-17-106"><a id="__codelineno-17-106" name="__codelineno-17-106" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-106"></a><span class="p">}</span>
</span><span id="__span-17-107"><a id="__codelineno-17-107" name="__codelineno-17-107" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-107"></a>
</span><span id="__span-17-108"><a id="__codelineno-17-108" name="__codelineno-17-108" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-108"></a><span class="c1">// Send a message to the server as a JSON string</span>
</span><span id="__span-17-109"><a id="__codelineno-17-109" name="__codelineno-17-109" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-109"></a><span class="kd">function</span><span class="w"> </span><span class="nx">sendMessage</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-110"><a id="__codelineno-17-110" name="__codelineno-17-110" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-110"></a><span class="w">  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">websocket</span><span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span><span class="nx">websocket</span><span class="p">.</span><span class="nx">readyState</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="nx">WebSocket</span><span class="p">.</span><span class="nx">OPEN</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-111"><a id="__codelineno-17-111" name="__codelineno-17-111" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-111"></a><span class="w">    </span><span class="kd">const</span><span class="w"> </span><span class="nx">messageJson</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span>
</span><span id="__span-17-112"><a id="__codelineno-17-112" name="__codelineno-17-112" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-112"></a><span class="w">    </span><span class="nx">websocket</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">messageJson</span><span class="p">);</span>
</span><span id="__span-17-113"><a id="__codelineno-17-113" name="__codelineno-17-113" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-113"></a><span class="w">  </span><span class="p">}</span>
</span><span id="__span-17-114"><a id="__codelineno-17-114" name="__codelineno-17-114" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-114"></a><span class="p">}</span>
</span><span id="__span-17-115"><a id="__codelineno-17-115" name="__codelineno-17-115" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-115"></a>
</span><span id="__span-17-116"><a id="__codelineno-17-116" name="__codelineno-17-116" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-116"></a><span class="c1">// Decode Base64 data to Array</span>
</span><span id="__span-17-117"><a id="__codelineno-17-117" name="__codelineno-17-117" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-117"></a><span class="kd">function</span><span class="w"> </span><span class="nx">base64ToArray</span><span class="p">(</span><span class="nx">base64</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-118"><a id="__codelineno-17-118" name="__codelineno-17-118" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-118"></a><span class="w">  </span><span class="kd">const</span><span class="w"> </span><span class="nx">binaryString</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">atob</span><span class="p">(</span><span class="nx">base64</span><span class="p">);</span>
</span><span id="__span-17-119"><a id="__codelineno-17-119" name="__codelineno-17-119" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-119"></a><span class="w">  </span><span class="kd">const</span><span class="w"> </span><span class="nx">len</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">binaryString</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>
</span><span id="__span-17-120"><a id="__codelineno-17-120" name="__codelineno-17-120" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-120"></a><span class="w">  </span><span class="kd">const</span><span class="w"> </span><span class="nx">bytes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="ow">new</span><span class="w"> </span><span class="nb">Uint8Array</span><span class="p">(</span><span class="nx">len</span><span class="p">);</span>
</span><span id="__span-17-121"><a id="__codelineno-17-121" name="__codelineno-17-121" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-121"></a><span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="kd">let</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">0</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="nx">len</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-17-122"><a id="__codelineno-17-122" name="__codelineno-17-122" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-122"></a><span class="w">    </span><span class="nx">bytes</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">binaryString</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
</span><span id="__span-17-123"><a id="__codelineno-17-123" name="__codelineno-17-123" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-123"></a><span class="w">  </span><span class="p">}</span>
</span><span id="__span-17-124"><a id="__codelineno-17-124" name="__codelineno-17-124" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-124"></a><span class="w">  </span><span class="k">return</span><span class="w"> </span><span class="nx">bytes</span><span class="p">.</span><span class="nx">buffer</span><span class="p">;</span>
</span><span id="__span-17-125"><a id="__codelineno-17-125" name="__codelineno-17-125" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-17-125"></a><span class="p">}</span>
</span></code></pre></div>
<ul>
<li><strong>Connection Setup:</strong> Generates <code>sessionId</code>, constructs <code>ws_url</code>. <code>is_audio</code> flag (initially <code>false</code>) appends <code>?is_audio=true</code> to URL when active. <code>connectWebsocket()</code> initializes the connection.</li>
<li><strong><code>websocket.onopen</code></strong>: Enables send button, updates UI, calls <code>addSubmitHandler()</code>.</li>
<li><strong><code>websocket.onmessage</code></strong>: Parses incoming JSON from server.<ul>
<li><strong>Turn Completion:</strong> Resets <code>currentMessageId</code> if agent turn is complete.</li>
<li><strong>Audio Data (<code>audio/pcm</code>):</strong> Decodes Base64 audio (<code>base64ToArray()</code>) and sends to <code>audioPlayerNode</code> for playback.</li>
<li><strong>Text Data (<code>text/plain</code>):</strong> If new turn (<code>currentMessageId</code> is null), creates new <code>&lt;p&gt;</code>. Appends received text to the current message paragraph for streaming effect. Scrolls <code>messagesDiv</code>.</li>
</ul>
</li>
<li><strong><code>websocket.onclose</code></strong>: Disables send button, updates UI, attempts auto-reconnection after 5s.</li>
<li><strong><code>websocket.onerror</code></strong>: Logs errors.</li>
<li><strong>Initial Connection:</strong> <code>connectWebsocket()</code> is called on script load.</li>
</ul>
<h4 id="dom-interaction-message-submission">DOM Interaction &amp; Message Submission<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#dom-interaction-message-submission" title="Permanent link">¶</a></h4>
<ul>
<li><strong>Element Retrieval:</strong> Fetches required DOM elements.</li>
<li><strong><code>addSubmitHandler()</code></strong>: Attached to <code>messageForm</code>'s submit. Prevents default submission, gets text from <code>messageInput</code>, displays user message, clears input, and calls <code>sendMessage()</code> with <code>{ mime_type: "text/plain", data: messageText }</code>.</li>
<li><strong><code>sendMessage(messagePayload)</code></strong>: Sends JSON stringified <code>messagePayload</code> if WebSocket is open.</li>
</ul>
<h3 id="audio-handling">Audio Handling<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#audio-handling" title="Permanent link">¶</a></h3>
<div class="language-JavaScript highlight"><pre id="__code_98"><span></span><button class="md-clipboard md-icon" title="Copy to clipboard" data-clipboard-target="#__code_98 &gt; code"></button><code class="md-code__content"><span id="__span-18-1"><a id="__codelineno-18-1" name="__codelineno-18-1" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-1"></a><span class="kd">let</span><span class="w"> </span><span class="nx">audioPlayerNode</span><span class="p">;</span>
</span><span id="__span-18-2"><a id="__codelineno-18-2" name="__codelineno-18-2" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-2"></a><span class="kd">let</span><span class="w"> </span><span class="nx">audioPlayerContext</span><span class="p">;</span>
</span><span id="__span-18-3"><a id="__codelineno-18-3" name="__codelineno-18-3" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-3"></a><span class="kd">let</span><span class="w"> </span><span class="nx">audioRecorderNode</span><span class="p">;</span>
</span><span id="__span-18-4"><a id="__codelineno-18-4" name="__codelineno-18-4" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-4"></a><span class="kd">let</span><span class="w"> </span><span class="nx">audioRecorderContext</span><span class="p">;</span>
</span><span id="__span-18-5"><a id="__codelineno-18-5" name="__codelineno-18-5" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-5"></a><span class="kd">let</span><span class="w"> </span><span class="nx">micStream</span><span class="p">;</span>
</span><span id="__span-18-6"><a id="__codelineno-18-6" name="__codelineno-18-6" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-6"></a>
</span><span id="__span-18-7"><a id="__codelineno-18-7" name="__codelineno-18-7" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-7"></a><span class="c1">// Import the audio worklets</span>
</span><span id="__span-18-8"><a id="__codelineno-18-8" name="__codelineno-18-8" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-8"></a><span class="k">import</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nx">startAudioPlayerWorklet</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="kr">from</span><span class="w"> </span><span class="s2">"./audio-player.js"</span><span class="p">;</span>
</span><span id="__span-18-9"><a id="__codelineno-18-9" name="__codelineno-18-9" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-9"></a><span class="k">import</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nx">startAudioRecorderWorklet</span><span class="w"> </span><span class="p">}</span><span class="w"> </span><span class="kr">from</span><span class="w"> </span><span class="s2">"./audio-recorder.js"</span><span class="p">;</span>
</span><span id="__span-18-10"><a id="__codelineno-18-10" name="__codelineno-18-10" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-10"></a>
</span><span id="__span-18-11"><a id="__codelineno-18-11" name="__codelineno-18-11" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-11"></a><span class="c1">// Start audio</span>
</span><span id="__span-18-12"><a id="__codelineno-18-12" name="__codelineno-18-12" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-12"></a><span class="kd">function</span><span class="w"> </span><span class="nx">startAudio</span><span class="p">()</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-18-13"><a id="__codelineno-18-13" name="__codelineno-18-13" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-13"></a><span class="w">  </span><span class="c1">// Start audio output</span>
</span><span id="__span-18-14"><a id="__codelineno-18-14" name="__codelineno-18-14" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-14"></a><span class="w">  </span><span class="nx">startAudioPlayerWorklet</span><span class="p">().</span><span class="nx">then</span><span class="p">(([</span><span class="nx">node</span><span class="p">,</span><span class="w"> </span><span class="nx">ctx</span><span class="p">])</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-18-15"><a id="__codelineno-18-15" name="__codelineno-18-15" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-15"></a><span class="w">    </span><span class="nx">audioPlayerNode</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">node</span><span class="p">;</span>
</span><span id="__span-18-16"><a id="__codelineno-18-16" name="__codelineno-18-16" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-16"></a><span class="w">    </span><span class="nx">audioPlayerContext</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">ctx</span><span class="p">;</span>
</span><span id="__span-18-17"><a id="__codelineno-18-17" name="__codelineno-18-17" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-17"></a><span class="w">  </span><span class="p">});</span>
</span><span id="__span-18-18"><a id="__codelineno-18-18" name="__codelineno-18-18" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-18"></a><span class="w">  </span><span class="c1">// Start audio input</span>
</span><span id="__span-18-19"><a id="__codelineno-18-19" name="__codelineno-18-19" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-19"></a><span class="w">  </span><span class="nx">startAudioRecorderWorklet</span><span class="p">(</span><span class="nx">audioRecorderHandler</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span>
</span><span id="__span-18-20"><a id="__codelineno-18-20" name="__codelineno-18-20" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-20"></a><span class="w">    </span><span class="p">([</span><span class="nx">node</span><span class="p">,</span><span class="w"> </span><span class="nx">ctx</span><span class="p">,</span><span class="w"> </span><span class="nx">stream</span><span class="p">])</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-18-21"><a id="__codelineno-18-21" name="__codelineno-18-21" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-21"></a><span class="w">      </span><span class="nx">audioRecorderNode</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">node</span><span class="p">;</span>
</span><span id="__span-18-22"><a id="__codelineno-18-22" name="__codelineno-18-22" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-22"></a><span class="w">      </span><span class="nx">audioRecorderContext</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">ctx</span><span class="p">;</span>
</span><span id="__span-18-23"><a id="__codelineno-18-23" name="__codelineno-18-23" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-23"></a><span class="w">      </span><span class="nx">micStream</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">stream</span><span class="p">;</span>
</span><span id="__span-18-24"><a id="__codelineno-18-24" name="__codelineno-18-24" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-24"></a><span class="w">    </span><span class="p">}</span>
</span><span id="__span-18-25"><a id="__codelineno-18-25" name="__codelineno-18-25" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-25"></a><span class="w">  </span><span class="p">);</span>
</span><span id="__span-18-26"><a id="__codelineno-18-26" name="__codelineno-18-26" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-26"></a><span class="p">}</span>
</span><span id="__span-18-27"><a id="__codelineno-18-27" name="__codelineno-18-27" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-27"></a>
</span><span id="__span-18-28"><a id="__codelineno-18-28" name="__codelineno-18-28" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-28"></a><span class="c1">// Start the audio only when the user clicked the button</span>
</span><span id="__span-18-29"><a id="__codelineno-18-29" name="__codelineno-18-29" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-29"></a><span class="c1">// (due to the gesture requirement for the Web Audio API)</span>
</span><span id="__span-18-30"><a id="__codelineno-18-30" name="__codelineno-18-30" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-30"></a><span class="kd">const</span><span class="w"> </span><span class="nx">startAudioButton</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">"startAudioButton"</span><span class="p">);</span>
</span><span id="__span-18-31"><a id="__codelineno-18-31" name="__codelineno-18-31" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-31"></a><span class="nx">startAudioButton</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">"click"</span><span class="p">,</span><span class="w"> </span><span class="p">()</span><span class="w"> </span><span class="p">=&gt;</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-18-32"><a id="__codelineno-18-32" name="__codelineno-18-32" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-32"></a><span class="w">  </span><span class="nx">startAudioButton</span><span class="p">.</span><span class="nx">disabled</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">true</span><span class="p">;</span>
</span><span id="__span-18-33"><a id="__codelineno-18-33" name="__codelineno-18-33" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-33"></a><span class="w">  </span><span class="nx">startAudio</span><span class="p">();</span>
</span><span id="__span-18-34"><a id="__codelineno-18-34" name="__codelineno-18-34" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-34"></a><span class="w">  </span><span class="nx">is_audio</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">true</span><span class="p">;</span>
</span><span id="__span-18-35"><a id="__codelineno-18-35" name="__codelineno-18-35" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-35"></a><span class="w">  </span><span class="nx">connectWebsocket</span><span class="p">();</span><span class="w"> </span><span class="c1">// reconnect with the audio mode</span>
</span><span id="__span-18-36"><a id="__codelineno-18-36" name="__codelineno-18-36" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-36"></a><span class="p">});</span>
</span><span id="__span-18-37"><a id="__codelineno-18-37" name="__codelineno-18-37" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-37"></a>
</span><span id="__span-18-38"><a id="__codelineno-18-38" name="__codelineno-18-38" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-38"></a><span class="c1">// Audio recorder handler</span>
</span><span id="__span-18-39"><a id="__codelineno-18-39" name="__codelineno-18-39" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-39"></a><span class="kd">function</span><span class="w"> </span><span class="nx">audioRecorderHandler</span><span class="p">(</span><span class="nx">pcmData</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-18-40"><a id="__codelineno-18-40" name="__codelineno-18-40" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-40"></a><span class="w">  </span><span class="c1">// Send the pcm data as base64</span>
</span><span id="__span-18-41"><a id="__codelineno-18-41" name="__codelineno-18-41" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-41"></a><span class="w">  </span><span class="nx">sendMessage</span><span class="p">({</span>
</span><span id="__span-18-42"><a id="__codelineno-18-42" name="__codelineno-18-42" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-42"></a><span class="w">    </span><span class="nx">mime_type</span><span class="o">:</span><span class="w"> </span><span class="s2">"audio/pcm"</span><span class="p">,</span>
</span><span id="__span-18-43"><a id="__codelineno-18-43" name="__codelineno-18-43" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-43"></a><span class="w">    </span><span class="nx">data</span><span class="o">:</span><span class="w"> </span><span class="nx">arrayBufferToBase64</span><span class="p">(</span><span class="nx">pcmData</span><span class="p">),</span>
</span><span id="__span-18-44"><a id="__codelineno-18-44" name="__codelineno-18-44" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-44"></a><span class="w">  </span><span class="p">});</span>
</span><span id="__span-18-45"><a id="__codelineno-18-45" name="__codelineno-18-45" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-45"></a><span class="w">  </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">"[CLIENT TO AGENT] sent %s bytes"</span><span class="p">,</span><span class="w"> </span><span class="nx">pcmData</span><span class="p">.</span><span class="nx">byteLength</span><span class="p">);</span>
</span><span id="__span-18-46"><a id="__codelineno-18-46" name="__codelineno-18-46" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-46"></a><span class="p">}</span>
</span><span id="__span-18-47"><a id="__codelineno-18-47" name="__codelineno-18-47" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-47"></a>
</span><span id="__span-18-48"><a id="__codelineno-18-48" name="__codelineno-18-48" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-48"></a><span class="c1">// Encode an array buffer with Base64</span>
</span><span id="__span-18-49"><a id="__codelineno-18-49" name="__codelineno-18-49" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-49"></a><span class="kd">function</span><span class="w"> </span><span class="nx">arrayBufferToBase64</span><span class="p">(</span><span class="nx">buffer</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-18-50"><a id="__codelineno-18-50" name="__codelineno-18-50" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-50"></a><span class="w">  </span><span class="kd">let</span><span class="w"> </span><span class="nx">binary</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">;</span>
</span><span id="__span-18-51"><a id="__codelineno-18-51" name="__codelineno-18-51" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-51"></a><span class="w">  </span><span class="kd">const</span><span class="w"> </span><span class="nx">bytes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="ow">new</span><span class="w"> </span><span class="nb">Uint8Array</span><span class="p">(</span><span class="nx">buffer</span><span class="p">);</span>
</span><span id="__span-18-52"><a id="__codelineno-18-52" name="__codelineno-18-52" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-52"></a><span class="w">  </span><span class="kd">const</span><span class="w"> </span><span class="nx">len</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">bytes</span><span class="p">.</span><span class="nx">byteLength</span><span class="p">;</span>
</span><span id="__span-18-53"><a id="__codelineno-18-53" name="__codelineno-18-53" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-53"></a><span class="w">  </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="kd">let</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">0</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="nx">len</span><span class="p">;</span><span class="w"> </span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="w"> </span><span class="p">{</span>
</span><span id="__span-18-54"><a id="__codelineno-18-54" name="__codelineno-18-54" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-54"></a><span class="w">    </span><span class="nx">binary</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="nx">bytes</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span id="__span-18-55"><a id="__codelineno-18-55" name="__codelineno-18-55" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-55"></a><span class="w">  </span><span class="p">}</span>
</span><span id="__span-18-56"><a id="__codelineno-18-56" name="__codelineno-18-56" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-56"></a><span class="w">  </span><span class="k">return</span><span class="w"> </span><span class="nb">window</span><span class="p">.</span><span class="nx">btoa</span><span class="p">(</span><span class="nx">binary</span><span class="p">);</span>
</span><span id="__span-18-57"><a id="__codelineno-18-57" name="__codelineno-18-57" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__codelineno-18-57"></a><span class="p">}</span>
</span></code></pre></div>
<ul>
<li><strong>Audio Worklets:</strong> Uses <code>AudioWorkletNode</code> via <code>audio-player.js</code> (for playback) and <code>audio-recorder.js</code> (for capture).</li>
<li><strong>State Variables:</strong> Store AudioContexts and WorkletNodes (e.g., <code>audioPlayerNode</code>).</li>
<li><strong><code>startAudio()</code></strong>: Initializes player and recorder worklets. Passes <code>audioRecorderHandler</code> as callback to recorder.</li>
<li><strong>"Start Audio" Button (<code>startAudioButton</code>):</strong><ul>
<li>Requires user gesture for Web Audio API.</li>
<li>On click: disables button, calls <code>startAudio()</code>, sets <code>is_audio = true</code>, then calls <code>connectWebsocket()</code> to reconnect in audio mode (URL includes <code>?is_audio=true</code>).</li>
</ul>
</li>
<li><strong><code>audioRecorderHandler(pcmData)</code></strong>: Callback from recorder worklet with PCM audio chunks. Encodes <code>pcmData</code> to Base64 (<code>arrayBufferToBase64()</code>) and sends to server via <code>sendMessage()</code> with <code>mime_type: "audio/pcm"</code>.</li>
<li><strong>Helper Functions:</strong> <code>base64ToArray()</code> (server audio -&gt; client player) and <code>arrayBufferToBase64()</code> (client mic audio -&gt; server).</li>
</ul>
<h3 id="how-it-works-client-side-flow">How It Works (Client-Side Flow)<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#how-it-works-client-side-flow" title="Permanent link">¶</a></h3>
<ol>
<li><strong>Page Load:</strong> Establishes WebSocket in text mode.</li>
<li><strong>Text Interaction:</strong> User types/submits text; sent to server. Server text responses displayed, streamed.</li>
<li><strong>Switching to Audio Mode:</strong> "Start Audio" button click initializes audio worklets, sets <code>is_audio=true</code>, and reconnects WebSocket in audio mode.</li>
<li><strong>Audio Interaction:</strong> Recorder sends mic audio (Base64 PCM) to server. Server audio/text responses handled by <code>websocket.onmessage</code> for playback/display.</li>
<li><strong>Connection Management:</strong> Auto-reconnect on WebSocket close.</li>
</ol>
<h2 id="summary">Summary<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#summary" title="Permanent link">¶</a></h2>
<p>This article overviews the server and client code for a custom asynchronous web app built with ADK Streaming and FastAPI, enabling real-time, bidirectional voice and text communication.</p>
<p>The Python FastAPI server code initializes ADK agent sessions, configured for text or audio responses. It uses a WebSocket endpoint to handle client connections. Asynchronous tasks manage bidirectional messaging: forwarding client text or Base64-encoded PCM audio to the ADK agent, and streaming text or Base64-encoded PCM audio responses from the agent back to the client.</p>
<p>The client-side JavaScript code manages a WebSocket connection, which can be re-established to switch between text and audio modes. It sends user input (text or microphone audio captured via Web Audio API and AudioWorklets) to the server. Incoming messages from the server are processed: text is displayed (streamed), and Base64-encoded PCM audio is decoded and played using an AudioWorklet.</p>
<h3 id="next-steps-for-production">Next steps for production<a class="headerlink" href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#next-steps-for-production" title="Permanent link">¶</a></h3>
<p>When you will use the Streaming for ADK in production apps, you may want to consinder the following points:</p>
<ul>
<li><strong>Deploy Multiple Instances:</strong> Run several instances of your FastAPI application instead of a single one.</li>
<li><strong>Implement Load Balancing:</strong> Place a load balancer in front of your application instances to distribute incoming WebSocket connections.<ul>
<li><strong>Configure for WebSockets:</strong> Ensure the load balancer supports long-lived WebSocket connections and consider "sticky sessions" (session affinity) to route a client to the same backend instance, <em>or</em> design for stateless instances (see next point).</li>
</ul>
</li>
<li><strong>Externalize Session State:</strong> Replace the <code>InMemorySessionService</code> for ADK with a distributed, persistent session store. This allows any server instance to handle any user's session, enabling true statelessness at the application server level and improving fault tolerance.</li>
<li><strong>Implement Health Checks:</strong> Set up robust health checks for your WebSocket server instances so the load balancer can automatically remove unhealthy instances from rotation.</li>
<li><strong>Utilize Orchestration:</strong> Consider using an orchestration platform like Kubernetes for automated deployment, scaling, self-healing, and management of your WebSocket server instances.</li>
</ul>









  




                
              </article>
            </div>
          
          
  <script>var tabs=__md_get("__tabs");if(Array.isArray(tabs))e:for(var set of document.querySelectorAll(".tabbed-set")){var labels=set.querySelector(".tabbed-labels");for(var tab of tabs)for(var label of labels.getElementsByTagName("label"))if(label.innerText.trim()===tab){var input=document.getElementById(label.htmlFor);input.checked=!0;continue e}}</script>

<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
          <button type="button" class="md-top md-icon" data-md-component="top" hidden="" tabindex="-1" style="top: 69px;">
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 20h-2V8l-5.5 5.5-1.42-1.42L12 4.16l7.92 7.92-1.42 1.42L13 8z"></path></svg>
  Back to top
</button>
        
      </main>
      
        <footer class="md-footer">
  
    
      
      <nav class="md-footer__inner md-grid" aria-label="Footer">
        
          
          <a href="https://google.github.io/adk-docs/streaming/custom-streaming/" class="md-footer__link md-footer__link--prev" aria-label="Previous: Custom Audio Bidi-streaming app sample (SSE)">
            <div class="md-footer__button md-icon">
              
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"></path></svg>
            </div>
            <div class="md-footer__title">
              <span class="md-footer__direction">
                Previous
              </span>
              <div class="md-ellipsis">
                Custom Audio Bidi-streaming app sample (SSE)
              </div>
            </div>
          </a>
        
        
          
          <a href="https://google.github.io/adk-docs/streaming/dev-guide/part1/" class="md-footer__link md-footer__link--next" aria-label="Next: Bidi-streaming development guide series">
            <div class="md-footer__title">
              <span class="md-footer__direction">
                Next
              </span>
              <div class="md-ellipsis">
                Bidi-streaming development guide series
              </div>
            </div>
            <div class="md-footer__button md-icon">
              
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M4 11v2h12l-5.5 5.5 1.42 1.42L19.84 12l-7.92-7.92L10.5 5.5 16 11z"></path></svg>
            </div>
          </a>
        
      </nav>
    
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
    <div class="md-copyright__highlight">
      Copyright Google 2025&nbsp;&nbsp;|&nbsp;&nbsp;<a href="https://policies.google.com/terms">Terms</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="https://policies.google.com/privacy">Privacy</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="https://google.github.io/adk-docs/streaming/custom-streaming-ws/#__consent">Manage cookies</a>
    </div>
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
      <div class="md-progress" data-md-component="progress" role="progressbar" style="--md-progress-value: 680.1241468762546;"></div>
    
    
      <div class="md-consent" data-md-component="consent" id="__consent" hidden="">
        <div class="md-consent__overlay"></div>
        <aside class="md-consent__inner">
          <form class="md-consent__form md-grid md-typeset" name="consent">
            


  


<h4>Cookie consent</h4>
<p>We use cookies to recognize repeated visits and preferences, as well as to measure the effectiveness of our documentation and whether users find the information they need. With your consent, you're helping us to make our documentation better.</p>
<input class="md-toggle" type="checkbox" id="__settings">
<div class="md-consent__settings">
  <ul class="task-list">
    
    
      
        
  
  
    
    
  
  <li class="task-list-item">
    <label class="task-list-control">
      <input type="checkbox" name="analytics" checked="">
      <span class="task-list-indicator"></span>
      Google Analytics
    </label>
  </li>

      
    
    
      
        
  
  
    
    
  
  <li class="task-list-item">
    <label class="task-list-control">
      <input type="checkbox" name="github" checked="">
      <span class="task-list-indicator"></span>
      GitHub
    </label>
  </li>

      
    
    
  </ul>
</div>
<div class="md-consent__controls">
  
    
      <button class="md-button md-button--primary">Accept</button>
    
    
    
  
    
    
    
      <label class="md-button" for="__settings">Manage settings</label>
    
  
</div>
          </form>
        </aside>
      </div>
      <script>var consent=__md_get("__consent");if(consent)for(var input of document.forms.consent.elements)input.name&&(input.checked=consent[input.name]||!1);else"file:"!==location.protocol&&setTimeout((function(){document.querySelector("[data-md-component=consent]").hidden=!1}),250);var form=document.forms.consent;for(var action of["submit","reset"])form.addEventListener(action,(function(e){if(e.preventDefault(),"reset"===e.type)for(var n of document.forms.consent.elements)n.name&&(n.checked=!1);__md_set("__consent",Object.fromEntries(Array.from(new FormData(form).keys()).map((function(e){return[e,!0]})))),location.hash="",location.reload()}))</script>
    
    
      
      <script id="__config" type="application/json">{"base": "../../..", "features": ["content.action.edit", "content.code.annotate", "content.code.copy", "content.code.select", "content.tabs.link", "content.tooltips", "navigation.footer", "navigation.indexes", "navigation.instant", "navigation.instant.progress", "navigation.path", "navigation.top", "navigation.tracking", "toc.follow"], "search": "../../../assets/javascripts/workers/search.d50fe291.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="./webpage_files/bundle.13a4f30d.min.js"></script>
      
    
  
</body></html>